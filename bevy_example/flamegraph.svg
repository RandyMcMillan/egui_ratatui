<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="16123"><g><title>bevy_example`&lt;naga_oil::compose::preprocess::Preprocessor as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="0.0248%" y="901" width="0.0124%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="2"/><text x="0.2748%" y="911.50"></text></g><g><title>bevy_example`regex::regex::string::Regex::new (2 samples, 0.01%)</title><rect x="0.0248%" y="885" width="0.0124%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="2"/><text x="0.2748%" y="895.50"></text></g><g><title>bevy_example`regex::builders::Builder::build_one_string (2 samples, 0.01%)</title><rect x="0.0248%" y="869" width="0.0124%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="2"/><text x="0.2748%" y="879.50"></text></g><g><title>bevy_example`regex_automata::meta::regex::Builder::build (2 samples, 0.01%)</title><rect x="0.0248%" y="853" width="0.0124%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="2"/><text x="0.2748%" y="863.50"></text></g><g><title>bevy_example`naga_oil::compose::Composer::non_validating (3 samples, 0.02%)</title><rect x="0.0248%" y="933" width="0.0186%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="3"/><text x="0.2748%" y="943.50"></text></g><g><title>bevy_example`&lt;naga_oil::compose::Composer as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="0.0248%" y="917" width="0.0186%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="3"/><text x="0.2748%" y="927.50"></text></g><g><title>bevy_example`&lt;naga_oil::compose::preprocess::Preprocessor as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="0.0434%" y="901" width="0.0124%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="2"/><text x="0.2934%" y="911.50"></text></g><g><title>bevy_example`regex::regex::string::Regex::new (2 samples, 0.01%)</title><rect x="0.0434%" y="885" width="0.0124%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="2"/><text x="0.2934%" y="895.50"></text></g><g><title>bevy_example`regex::builders::Builder::build_one_string (2 samples, 0.01%)</title><rect x="0.0434%" y="869" width="0.0124%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="2"/><text x="0.2934%" y="879.50"></text></g><g><title>bevy_example`regex_automata::meta::regex::Builder::build (2 samples, 0.01%)</title><rect x="0.0434%" y="853" width="0.0124%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="2"/><text x="0.2934%" y="863.50"></text></g><g><title>bevy_example`regex_automata::meta::strategy::new (2 samples, 0.01%)</title><rect x="0.0434%" y="837" width="0.0124%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="2"/><text x="0.2934%" y="847.50"></text></g><g><title>bevy_example`&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::finish (6 samples, 0.04%)</title><rect x="0.0248%" y="965" width="0.0372%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="6"/><text x="0.2748%" y="975.50"></text></g><g><title>bevy_example`bevy_render::render_resource::pipeline_cache::PipelineCache::new (6 samples, 0.04%)</title><rect x="0.0248%" y="949" width="0.0372%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="6"/><text x="0.2748%" y="959.50"></text></g><g><title>bevy_example`naga_oil::compose::Composer::with_capabilities (3 samples, 0.02%)</title><rect x="0.0434%" y="933" width="0.0186%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="3"/><text x="0.2934%" y="943.50"></text></g><g><title>bevy_example`&lt;naga_oil::compose::Composer as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="0.0434%" y="917" width="0.0186%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="3"/><text x="0.2934%" y="927.50"></text></g><g><title>bevy_example`bevy_app::app::App::finish (8 samples, 0.05%)</title><rect x="0.0186%" y="981" width="0.0496%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="8"/><text x="0.2686%" y="991.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="0.0744%" y="757" width="0.0186%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="3"/><text x="0.3244%" y="767.50"></text></g><g><title>bevy_example`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="0.0682%" y="917" width="0.0310%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="5"/><text x="0.3182%" y="927.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::storage::blob_vec::BlobVec as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="0.0682%" y="901" width="0.0310%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="5"/><text x="0.3182%" y="911.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_render::pipelined_rendering::RenderAppChannels&gt; (4 samples, 0.02%)</title><rect x="0.0744%" y="885" width="0.0248%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="4"/><text x="0.3244%" y="895.50"></text></g><g><title>bevy_example`&lt;bevy_render::pipelined_rendering::RenderAppChannels as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="0.0744%" y="869" width="0.0248%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="4"/><text x="0.3244%" y="879.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_app::sub_app::SubApp&gt; (4 samples, 0.02%)</title><rect x="0.0744%" y="853" width="0.0248%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="4"/><text x="0.3244%" y="863.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_ecs::storage::Storages&gt; (4 samples, 0.02%)</title><rect x="0.0744%" y="837" width="0.0248%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="4"/><text x="0.3244%" y="847.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_ecs::storage::resource::Resources&lt;_&gt;&gt; (4 samples, 0.02%)</title><rect x="0.0744%" y="821" width="0.0248%" height="15" fill="rgb(247,18,42)" fg:x="12" fg:w="4"/><text x="0.3244%" y="831.50"></text></g><g><title>bevy_example`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="0.0744%" y="805" width="0.0248%" height="15" fill="rgb(241,131,45)" fg:x="12" fg:w="4"/><text x="0.3244%" y="815.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::storage::blob_vec::BlobVec as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="0.0744%" y="789" width="0.0248%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="4"/><text x="0.3244%" y="799.50"></text></g><g><title>bevy_example`bevy_ecs::component::ComponentDescriptor::drop_ptr (4 samples, 0.02%)</title><rect x="0.0744%" y="773" width="0.0248%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="4"/><text x="0.3244%" y="783.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt;&gt; (6 samples, 0.04%)</title><rect x="0.0682%" y="981" width="0.0372%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="6"/><text x="0.3182%" y="991.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_app::app::App&gt; (6 samples, 0.04%)</title><rect x="0.0682%" y="965" width="0.0372%" height="15" fill="rgb(214,148,48)" fg:x="11" fg:w="6"/><text x="0.3182%" y="975.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_ecs::storage::Storages&gt; (6 samples, 0.04%)</title><rect x="0.0682%" y="949" width="0.0372%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="6"/><text x="0.3182%" y="959.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_ecs::storage::resource::Resources&lt;_&gt;&gt; (6 samples, 0.04%)</title><rect x="0.0682%" y="933" width="0.0372%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="6"/><text x="0.3182%" y="943.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (3 samples, 0.02%)</title><rect x="0.1178%" y="901" width="0.0186%" height="15" fill="rgb(229,88,8)" fg:x="19" fg:w="3"/><text x="0.3678%" y="911.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _setMenuBarObscured:] (3 samples, 0.02%)</title><rect x="0.1178%" y="885" width="0.0186%" height="15" fill="rgb(213,181,19)" fg:x="19" fg:w="3"/><text x="0.3678%" y="895.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _updateMenuBarObscured:] (3 samples, 0.02%)</title><rect x="0.1178%" y="869" width="0.0186%" height="15" fill="rgb(254,191,54)" fg:x="19" fg:w="3"/><text x="0.3678%" y="879.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _showMenuBarWithAnimation:postingEvent:orderWindow:forAutoShow:noteVisibility:] (3 samples, 0.02%)</title><rect x="0.1178%" y="853" width="0.0186%" height="15" fill="rgb(241,83,37)" fg:x="19" fg:w="3"/><text x="0.3678%" y="863.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution] (3 samples, 0.02%)</title><rect x="0.1178%" y="837" width="0.0186%" height="15" fill="rgb(233,36,39)" fg:x="19" fg:w="3"/><text x="0.3678%" y="847.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _forEachWindowDo:withBlock:] (3 samples, 0.02%)</title><rect x="0.1178%" y="821" width="0.0186%" height="15" fill="rgb(226,3,54)" fg:x="19" fg:w="3"/><text x="0.3678%" y="831.50"></text></g><g><title>AppKit`__62-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution]_block_invoke (2 samples, 0.01%)</title><rect x="0.1240%" y="805" width="0.0124%" height="15" fill="rgb(245,192,40)" fg:x="20" fg:w="2"/><text x="0.3740%" y="815.50"></text></g><g><title>AppKit`-[NSMenuBarLocalDisplayWindow endUpdates] (2 samples, 0.01%)</title><rect x="0.1240%" y="789" width="0.0124%" height="15" fill="rgb(238,167,29)" fg:x="20" fg:w="2"/><text x="0.3740%" y="799.50"></text></g><g><title>AppKit`-[NSMenuBarLocalDisplayWindow _ensureReplicantWindows] (2 samples, 0.01%)</title><rect x="0.1240%" y="773" width="0.0124%" height="15" fill="rgb(232,182,51)" fg:x="20" fg:w="2"/><text x="0.3740%" y="783.50"></text></g><g><title>AppKit`-[NSMenuBarImpl backingViewsForDisplayID:completionHandler:] (2 samples, 0.01%)</title><rect x="0.1240%" y="757" width="0.0124%" height="15" fill="rgb(231,60,39)" fg:x="20" fg:w="2"/><text x="0.3740%" y="767.50"></text></g><g><title>AppKit`__54-[NSMenuBarLocalDisplayWindow _ensureReplicantWindows]_block_invoke (2 samples, 0.01%)</title><rect x="0.1240%" y="741" width="0.0124%" height="15" fill="rgb(208,69,12)" fg:x="20" fg:w="2"/><text x="0.3740%" y="751.50"></text></g><g><title>AppKit`-[NSMenuBarLocalDisplayWindow _replicantWindowWithView:] (2 samples, 0.01%)</title><rect x="0.1240%" y="725" width="0.0124%" height="15" fill="rgb(235,93,37)" fg:x="20" fg:w="2"/><text x="0.3740%" y="735.50"></text></g><g><title>AppKit`-[NSMenuBarReplicantWindow initWithView:] (2 samples, 0.01%)</title><rect x="0.1240%" y="709" width="0.0124%" height="15" fill="rgb(213,116,39)" fg:x="20" fg:w="2"/><text x="0.3740%" y="719.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (2 samples, 0.01%)</title><rect x="0.1240%" y="693" width="0.0124%" height="15" fill="rgb(222,207,29)" fg:x="20" fg:w="2"/><text x="0.3740%" y="703.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (2 samples, 0.01%)</title><rect x="0.1240%" y="677" width="0.0124%" height="15" fill="rgb(206,96,30)" fg:x="20" fg:w="2"/><text x="0.3740%" y="687.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (2 samples, 0.01%)</title><rect x="0.1240%" y="661" width="0.0124%" height="15" fill="rgb(218,138,4)" fg:x="20" fg:w="2"/><text x="0.3740%" y="671.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (2 samples, 0.01%)</title><rect x="0.1551%" y="437" width="0.0124%" height="15" fill="rgb(250,191,14)" fg:x="25" fg:w="2"/><text x="0.4051%" y="447.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (2 samples, 0.01%)</title><rect x="0.1551%" y="421" width="0.0124%" height="15" fill="rgb(239,60,40)" fg:x="25" fg:w="2"/><text x="0.4051%" y="431.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (2 samples, 0.01%)</title><rect x="0.1551%" y="405" width="0.0124%" height="15" fill="rgb(206,27,48)" fg:x="25" fg:w="2"/><text x="0.4051%" y="415.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::resource_scope (3 samples, 0.02%)</title><rect x="0.1551%" y="517" width="0.0186%" height="15" fill="rgb(225,35,8)" fg:x="25" fg:w="3"/><text x="0.4051%" y="527.50"></text></g><g><title>bevy_example`bevy_render::initialize_render_app::_{{closure}} (3 samples, 0.02%)</title><rect x="0.1551%" y="501" width="0.0186%" height="15" fill="rgb(250,213,24)" fg:x="25" fg:w="3"/><text x="0.4051%" y="511.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::schedule_scope (3 samples, 0.02%)</title><rect x="0.1551%" y="485" width="0.0186%" height="15" fill="rgb(247,123,22)" fg:x="25" fg:w="3"/><text x="0.4051%" y="495.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (3 samples, 0.02%)</title><rect x="0.1551%" y="469" width="0.0186%" height="15" fill="rgb(231,138,38)" fg:x="25" fg:w="3"/><text x="0.4051%" y="479.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (3 samples, 0.02%)</title><rect x="0.1551%" y="453" width="0.0186%" height="15" fill="rgb(231,145,46)" fg:x="25" fg:w="3"/><text x="0.4051%" y="463.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (6 samples, 0.04%)</title><rect x="0.1489%" y="853" width="0.0372%" height="15" fill="rgb(251,118,11)" fg:x="24" fg:w="6"/><text x="0.3989%" y="863.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (6 samples, 0.04%)</title><rect x="0.1489%" y="837" width="0.0372%" height="15" fill="rgb(217,147,25)" fg:x="24" fg:w="6"/><text x="0.3989%" y="847.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (6 samples, 0.04%)</title><rect x="0.1489%" y="821" width="0.0372%" height="15" fill="rgb(247,81,37)" fg:x="24" fg:w="6"/><text x="0.3989%" y="831.50"></text></g><g><title>AppKit`NSControlTrackMouse (6 samples, 0.04%)</title><rect x="0.1489%" y="805" width="0.0372%" height="15" fill="rgb(209,12,38)" fg:x="24" fg:w="6"/><text x="0.3989%" y="815.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (6 samples, 0.04%)</title><rect x="0.1489%" y="789" width="0.0372%" height="15" fill="rgb(227,1,9)" fg:x="24" fg:w="6"/><text x="0.3989%" y="799.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (6 samples, 0.04%)</title><rect x="0.1489%" y="773" width="0.0372%" height="15" fill="rgb(248,47,43)" fg:x="24" fg:w="6"/><text x="0.3989%" y="783.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (6 samples, 0.04%)</title><rect x="0.1489%" y="757" width="0.0372%" height="15" fill="rgb(221,10,30)" fg:x="24" fg:w="6"/><text x="0.3989%" y="767.50"></text></g><g><title>AppKit`_DPSNextEvent (6 samples, 0.04%)</title><rect x="0.1489%" y="741" width="0.0372%" height="15" fill="rgb(210,229,1)" fg:x="24" fg:w="6"/><text x="0.3989%" y="751.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (6 samples, 0.04%)</title><rect x="0.1489%" y="725" width="0.0372%" height="15" fill="rgb(222,148,37)" fg:x="24" fg:w="6"/><text x="0.3989%" y="735.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (6 samples, 0.04%)</title><rect x="0.1489%" y="709" width="0.0372%" height="15" fill="rgb(234,67,33)" fg:x="24" fg:w="6"/><text x="0.3989%" y="719.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (6 samples, 0.04%)</title><rect x="0.1489%" y="693" width="0.0372%" height="15" fill="rgb(247,98,35)" fg:x="24" fg:w="6"/><text x="0.3989%" y="703.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (6 samples, 0.04%)</title><rect x="0.1489%" y="677" width="0.0372%" height="15" fill="rgb(247,138,52)" fg:x="24" fg:w="6"/><text x="0.3989%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (6 samples, 0.04%)</title><rect x="0.1489%" y="661" width="0.0372%" height="15" fill="rgb(213,79,30)" fg:x="24" fg:w="6"/><text x="0.3989%" y="671.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (6 samples, 0.04%)</title><rect x="0.1489%" y="645" width="0.0372%" height="15" fill="rgb(246,177,23)" fg:x="24" fg:w="6"/><text x="0.3989%" y="655.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (6 samples, 0.04%)</title><rect x="0.1489%" y="629" width="0.0372%" height="15" fill="rgb(230,62,27)" fg:x="24" fg:w="6"/><text x="0.3989%" y="639.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::observer::control_flow_end_handler (5 samples, 0.03%)</title><rect x="0.1551%" y="613" width="0.0310%" height="15" fill="rgb(216,154,8)" fg:x="25" fg:w="5"/><text x="0.4051%" y="623.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::app_state::ApplicationDelegate::cleared (5 samples, 0.03%)</title><rect x="0.1551%" y="597" width="0.0310%" height="15" fill="rgb(244,35,45)" fg:x="25" fg:w="5"/><text x="0.4051%" y="607.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::event_handler::EventHandler::handle_event (5 samples, 0.03%)</title><rect x="0.1551%" y="581" width="0.0310%" height="15" fill="rgb(251,115,12)" fg:x="25" fg:w="5"/><text x="0.4051%" y="591.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (5 samples, 0.03%)</title><rect x="0.1551%" y="565" width="0.0310%" height="15" fill="rgb(240,54,50)" fg:x="25" fg:w="5"/><text x="0.4051%" y="575.50"></text></g><g><title>bevy_example`&lt;bevy_winit::state::WinitAppRunnerState&lt;T&gt; as winit::application::ApplicationHandler&lt;T&gt;&gt;::about_to_wait (5 samples, 0.03%)</title><rect x="0.1551%" y="549" width="0.0310%" height="15" fill="rgb(233,84,52)" fg:x="25" fg:w="5"/><text x="0.4051%" y="559.50"></text></g><g><title>bevy_example`bevy_app::sub_app::SubApps::update (5 samples, 0.03%)</title><rect x="0.1551%" y="533" width="0.0310%" height="15" fill="rgb(207,117,47)" fg:x="25" fg:w="5"/><text x="0.4051%" y="543.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::schedule_scope (2 samples, 0.01%)</title><rect x="0.1737%" y="517" width="0.0124%" height="15" fill="rgb(249,43,39)" fg:x="28" fg:w="2"/><text x="0.4237%" y="527.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (2 samples, 0.01%)</title><rect x="0.1737%" y="501" width="0.0124%" height="15" fill="rgb(209,38,44)" fg:x="28" fg:w="2"/><text x="0.4237%" y="511.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (2 samples, 0.01%)</title><rect x="0.1737%" y="485" width="0.0124%" height="15" fill="rgb(236,212,23)" fg:x="28" fg:w="2"/><text x="0.4237%" y="495.50"></text></g><g><title>bevy_example`bevy_ecs::system::system::System::run (2 samples, 0.01%)</title><rect x="0.1737%" y="469" width="0.0124%" height="15" fill="rgb(242,79,21)" fg:x="28" fg:w="2"/><text x="0.4237%" y="479.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::last_change_tick_scope (2 samples, 0.01%)</title><rect x="0.1737%" y="453" width="0.0124%" height="15" fill="rgb(211,96,35)" fg:x="28" fg:w="2"/><text x="0.4237%" y="463.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::resource_scope (2 samples, 0.01%)</title><rect x="0.1737%" y="437" width="0.0124%" height="15" fill="rgb(253,215,40)" fg:x="28" fg:w="2"/><text x="0.4237%" y="447.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::try_schedule_scope (2 samples, 0.01%)</title><rect x="0.1737%" y="421" width="0.0124%" height="15" fill="rgb(211,81,21)" fg:x="28" fg:w="2"/><text x="0.4237%" y="431.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (2 samples, 0.01%)</title><rect x="0.1737%" y="405" width="0.0124%" height="15" fill="rgb(208,190,38)" fg:x="28" fg:w="2"/><text x="0.4237%" y="415.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (2 samples, 0.01%)</title><rect x="0.1737%" y="389" width="0.0124%" height="15" fill="rgb(235,213,38)" fg:x="28" fg:w="2"/><text x="0.4237%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (10 samples, 0.06%)</title><rect x="0.1365%" y="885" width="0.0620%" height="15" fill="rgb(237,122,38)" fg:x="22" fg:w="10"/><text x="0.3865%" y="895.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (8 samples, 0.05%)</title><rect x="0.1489%" y="869" width="0.0496%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="8"/><text x="0.3989%" y="879.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (11 samples, 0.07%)</title><rect x="0.1365%" y="901" width="0.0682%" height="15" fill="rgb(240,68,47)" fg:x="22" fg:w="11"/><text x="0.3865%" y="911.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _mouseMoved:] (3 samples, 0.02%)</title><rect x="0.2171%" y="837" width="0.0186%" height="15" fill="rgb(210,16,53)" fg:x="35" fg:w="3"/><text x="0.4671%" y="847.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:modifierFlags:] (3 samples, 0.02%)</title><rect x="0.2171%" y="821" width="0.0186%" height="15" fill="rgb(235,124,12)" fg:x="35" fg:w="3"/><text x="0.4671%" y="831.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (22 samples, 0.14%)</title><rect x="0.1054%" y="949" width="0.1365%" height="15" fill="rgb(224,169,11)" fg:x="17" fg:w="22"/><text x="0.3554%" y="959.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::app::WinitApplication::send_event (21 samples, 0.13%)</title><rect x="0.1116%" y="933" width="0.1302%" height="15" fill="rgb(250,166,2)" fg:x="18" fg:w="21"/><text x="0.3616%" y="943.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (21 samples, 0.13%)</title><rect x="0.1116%" y="917" width="0.1302%" height="15" fill="rgb(242,216,29)" fg:x="18" fg:w="21"/><text x="0.3616%" y="927.50"></text></g><g><title>AppKit`routeMouseMovedEvent (4 samples, 0.02%)</title><rect x="0.2171%" y="901" width="0.0248%" height="15" fill="rgb(230,116,27)" fg:x="35" fg:w="4"/><text x="0.4671%" y="911.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (4 samples, 0.02%)</title><rect x="0.2171%" y="885" width="0.0248%" height="15" fill="rgb(228,99,48)" fg:x="35" fg:w="4"/><text x="0.4671%" y="895.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (4 samples, 0.02%)</title><rect x="0.2171%" y="869" width="0.0248%" height="15" fill="rgb(253,11,6)" fg:x="35" fg:w="4"/><text x="0.4671%" y="879.50"></text></g><g><title>AppKit`_routeMouseMovedEvent (4 samples, 0.02%)</title><rect x="0.2171%" y="853" width="0.0248%" height="15" fill="rgb(247,143,39)" fg:x="35" fg:w="4"/><text x="0.4671%" y="863.50"></text></g><g><title>AppKit`+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (6 samples, 0.04%)</title><rect x="0.2729%" y="565" width="0.0372%" height="15" fill="rgb(236,97,10)" fg:x="44" fg:w="6"/><text x="0.5229%" y="575.50"></text></g><g><title>AppKit`WritingToolsUILibraryCore (6 samples, 0.04%)</title><rect x="0.2729%" y="549" width="0.0372%" height="15" fill="rgb(233,208,19)" fg:x="44" fg:w="6"/><text x="0.5229%" y="559.50"></text></g><g><title>SoftLinking`_sl_dlopen (6 samples, 0.04%)</title><rect x="0.2729%" y="533" width="0.0372%" height="15" fill="rgb(216,164,2)" fg:x="44" fg:w="6"/><text x="0.5229%" y="543.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (6 samples, 0.04%)</title><rect x="0.2729%" y="517" width="0.0372%" height="15" fill="rgb(220,129,5)" fg:x="44" fg:w="6"/><text x="0.5229%" y="527.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (4 samples, 0.02%)</title><rect x="0.2853%" y="501" width="0.0248%" height="15" fill="rgb(242,17,10)" fg:x="46" fg:w="4"/><text x="0.5353%" y="511.50"></text></g><g><title>libobjc.A.dylib`map_images (4 samples, 0.02%)</title><rect x="0.2853%" y="485" width="0.0248%" height="15" fill="rgb(242,107,0)" fg:x="46" fg:w="4"/><text x="0.5353%" y="495.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (4 samples, 0.02%)</title><rect x="0.2853%" y="469" width="0.0248%" height="15" fill="rgb(251,28,31)" fg:x="46" fg:w="4"/><text x="0.5353%" y="479.50"></text></g><g><title>libobjc.A.dylib`load_categories_nolock(header_info*) (2 samples, 0.01%)</title><rect x="0.2977%" y="453" width="0.0124%" height="15" fill="rgb(233,223,10)" fg:x="48" fg:w="2"/><text x="0.5477%" y="463.50"></text></g><g><title>libobjc.A.dylib`load_categories_nolock(header_info*)::$_0::operator() (2 samples, 0.01%)</title><rect x="0.2977%" y="437" width="0.0124%" height="15" fill="rgb(215,21,27)" fg:x="48" fg:w="2"/><text x="0.5477%" y="447.50"></text></g><g><title>AppKit`-[NSApplication setMainMenu:] (7 samples, 0.04%)</title><rect x="0.2729%" y="645" width="0.0434%" height="15" fill="rgb(232,23,21)" fg:x="44" fg:w="7"/><text x="0.5229%" y="655.50"></text></g><g><title>AppKit`-[NSMenu _setMenuName:] (7 samples, 0.04%)</title><rect x="0.2729%" y="629" width="0.0434%" height="15" fill="rgb(244,5,23)" fg:x="44" fg:w="7"/><text x="0.5229%" y="639.50"></text></g><g><title>AppKit`-[NSApplication setMainMenu:] (7 samples, 0.04%)</title><rect x="0.2729%" y="613" width="0.0434%" height="15" fill="rgb(226,81,46)" fg:x="44" fg:w="7"/><text x="0.5229%" y="623.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (7 samples, 0.04%)</title><rect x="0.2729%" y="597" width="0.0434%" height="15" fill="rgb(247,70,30)" fg:x="44" fg:w="7"/><text x="0.5229%" y="607.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (7 samples, 0.04%)</title><rect x="0.2729%" y="581" width="0.0434%" height="15" fill="rgb(212,68,19)" fg:x="44" fg:w="7"/><text x="0.5229%" y="591.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (13 samples, 0.08%)</title><rect x="0.2543%" y="917" width="0.0806%" height="15" fill="rgb(240,187,13)" fg:x="41" fg:w="13"/><text x="0.5043%" y="927.50"></text></g><g><title>AE`aeProcessAppleEvent (13 samples, 0.08%)</title><rect x="0.2543%" y="901" width="0.0806%" height="15" fill="rgb(223,113,26)" fg:x="41" fg:w="13"/><text x="0.5043%" y="911.50"></text></g><g><title>AE`0x00000001913caa2c (13 samples, 0.08%)</title><rect x="0.2543%" y="885" width="0.0806%" height="15" fill="rgb(206,192,2)" fg:x="41" fg:w="13"/><text x="0.5043%" y="895.50"></text></g><g><title>AE`0x00000001913caad8 (13 samples, 0.08%)</title><rect x="0.2543%" y="869" width="0.0806%" height="15" fill="rgb(241,108,4)" fg:x="41" fg:w="13"/><text x="0.5043%" y="879.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (13 samples, 0.08%)</title><rect x="0.2543%" y="853" width="0.0806%" height="15" fill="rgb(247,173,49)" fg:x="41" fg:w="13"/><text x="0.5043%" y="863.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (13 samples, 0.08%)</title><rect x="0.2543%" y="837" width="0.0806%" height="15" fill="rgb(224,114,35)" fg:x="41" fg:w="13"/><text x="0.5043%" y="847.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (13 samples, 0.08%)</title><rect x="0.2543%" y="821" width="0.0806%" height="15" fill="rgb(245,159,27)" fg:x="41" fg:w="13"/><text x="0.5043%" y="831.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (13 samples, 0.08%)</title><rect x="0.2543%" y="805" width="0.0806%" height="15" fill="rgb(245,172,44)" fg:x="41" fg:w="13"/><text x="0.5043%" y="815.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (12 samples, 0.07%)</title><rect x="0.2605%" y="789" width="0.0744%" height="15" fill="rgb(236,23,11)" fg:x="42" fg:w="12"/><text x="0.5105%" y="799.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (11 samples, 0.07%)</title><rect x="0.2667%" y="773" width="0.0682%" height="15" fill="rgb(205,117,38)" fg:x="43" fg:w="11"/><text x="0.5167%" y="783.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (11 samples, 0.07%)</title><rect x="0.2667%" y="757" width="0.0682%" height="15" fill="rgb(237,72,25)" fg:x="43" fg:w="11"/><text x="0.5167%" y="767.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (11 samples, 0.07%)</title><rect x="0.2667%" y="741" width="0.0682%" height="15" fill="rgb(244,70,9)" fg:x="43" fg:w="11"/><text x="0.5167%" y="751.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (11 samples, 0.07%)</title><rect x="0.2667%" y="725" width="0.0682%" height="15" fill="rgb(217,125,39)" fg:x="43" fg:w="11"/><text x="0.5167%" y="735.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (11 samples, 0.07%)</title><rect x="0.2667%" y="709" width="0.0682%" height="15" fill="rgb(235,36,10)" fg:x="43" fg:w="11"/><text x="0.5167%" y="719.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (11 samples, 0.07%)</title><rect x="0.2667%" y="693" width="0.0682%" height="15" fill="rgb(251,123,47)" fg:x="43" fg:w="11"/><text x="0.5167%" y="703.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::app_state::ApplicationDelegate::app_did_finish_launching (11 samples, 0.07%)</title><rect x="0.2667%" y="677" width="0.0682%" height="15" fill="rgb(221,13,13)" fg:x="43" fg:w="11"/><text x="0.5167%" y="687.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::menu::initialize (10 samples, 0.06%)</title><rect x="0.2729%" y="661" width="0.0620%" height="15" fill="rgb(238,131,9)" fg:x="44" fg:w="10"/><text x="0.5229%" y="671.50"></text></g><g><title>bevy_example`objc2_app_kit::generated::__NSMenuItem::NSMenuItem::separatorItem (3 samples, 0.02%)</title><rect x="0.3163%" y="645" width="0.0186%" height="15" fill="rgb(211,50,8)" fg:x="51" fg:w="3"/><text x="0.5663%" y="655.50"></text></g><g><title>AppKit`+[NSMenuItem separatorItem] (3 samples, 0.02%)</title><rect x="0.3163%" y="629" width="0.0186%" height="15" fill="rgb(245,182,24)" fg:x="51" fg:w="3"/><text x="0.5663%" y="639.50"></text></g><g><title>AppKit`-[NSMenuItem _configureAsSeparatorItem] (3 samples, 0.02%)</title><rect x="0.3163%" y="613" width="0.0186%" height="15" fill="rgb(242,14,37)" fg:x="51" fg:w="3"/><text x="0.5663%" y="623.50"></text></g><g><title>AppKit`-[NSMenuItem setTitle:] (3 samples, 0.02%)</title><rect x="0.3163%" y="597" width="0.0186%" height="15" fill="rgb(246,228,12)" fg:x="51" fg:w="3"/><text x="0.5663%" y="607.50"></text></g><g><title>Foundation`_NSFaultInObject (3 samples, 0.02%)</title><rect x="0.3163%" y="581" width="0.0186%" height="15" fill="rgb(213,55,15)" fg:x="51" fg:w="3"/><text x="0.5663%" y="591.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (3 samples, 0.02%)</title><rect x="0.3163%" y="565" width="0.0186%" height="15" fill="rgb(209,9,3)" fg:x="51" fg:w="3"/><text x="0.5663%" y="575.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (3 samples, 0.02%)</title><rect x="0.3163%" y="549" width="0.0186%" height="15" fill="rgb(230,59,30)" fg:x="51" fg:w="3"/><text x="0.5663%" y="559.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (3 samples, 0.02%)</title><rect x="0.3163%" y="533" width="0.0186%" height="15" fill="rgb(209,121,21)" fg:x="51" fg:w="3"/><text x="0.5663%" y="543.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (2 samples, 0.01%)</title><rect x="0.3225%" y="517" width="0.0124%" height="15" fill="rgb(220,109,13)" fg:x="52" fg:w="2"/><text x="0.5725%" y="527.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (9 samples, 0.06%)</title><rect x="0.3535%" y="773" width="0.0558%" height="15" fill="rgb(232,18,1)" fg:x="57" fg:w="9"/><text x="0.6035%" y="783.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (9 samples, 0.06%)</title><rect x="0.3535%" y="757" width="0.0558%" height="15" fill="rgb(215,41,42)" fg:x="57" fg:w="9"/><text x="0.6035%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (9 samples, 0.06%)</title><rect x="0.3535%" y="741" width="0.0558%" height="15" fill="rgb(224,123,36)" fg:x="57" fg:w="9"/><text x="0.6035%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (9 samples, 0.06%)</title><rect x="0.3535%" y="725" width="0.0558%" height="15" fill="rgb(240,125,3)" fg:x="57" fg:w="9"/><text x="0.6035%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.05%)</title><rect x="0.3597%" y="709" width="0.0496%" height="15" fill="rgb(205,98,50)" fg:x="58" fg:w="8"/><text x="0.6097%" y="719.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (13 samples, 0.08%)</title><rect x="0.3473%" y="789" width="0.0806%" height="15" fill="rgb(205,185,37)" fg:x="56" fg:w="13"/><text x="0.5973%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.01%)</title><rect x="0.4156%" y="773" width="0.0124%" height="15" fill="rgb(238,207,15)" fg:x="67" fg:w="2"/><text x="0.6656%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.01%)</title><rect x="0.4156%" y="757" width="0.0124%" height="15" fill="rgb(213,199,42)" fg:x="67" fg:w="2"/><text x="0.6656%" y="767.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (15 samples, 0.09%)</title><rect x="0.3411%" y="837" width="0.0930%" height="15" fill="rgb(235,201,11)" fg:x="55" fg:w="15"/><text x="0.5911%" y="847.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (15 samples, 0.09%)</title><rect x="0.3411%" y="821" width="0.0930%" height="15" fill="rgb(207,46,11)" fg:x="55" fg:w="15"/><text x="0.5911%" y="831.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (15 samples, 0.09%)</title><rect x="0.3411%" y="805" width="0.0930%" height="15" fill="rgb(241,35,35)" fg:x="55" fg:w="15"/><text x="0.5911%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (19 samples, 0.12%)</title><rect x="0.3411%" y="853" width="0.1178%" height="15" fill="rgb(243,32,47)" fg:x="55" fg:w="19"/><text x="0.5911%" y="863.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (2 samples, 0.01%)</title><rect x="0.4590%" y="837" width="0.0124%" height="15" fill="rgb(247,202,23)" fg:x="74" fg:w="2"/><text x="0.7090%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (2 samples, 0.01%)</title><rect x="0.4590%" y="821" width="0.0124%" height="15" fill="rgb(219,102,11)" fg:x="74" fg:w="2"/><text x="0.7090%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (2 samples, 0.01%)</title><rect x="0.4590%" y="805" width="0.0124%" height="15" fill="rgb(243,110,44)" fg:x="74" fg:w="2"/><text x="0.7090%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (2 samples, 0.01%)</title><rect x="0.4714%" y="837" width="0.0124%" height="15" fill="rgb(222,74,54)" fg:x="76" fg:w="2"/><text x="0.7214%" y="847.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (2 samples, 0.01%)</title><rect x="0.4714%" y="821" width="0.0124%" height="15" fill="rgb(216,99,12)" fg:x="76" fg:w="2"/><text x="0.7214%" y="831.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (3 samples, 0.02%)</title><rect x="0.4900%" y="725" width="0.0186%" height="15" fill="rgb(226,22,26)" fg:x="79" fg:w="3"/><text x="0.7400%" y="735.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (5 samples, 0.03%)</title><rect x="0.4900%" y="757" width="0.0310%" height="15" fill="rgb(217,163,10)" fg:x="79" fg:w="5"/><text x="0.7400%" y="767.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (5 samples, 0.03%)</title><rect x="0.4900%" y="741" width="0.0310%" height="15" fill="rgb(213,25,53)" fg:x="79" fg:w="5"/><text x="0.7400%" y="751.50"></text></g><g><title>TextInputUIMacHelper`+[TUINSCursorUIController sharedInstance] (2 samples, 0.01%)</title><rect x="0.5086%" y="725" width="0.0124%" height="15" fill="rgb(252,105,26)" fg:x="82" fg:w="2"/><text x="0.7586%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="0.5086%" y="709" width="0.0124%" height="15" fill="rgb(220,39,43)" fg:x="82" fg:w="2"/><text x="0.7586%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="0.5086%" y="693" width="0.0124%" height="15" fill="rgb(229,68,48)" fg:x="82" fg:w="2"/><text x="0.7586%" y="703.50"></text></g><g><title>TextInputUIMacHelper`__41+[TUINSCursorUIController sharedInstance]_block_invoke (2 samples, 0.01%)</title><rect x="0.5086%" y="677" width="0.0124%" height="15" fill="rgb(252,8,32)" fg:x="82" fg:w="2"/><text x="0.7586%" y="687.50"></text></g><g><title>TextInputUIMacHelper`-[TUINSCursorUIController init] (2 samples, 0.01%)</title><rect x="0.5086%" y="661" width="0.0124%" height="15" fill="rgb(223,20,43)" fg:x="82" fg:w="2"/><text x="0.7586%" y="671.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (8 samples, 0.05%)</title><rect x="0.4900%" y="789" width="0.0496%" height="15" fill="rgb(229,81,49)" fg:x="79" fg:w="8"/><text x="0.7400%" y="799.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (8 samples, 0.05%)</title><rect x="0.4900%" y="773" width="0.0496%" height="15" fill="rgb(236,28,36)" fg:x="79" fg:w="8"/><text x="0.7400%" y="783.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (3 samples, 0.02%)</title><rect x="0.5210%" y="757" width="0.0186%" height="15" fill="rgb(249,185,26)" fg:x="84" fg:w="3"/><text x="0.7710%" y="767.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (3 samples, 0.02%)</title><rect x="0.5210%" y="741" width="0.0186%" height="15" fill="rgb(249,174,33)" fg:x="84" fg:w="3"/><text x="0.7710%" y="751.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (3 samples, 0.02%)</title><rect x="0.5210%" y="725" width="0.0186%" height="15" fill="rgb(233,201,37)" fg:x="84" fg:w="3"/><text x="0.7710%" y="735.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (3 samples, 0.02%)</title><rect x="0.5210%" y="709" width="0.0186%" height="15" fill="rgb(221,78,26)" fg:x="84" fg:w="3"/><text x="0.7710%" y="719.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (3 samples, 0.02%)</title><rect x="0.5210%" y="693" width="0.0186%" height="15" fill="rgb(250,127,30)" fg:x="84" fg:w="3"/><text x="0.7710%" y="703.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (3 samples, 0.02%)</title><rect x="0.5210%" y="677" width="0.0186%" height="15" fill="rgb(230,49,44)" fg:x="84" fg:w="3"/><text x="0.7710%" y="687.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (2 samples, 0.01%)</title><rect x="0.5272%" y="661" width="0.0124%" height="15" fill="rgb(229,67,23)" fg:x="85" fg:w="2"/><text x="0.7772%" y="671.50"></text></g><g><title>CoreFoundation`CFEqual (2 samples, 0.01%)</title><rect x="0.5272%" y="645" width="0.0124%" height="15" fill="rgb(249,83,47)" fg:x="85" fg:w="2"/><text x="0.7772%" y="655.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (2 samples, 0.01%)</title><rect x="0.5520%" y="725" width="0.0124%" height="15" fill="rgb(215,43,3)" fg:x="89" fg:w="2"/><text x="0.8020%" y="735.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (6 samples, 0.04%)</title><rect x="0.5458%" y="741" width="0.0372%" height="15" fill="rgb(238,154,13)" fg:x="88" fg:w="6"/><text x="0.7958%" y="751.50"></text></g><g><title>AppKit`0x000000018de30f08 (3 samples, 0.02%)</title><rect x="0.5644%" y="725" width="0.0186%" height="15" fill="rgb(219,56,2)" fg:x="91" fg:w="3"/><text x="0.8144%" y="735.50"></text></g><g><title>AppKit`0x000000018dd24408 (3 samples, 0.02%)</title><rect x="0.5644%" y="709" width="0.0186%" height="15" fill="rgb(233,0,4)" fg:x="91" fg:w="3"/><text x="0.8144%" y="719.50"></text></g><g><title>AppKit`0x000000018de31694 (3 samples, 0.02%)</title><rect x="0.5644%" y="693" width="0.0186%" height="15" fill="rgb(235,30,7)" fg:x="91" fg:w="3"/><text x="0.8144%" y="703.50"></text></g><g><title>AppKit`0x000000018de30938 (3 samples, 0.02%)</title><rect x="0.5644%" y="677" width="0.0186%" height="15" fill="rgb(250,79,13)" fg:x="91" fg:w="3"/><text x="0.8144%" y="687.50"></text></g><g><title>QuartzCore`-[CALayer _display] (3 samples, 0.02%)</title><rect x="0.5644%" y="661" width="0.0186%" height="15" fill="rgb(211,146,34)" fg:x="91" fg:w="3"/><text x="0.8144%" y="671.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (8 samples, 0.05%)</title><rect x="0.5396%" y="757" width="0.0496%" height="15" fill="rgb(228,22,38)" fg:x="87" fg:w="8"/><text x="0.7896%" y="767.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForDisplay_block_invoke (3 samples, 0.02%)</title><rect x="0.5954%" y="709" width="0.0186%" height="15" fill="rgb(235,168,5)" fg:x="96" fg:w="3"/><text x="0.8454%" y="719.50"></text></g><g><title>AppKit`-[NSWindow displayIfNeeded] (3 samples, 0.02%)</title><rect x="0.5954%" y="693" width="0.0186%" height="15" fill="rgb(221,155,16)" fg:x="96" fg:w="3"/><text x="0.8454%" y="703.50"></text></g><g><title>AppKit`NSWindowUpdateLayerTree (2 samples, 0.01%)</title><rect x="0.6016%" y="677" width="0.0124%" height="15" fill="rgb(215,215,53)" fg:x="97" fg:w="2"/><text x="0.8516%" y="687.50"></text></g><g><title>AppKit`NSViewBuildLayerTreeForDisplay (2 samples, 0.01%)</title><rect x="0.6016%" y="661" width="0.0124%" height="15" fill="rgb(223,4,10)" fg:x="97" fg:w="2"/><text x="0.8516%" y="671.50"></text></g><g><title>AppKit`-[NSView _buildLayerTree] (2 samples, 0.01%)</title><rect x="0.6016%" y="645" width="0.0124%" height="15" fill="rgb(234,103,6)" fg:x="97" fg:w="2"/><text x="0.8516%" y="655.50"></text></g><g><title>AppKit`-[NSView _buildLayerTreeWithOwnLayerRequirement:someAncestorWantsLayer:singleLayerOut:layerArrayOut:] (2 samples, 0.01%)</title><rect x="0.6016%" y="629" width="0.0124%" height="15" fill="rgb(227,97,0)" fg:x="97" fg:w="2"/><text x="0.8516%" y="639.50"></text></g><g><title>AppKit`-[NSView _buildLayerTreeWithOwnLayerRequirement:someAncestorWantsLayer:singleLayerOut:layerArrayOut:] (2 samples, 0.01%)</title><rect x="0.6016%" y="613" width="0.0124%" height="15" fill="rgb(234,150,53)" fg:x="97" fg:w="2"/><text x="0.8516%" y="623.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (8 samples, 0.05%)</title><rect x="0.5892%" y="741" width="0.0496%" height="15" fill="rgb(228,201,54)" fg:x="95" fg:w="8"/><text x="0.8392%" y="751.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (7 samples, 0.04%)</title><rect x="0.5954%" y="725" width="0.0434%" height="15" fill="rgb(222,22,37)" fg:x="96" fg:w="7"/><text x="0.8454%" y="735.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateStructuralRegions_block_invoke (3 samples, 0.02%)</title><rect x="0.6202%" y="709" width="0.0186%" height="15" fill="rgb(237,53,32)" fg:x="100" fg:w="3"/><text x="0.8702%" y="719.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager displayCycleUpdateStructuralRegions] (2 samples, 0.01%)</title><rect x="0.6264%" y="693" width="0.0124%" height="15" fill="rgb(233,25,53)" fg:x="101" fg:w="2"/><text x="0.8764%" y="703.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (25 samples, 0.16%)</title><rect x="0.4900%" y="805" width="0.1551%" height="15" fill="rgb(210,40,34)" fg:x="79" fg:w="25"/><text x="0.7400%" y="815.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (17 samples, 0.11%)</title><rect x="0.5396%" y="789" width="0.1054%" height="15" fill="rgb(241,220,44)" fg:x="87" fg:w="17"/><text x="0.7896%" y="799.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (17 samples, 0.11%)</title><rect x="0.5396%" y="773" width="0.1054%" height="15" fill="rgb(235,28,35)" fg:x="87" fg:w="17"/><text x="0.7896%" y="783.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (9 samples, 0.06%)</title><rect x="0.5892%" y="757" width="0.0558%" height="15" fill="rgb(210,56,17)" fg:x="95" fg:w="9"/><text x="0.8392%" y="767.50"></text></g><g><title>bevy_example`&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone_from (2 samples, 0.01%)</title><rect x="0.6761%" y="629" width="0.0124%" height="15" fill="rgb(224,130,29)" fg:x="109" fg:w="2"/><text x="0.9261%" y="639.50"></text></g><g><title>bevy_example`&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone_from (5 samples, 0.03%)</title><rect x="0.6947%" y="613" width="0.0310%" height="15" fill="rgb(235,212,8)" fg:x="112" fg:w="5"/><text x="0.9447%" y="623.50"></text></g><g><title>bevy_example`bevy_ecs::query::access::Access&lt;T&gt;::extend (2 samples, 0.01%)</title><rect x="0.7257%" y="613" width="0.0124%" height="15" fill="rgb(223,33,50)" fg:x="117" fg:w="2"/><text x="0.9757%" y="623.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::union_with (2 samples, 0.01%)</title><rect x="0.7257%" y="597" width="0.0124%" height="15" fill="rgb(219,149,13)" fg:x="117" fg:w="2"/><text x="0.9757%" y="607.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (8 samples, 0.05%)</title><rect x="0.7567%" y="581" width="0.0496%" height="15" fill="rgb(250,156,29)" fg:x="122" fg:w="8"/><text x="1.0067%" y="591.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (2 samples, 0.01%)</title><rect x="0.8187%" y="549" width="0.0124%" height="15" fill="rgb(216,193,19)" fg:x="132" fg:w="2"/><text x="1.0687%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.01%)</title><rect x="0.8187%" y="533" width="0.0124%" height="15" fill="rgb(216,135,14)" fg:x="132" fg:w="2"/><text x="1.0687%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.01%)</title><rect x="0.8187%" y="517" width="0.0124%" height="15" fill="rgb(241,47,5)" fg:x="132" fg:w="2"/><text x="1.0687%" y="527.50"></text></g><g><title>bevy_example`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (6 samples, 0.04%)</title><rect x="0.8063%" y="565" width="0.0372%" height="15" fill="rgb(233,42,35)" fg:x="130" fg:w="6"/><text x="1.0563%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (2 samples, 0.01%)</title><rect x="0.8311%" y="549" width="0.0124%" height="15" fill="rgb(231,13,6)" fg:x="134" fg:w="2"/><text x="1.0811%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (2 samples, 0.01%)</title><rect x="0.8311%" y="533" width="0.0124%" height="15" fill="rgb(207,181,40)" fg:x="134" fg:w="2"/><text x="1.0811%" y="543.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (16 samples, 0.10%)</title><rect x="0.8063%" y="581" width="0.0992%" height="15" fill="rgb(254,173,49)" fg:x="130" fg:w="16"/><text x="1.0563%" y="591.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (10 samples, 0.06%)</title><rect x="0.8435%" y="565" width="0.0620%" height="15" fill="rgb(221,1,38)" fg:x="136" fg:w="10"/><text x="1.0935%" y="575.50"></text></g><g><title>bevy_example`parking::Inner::unpark (10 samples, 0.06%)</title><rect x="0.8435%" y="549" width="0.0620%" height="15" fill="rgb(206,124,46)" fg:x="136" fg:w="10"/><text x="1.0935%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (10 samples, 0.06%)</title><rect x="0.8435%" y="533" width="0.0620%" height="15" fill="rgb(249,21,11)" fg:x="136" fg:w="10"/><text x="1.0935%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (25 samples, 0.16%)</title><rect x="0.9117%" y="549" width="0.1551%" height="15" fill="rgb(222,201,40)" fg:x="147" fg:w="25"/><text x="1.1617%" y="559.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (27 samples, 0.17%)</title><rect x="0.9055%" y="581" width="0.1675%" height="15" fill="rgb(235,61,29)" fg:x="146" fg:w="27"/><text x="1.1555%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (26 samples, 0.16%)</title><rect x="0.9117%" y="565" width="0.1613%" height="15" fill="rgb(219,207,3)" fg:x="147" fg:w="26"/><text x="1.1617%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.02%)</title><rect x="1.0730%" y="581" width="0.0186%" height="15" fill="rgb(222,56,46)" fg:x="173" fg:w="3"/><text x="1.3230%" y="591.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (103 samples, 0.64%)</title><rect x="0.7443%" y="597" width="0.6388%" height="15" fill="rgb(239,76,54)" fg:x="120" fg:w="103"/><text x="0.9943%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (47 samples, 0.29%)</title><rect x="1.0916%" y="581" width="0.2915%" height="15" fill="rgb(231,124,27)" fg:x="176" fg:w="47"/><text x="1.3416%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (47 samples, 0.29%)</title><rect x="1.0916%" y="565" width="0.2915%" height="15" fill="rgb(249,195,6)" fg:x="176" fg:w="47"/><text x="1.3416%" y="575.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (105 samples, 0.65%)</title><rect x="0.7443%" y="613" width="0.6512%" height="15" fill="rgb(237,174,47)" fg:x="120" fg:w="105"/><text x="0.9943%" y="623.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (2 samples, 0.01%)</title><rect x="1.3831%" y="597" width="0.0124%" height="15" fill="rgb(206,201,31)" fg:x="223" fg:w="2"/><text x="1.6331%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="1.3831%" y="581" width="0.0124%" height="15" fill="rgb(231,57,52)" fg:x="223" fg:w="2"/><text x="1.6331%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="1.3831%" y="565" width="0.0124%" height="15" fill="rgb(248,177,22)" fg:x="223" fg:w="2"/><text x="1.6331%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="1.3831%" y="549" width="0.0124%" height="15" fill="rgb(215,211,37)" fg:x="223" fg:w="2"/><text x="1.6331%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="1.3831%" y="533" width="0.0124%" height="15" fill="rgb(241,128,51)" fg:x="223" fg:w="2"/><text x="1.6331%" y="543.50"></text></g><g><title>bevy_example`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2 samples, 0.01%)</title><rect x="1.3955%" y="613" width="0.0124%" height="15" fill="rgb(227,165,31)" fg:x="225" fg:w="2"/><text x="1.6455%" y="623.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::is_disjoint (2 samples, 0.01%)</title><rect x="1.4079%" y="613" width="0.0124%" height="15" fill="rgb(228,167,24)" fg:x="227" fg:w="2"/><text x="1.6579%" y="623.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (120 samples, 0.74%)</title><rect x="0.6885%" y="629" width="0.7443%" height="15" fill="rgb(228,143,12)" fg:x="111" fg:w="120"/><text x="0.9385%" y="639.50"></text></g><g><title>bevy_example`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.09%)</title><rect x="1.4513%" y="581" width="0.0930%" height="15" fill="rgb(249,149,8)" fg:x="234" fg:w="15"/><text x="1.7013%" y="591.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (19 samples, 0.12%)</title><rect x="1.4451%" y="613" width="0.1178%" height="15" fill="rgb(243,35,44)" fg:x="233" fg:w="19"/><text x="1.6951%" y="623.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (18 samples, 0.11%)</title><rect x="1.4513%" y="597" width="0.1116%" height="15" fill="rgb(246,89,9)" fg:x="234" fg:w="18"/><text x="1.7013%" y="607.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.02%)</title><rect x="1.5444%" y="581" width="0.0186%" height="15" fill="rgb(233,213,13)" fg:x="249" fg:w="3"/><text x="1.7944%" y="591.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (161 samples, 1.00%)</title><rect x="0.6636%" y="661" width="0.9986%" height="15" fill="rgb(233,141,41)" fg:x="107" fg:w="161"/><text x="0.9136%" y="671.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (161 samples, 1.00%)</title><rect x="0.6636%" y="645" width="0.9986%" height="15" fill="rgb(239,167,4)" fg:x="107" fg:w="161"/><text x="0.9136%" y="655.50"></text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.22%)</title><rect x="1.4451%" y="629" width="0.2171%" height="15" fill="rgb(209,217,16)" fg:x="233" fg:w="35"/><text x="1.6951%" y="639.50"></text></g><g><title>bevy_example`parking::Inner::park (16 samples, 0.10%)</title><rect x="1.5630%" y="613" width="0.0992%" height="15" fill="rgb(219,88,35)" fg:x="252" fg:w="16"/><text x="1.8130%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (16 samples, 0.10%)</title><rect x="1.5630%" y="597" width="0.0992%" height="15" fill="rgb(220,193,23)" fg:x="252" fg:w="16"/><text x="1.8130%" y="607.50"></text></g><g><title>bevy_example`bevy_render::initialize_render_app::_{{closure}} (163 samples, 1.01%)</title><rect x="0.6574%" y="693" width="1.0110%" height="15" fill="rgb(230,90,52)" fg:x="106" fg:w="163"/><text x="0.9074%" y="703.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::schedule_scope (162 samples, 1.00%)</title><rect x="0.6636%" y="677" width="1.0048%" height="15" fill="rgb(252,106,19)" fg:x="107" fg:w="162"/><text x="0.9136%" y="687.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (2 samples, 0.01%)</title><rect x="1.6870%" y="629" width="0.0124%" height="15" fill="rgb(206,74,20)" fg:x="272" fg:w="2"/><text x="1.9370%" y="639.50"></text></g><g><title>bevy_example`parking::Inner::unpark (2 samples, 0.01%)</title><rect x="1.6870%" y="613" width="0.0124%" height="15" fill="rgb(230,138,44)" fg:x="272" fg:w="2"/><text x="1.9370%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.01%)</title><rect x="1.6870%" y="597" width="0.0124%" height="15" fill="rgb(235,182,43)" fg:x="272" fg:w="2"/><text x="1.9370%" y="607.50"></text></g><g><title>bevy_example`async_executor::Ticker::sleep (3 samples, 0.02%)</title><rect x="1.7056%" y="629" width="0.0186%" height="15" fill="rgb(242,16,51)" fg:x="275" fg:w="3"/><text x="1.9556%" y="639.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (3 samples, 0.02%)</title><rect x="1.7056%" y="613" width="0.0186%" height="15" fill="rgb(248,9,4)" fg:x="275" fg:w="3"/><text x="1.9556%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.02%)</title><rect x="1.7056%" y="597" width="0.0186%" height="15" fill="rgb(210,31,22)" fg:x="275" fg:w="3"/><text x="1.9556%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.02%)</title><rect x="1.7056%" y="581" width="0.0186%" height="15" fill="rgb(239,54,39)" fg:x="275" fg:w="3"/><text x="1.9556%" y="591.50"></text></g><g><title>bevy_example`async_executor::Runner::runnable::_{{closure}} (11 samples, 0.07%)</title><rect x="1.6746%" y="645" width="0.0682%" height="15" fill="rgb(230,99,41)" fg:x="270" fg:w="11"/><text x="1.9246%" y="655.50"></text></g><g><title>bevy_example`async_executor::steal (2 samples, 0.01%)</title><rect x="1.7304%" y="629" width="0.0124%" height="15" fill="rgb(253,106,12)" fg:x="279" fg:w="2"/><text x="1.9804%" y="639.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.01%)</title><rect x="1.7304%" y="613" width="0.0124%" height="15" fill="rgb(213,46,41)" fg:x="279" fg:w="2"/><text x="1.9804%" y="623.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (2 samples, 0.01%)</title><rect x="1.7925%" y="549" width="0.0124%" height="15" fill="rgb(215,133,35)" fg:x="289" fg:w="2"/><text x="2.0425%" y="559.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (4 samples, 0.02%)</title><rect x="1.8049%" y="549" width="0.0248%" height="15" fill="rgb(213,28,5)" fg:x="291" fg:w="4"/><text x="2.0549%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (4 samples, 0.02%)</title><rect x="1.8049%" y="533" width="0.0248%" height="15" fill="rgb(215,77,49)" fg:x="291" fg:w="4"/><text x="2.0549%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.02%)</title><rect x="1.8111%" y="517" width="0.0186%" height="15" fill="rgb(248,100,22)" fg:x="292" fg:w="3"/><text x="2.0611%" y="527.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (15 samples, 0.09%)</title><rect x="1.7801%" y="581" width="0.0930%" height="15" fill="rgb(208,67,9)" fg:x="287" fg:w="15"/><text x="2.0301%" y="591.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (15 samples, 0.09%)</title><rect x="1.7801%" y="565" width="0.0930%" height="15" fill="rgb(219,133,21)" fg:x="287" fg:w="15"/><text x="2.0301%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (6 samples, 0.04%)</title><rect x="1.8359%" y="549" width="0.0372%" height="15" fill="rgb(246,46,29)" fg:x="296" fg:w="6"/><text x="2.0859%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (6 samples, 0.04%)</title><rect x="1.8359%" y="533" width="0.0372%" height="15" fill="rgb(246,185,52)" fg:x="296" fg:w="6"/><text x="2.0859%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.01%)</title><rect x="1.8917%" y="581" width="0.0124%" height="15" fill="rgb(252,136,11)" fg:x="305" fg:w="2"/><text x="2.1417%" y="591.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (24 samples, 0.15%)</title><rect x="1.7615%" y="597" width="0.1489%" height="15" fill="rgb(219,138,53)" fg:x="284" fg:w="24"/><text x="2.0115%" y="607.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (27 samples, 0.17%)</title><rect x="1.7553%" y="613" width="0.1675%" height="15" fill="rgb(211,51,23)" fg:x="283" fg:w="27"/><text x="2.0053%" y="623.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.02%)</title><rect x="1.9227%" y="597" width="0.0186%" height="15" fill="rgb(247,221,28)" fg:x="310" fg:w="3"/><text x="2.1727%" y="607.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.20%)</title><rect x="1.7491%" y="629" width="0.2047%" height="15" fill="rgb(251,222,45)" fg:x="282" fg:w="33"/><text x="1.9991%" y="639.50"></text></g><g><title>bevy_example`std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="1.9227%" y="613" width="0.0310%" height="15" fill="rgb(217,162,53)" fg:x="310" fg:w="5"/><text x="2.1727%" y="623.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (2 samples, 0.01%)</title><rect x="1.9413%" y="597" width="0.0124%" height="15" fill="rgb(229,93,14)" fg:x="313" fg:w="2"/><text x="2.1913%" y="607.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.01%)</title><rect x="1.9413%" y="581" width="0.0124%" height="15" fill="rgb(209,67,49)" fg:x="313" fg:w="2"/><text x="2.1913%" y="591.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (2 samples, 0.01%)</title><rect x="1.9537%" y="629" width="0.0124%" height="15" fill="rgb(213,87,29)" fg:x="315" fg:w="2"/><text x="2.2037%" y="639.50"></text></g><g><title>bevy_example`parking::Inner::unpark (2 samples, 0.01%)</title><rect x="1.9537%" y="613" width="0.0124%" height="15" fill="rgb(205,151,52)" fg:x="315" fg:w="2"/><text x="2.2037%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.01%)</title><rect x="1.9537%" y="597" width="0.0124%" height="15" fill="rgb(253,215,39)" fg:x="315" fg:w="2"/><text x="2.2037%" y="607.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (9 samples, 0.06%)</title><rect x="1.9785%" y="613" width="0.0558%" height="15" fill="rgb(221,220,41)" fg:x="319" fg:w="9"/><text x="2.2285%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (9 samples, 0.06%)</title><rect x="1.9785%" y="597" width="0.0558%" height="15" fill="rgb(218,133,21)" fg:x="319" fg:w="9"/><text x="2.2285%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (9 samples, 0.06%)</title><rect x="1.9785%" y="581" width="0.0558%" height="15" fill="rgb(221,193,43)" fg:x="319" fg:w="9"/><text x="2.2285%" y="591.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (49 samples, 0.30%)</title><rect x="1.7429%" y="645" width="0.3039%" height="15" fill="rgb(240,128,52)" fg:x="281" fg:w="49"/><text x="1.9929%" y="655.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (12 samples, 0.07%)</title><rect x="1.9723%" y="629" width="0.0744%" height="15" fill="rgb(253,114,12)" fg:x="318" fg:w="12"/><text x="2.2223%" y="639.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (2 samples, 0.01%)</title><rect x="2.0468%" y="645" width="0.0124%" height="15" fill="rgb(215,223,47)" fg:x="330" fg:w="2"/><text x="2.2968%" y="655.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (63 samples, 0.39%)</title><rect x="1.6746%" y="661" width="0.3907%" height="15" fill="rgb(248,225,23)" fg:x="270" fg:w="63"/><text x="1.9246%" y="671.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (81 samples, 0.50%)</title><rect x="1.6684%" y="693" width="0.5024%" height="15" fill="rgb(250,108,0)" fg:x="269" fg:w="81"/><text x="1.9184%" y="703.50"></text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (80 samples, 0.50%)</title><rect x="1.6746%" y="677" width="0.4962%" height="15" fill="rgb(228,208,7)" fg:x="270" fg:w="80"/><text x="1.9246%" y="687.50"></text></g><g><title>bevy_example`parking::Inner::park (16 samples, 0.10%)</title><rect x="2.0716%" y="661" width="0.0992%" height="15" fill="rgb(244,45,10)" fg:x="334" fg:w="16"/><text x="2.3216%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (16 samples, 0.10%)</title><rect x="2.0716%" y="645" width="0.0992%" height="15" fill="rgb(207,125,25)" fg:x="334" fg:w="16"/><text x="2.3216%" y="655.50"></text></g><g><title>bevy_example`event_listener_strategy::EventListenerFuture::wait (2 samples, 0.01%)</title><rect x="2.1708%" y="693" width="0.0124%" height="15" fill="rgb(210,195,18)" fg:x="350" fg:w="2"/><text x="2.4208%" y="703.50"></text></g><g><title>bevy_example`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (2 samples, 0.01%)</title><rect x="2.1708%" y="677" width="0.0124%" height="15" fill="rgb(249,80,12)" fg:x="350" fg:w="2"/><text x="2.4208%" y="687.50"></text></g><g><title>bevy_example`event_listener::sys::Inner&lt;T&gt;::notify (2 samples, 0.01%)</title><rect x="2.1708%" y="661" width="0.0124%" height="15" fill="rgb(221,65,9)" fg:x="350" fg:w="2"/><text x="2.4208%" y="671.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (2 samples, 0.01%)</title><rect x="2.1708%" y="645" width="0.0124%" height="15" fill="rgb(235,49,36)" fg:x="350" fg:w="2"/><text x="2.4208%" y="655.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (2 samples, 0.01%)</title><rect x="2.1708%" y="629" width="0.0124%" height="15" fill="rgb(225,32,20)" fg:x="350" fg:w="2"/><text x="2.4208%" y="639.50"></text></g><g><title>bevy_example`parking::Inner::unpark (2 samples, 0.01%)</title><rect x="2.1708%" y="613" width="0.0124%" height="15" fill="rgb(215,141,46)" fg:x="350" fg:w="2"/><text x="2.4208%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.01%)</title><rect x="2.1708%" y="597" width="0.0124%" height="15" fill="rgb(250,160,47)" fg:x="350" fg:w="2"/><text x="2.4208%" y="607.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::resource_scope (247 samples, 1.53%)</title><rect x="0.6574%" y="709" width="1.5320%" height="15" fill="rgb(216,222,40)" fg:x="106" fg:w="247"/><text x="0.9074%" y="719.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (2 samples, 0.01%)</title><rect x="2.2266%" y="565" width="0.0124%" height="15" fill="rgb(234,217,39)" fg:x="359" fg:w="2"/><text x="2.4766%" y="575.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::validate_param_unsafe (2 samples, 0.01%)</title><rect x="2.2390%" y="565" width="0.0124%" height="15" fill="rgb(207,178,40)" fg:x="361" fg:w="2"/><text x="2.4890%" y="575.50"></text></g><g><title>bevy_example`bevy_ecs::query::access::Access&lt;T&gt;::extend (4 samples, 0.02%)</title><rect x="2.2700%" y="549" width="0.0248%" height="15" fill="rgb(221,136,13)" fg:x="366" fg:w="4"/><text x="2.5200%" y="559.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::union_with (3 samples, 0.02%)</title><rect x="2.2763%" y="533" width="0.0186%" height="15" fill="rgb(249,199,10)" fg:x="367" fg:w="3"/><text x="2.5263%" y="543.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (5 samples, 0.03%)</title><rect x="2.3073%" y="517" width="0.0310%" height="15" fill="rgb(249,222,13)" fg:x="372" fg:w="5"/><text x="2.5573%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.04%)</title><rect x="2.3445%" y="469" width="0.0372%" height="15" fill="rgb(244,185,38)" fg:x="378" fg:w="6"/><text x="2.5945%" y="479.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (8 samples, 0.05%)</title><rect x="2.3383%" y="517" width="0.0496%" height="15" fill="rgb(236,202,9)" fg:x="377" fg:w="8"/><text x="2.5883%" y="527.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (7 samples, 0.04%)</title><rect x="2.3445%" y="501" width="0.0434%" height="15" fill="rgb(250,229,37)" fg:x="378" fg:w="7"/><text x="2.5945%" y="511.50"></text></g><g><title>bevy_example`parking::Inner::unpark (7 samples, 0.04%)</title><rect x="2.3445%" y="485" width="0.0434%" height="15" fill="rgb(206,174,23)" fg:x="378" fg:w="7"/><text x="2.5945%" y="495.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (19 samples, 0.12%)</title><rect x="2.3011%" y="549" width="0.1178%" height="15" fill="rgb(211,33,43)" fg:x="371" fg:w="19"/><text x="2.5511%" y="559.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (19 samples, 0.12%)</title><rect x="2.3011%" y="533" width="0.1178%" height="15" fill="rgb(245,58,50)" fg:x="371" fg:w="19"/><text x="2.5511%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (4 samples, 0.02%)</title><rect x="2.3941%" y="517" width="0.0248%" height="15" fill="rgb(244,68,36)" fg:x="386" fg:w="4"/><text x="2.6441%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (4 samples, 0.02%)</title><rect x="2.3941%" y="501" width="0.0248%" height="15" fill="rgb(232,229,15)" fg:x="386" fg:w="4"/><text x="2.6441%" y="511.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (27 samples, 0.17%)</title><rect x="2.2638%" y="565" width="0.1675%" height="15" fill="rgb(254,30,23)" fg:x="365" fg:w="27"/><text x="2.5138%" y="575.50"></text></g><g><title>bevy_example`async_executor::Ticker::sleep (2 samples, 0.01%)</title><rect x="2.4561%" y="501" width="0.0124%" height="15" fill="rgb(235,160,14)" fg:x="396" fg:w="2"/><text x="2.7061%" y="511.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="2.4499%" y="517" width="0.0248%" height="15" fill="rgb(212,155,44)" fg:x="395" fg:w="4"/><text x="2.6999%" y="527.50"></text></g><g><title>bevy_example`bevy_ecs::query::access::Access&lt;T&gt;::extend (3 samples, 0.02%)</title><rect x="2.5367%" y="453" width="0.0186%" height="15" fill="rgb(226,2,50)" fg:x="409" fg:w="3"/><text x="2.7867%" y="463.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::union_with (2 samples, 0.01%)</title><rect x="2.5430%" y="437" width="0.0124%" height="15" fill="rgb(234,177,6)" fg:x="410" fg:w="2"/><text x="2.7930%" y="447.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (5 samples, 0.03%)</title><rect x="2.5554%" y="421" width="0.0310%" height="15" fill="rgb(217,24,9)" fg:x="412" fg:w="5"/><text x="2.8054%" y="431.50"></text></g><g><title>bevy_example`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (3 samples, 0.02%)</title><rect x="2.5864%" y="405" width="0.0186%" height="15" fill="rgb(220,13,46)" fg:x="417" fg:w="3"/><text x="2.8364%" y="415.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (8 samples, 0.05%)</title><rect x="2.5864%" y="421" width="0.0496%" height="15" fill="rgb(239,221,27)" fg:x="417" fg:w="8"/><text x="2.8364%" y="431.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (5 samples, 0.03%)</title><rect x="2.6050%" y="405" width="0.0310%" height="15" fill="rgb(222,198,25)" fg:x="420" fg:w="5"/><text x="2.8550%" y="415.50"></text></g><g><title>bevy_example`parking::Inner::unpark (5 samples, 0.03%)</title><rect x="2.6050%" y="389" width="0.0310%" height="15" fill="rgb(211,99,13)" fg:x="420" fg:w="5"/><text x="2.8550%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5 samples, 0.03%)</title><rect x="2.6050%" y="373" width="0.0310%" height="15" fill="rgb(232,111,31)" fg:x="420" fg:w="5"/><text x="2.8550%" y="383.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (3 samples, 0.02%)</title><rect x="2.6360%" y="421" width="0.0186%" height="15" fill="rgb(245,82,37)" fg:x="425" fg:w="3"/><text x="2.8860%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.02%)</title><rect x="2.6360%" y="405" width="0.0186%" height="15" fill="rgb(227,149,46)" fg:x="425" fg:w="3"/><text x="2.8860%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.02%)</title><rect x="2.6360%" y="389" width="0.0186%" height="15" fill="rgb(218,36,50)" fg:x="425" fg:w="3"/><text x="2.8860%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (7 samples, 0.04%)</title><rect x="2.6546%" y="421" width="0.0434%" height="15" fill="rgb(226,80,48)" fg:x="428" fg:w="7"/><text x="2.9046%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (7 samples, 0.04%)</title><rect x="2.6546%" y="405" width="0.0434%" height="15" fill="rgb(238,224,15)" fg:x="428" fg:w="7"/><text x="2.9046%" y="415.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (24 samples, 0.15%)</title><rect x="2.5554%" y="453" width="0.1489%" height="15" fill="rgb(241,136,10)" fg:x="412" fg:w="24"/><text x="2.8054%" y="463.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (24 samples, 0.15%)</title><rect x="2.5554%" y="437" width="0.1489%" height="15" fill="rgb(208,32,45)" fg:x="412" fg:w="24"/><text x="2.8054%" y="447.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (37 samples, 0.23%)</title><rect x="2.4995%" y="485" width="0.2295%" height="15" fill="rgb(207,135,9)" fg:x="403" fg:w="37"/><text x="2.7495%" y="495.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (33 samples, 0.20%)</title><rect x="2.5243%" y="469" width="0.2047%" height="15" fill="rgb(206,86,44)" fg:x="407" fg:w="33"/><text x="2.7743%" y="479.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::union_with (2 samples, 0.01%)</title><rect x="2.7166%" y="453" width="0.0124%" height="15" fill="rgb(245,177,15)" fg:x="438" fg:w="2"/><text x="2.9666%" y="463.50"></text></g><g><title>bevy_example`bevy_ecs::query::access::FilteredAccess&lt;T&gt;::add_component_read (2 samples, 0.01%)</title><rect x="2.7414%" y="389" width="0.0124%" height="15" fill="rgb(206,64,50)" fg:x="442" fg:w="2"/><text x="2.9914%" y="399.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::grow::do_grow (2 samples, 0.01%)</title><rect x="2.7414%" y="373" width="0.0124%" height="15" fill="rgb(234,36,40)" fg:x="442" fg:w="2"/><text x="2.9914%" y="383.50"></text></g><g><title>bevy_example`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="2.7414%" y="357" width="0.0124%" height="15" fill="rgb(213,64,8)" fg:x="442" fg:w="2"/><text x="2.9914%" y="367.50"></text></g><g><title>bevy_example`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="2.7414%" y="341" width="0.0124%" height="15" fill="rgb(210,75,36)" fg:x="442" fg:w="2"/><text x="2.9914%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.01%)</title><rect x="2.7414%" y="325" width="0.0124%" height="15" fill="rgb(229,88,21)" fg:x="442" fg:w="2"/><text x="2.9914%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.01%)</title><rect x="2.7414%" y="309" width="0.0124%" height="15" fill="rgb(252,204,47)" fg:x="442" fg:w="2"/><text x="2.9914%" y="319.50"></text></g><g><title>bevy_example`bevy_ecs::query::access::FilteredAccess&lt;T&gt;::add_component_write (2 samples, 0.01%)</title><rect x="2.7538%" y="389" width="0.0124%" height="15" fill="rgb(208,77,27)" fg:x="444" fg:w="2"/><text x="3.0038%" y="399.50"></text></g><g><title>bevy_example`bevy_ecs::query::state::QueryState&lt;D,F&gt;::new (6 samples, 0.04%)</title><rect x="2.7352%" y="421" width="0.0372%" height="15" fill="rgb(221,76,26)" fg:x="441" fg:w="6"/><text x="2.9852%" y="431.50"></text></g><g><title>bevy_example`bevy_egui::_::_&lt;impl bevy_ecs::query::world_query::WorldQuery for bevy_egui::MultiPassEguiQuery&gt;::update_component_access (5 samples, 0.03%)</title><rect x="2.7414%" y="405" width="0.0310%" height="15" fill="rgb(225,139,18)" fg:x="442" fg:w="5"/><text x="2.9914%" y="415.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (4 samples, 0.02%)</title><rect x="2.7724%" y="357" width="0.0248%" height="15" fill="rgb(230,137,11)" fg:x="447" fg:w="4"/><text x="3.0224%" y="367.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (4 samples, 0.02%)</title><rect x="2.7724%" y="341" width="0.0248%" height="15" fill="rgb(212,28,1)" fg:x="447" fg:w="4"/><text x="3.0224%" y="351.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (4 samples, 0.02%)</title><rect x="2.7724%" y="325" width="0.0248%" height="15" fill="rgb(248,164,17)" fg:x="447" fg:w="4"/><text x="3.0224%" y="335.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (3 samples, 0.02%)</title><rect x="2.7786%" y="309" width="0.0186%" height="15" fill="rgb(222,171,42)" fg:x="448" fg:w="3"/><text x="3.0286%" y="319.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (3 samples, 0.02%)</title><rect x="2.7786%" y="293" width="0.0186%" height="15" fill="rgb(243,84,45)" fg:x="448" fg:w="3"/><text x="3.0286%" y="303.50"></text></g><g><title>bevy_example`parking::Inner::unpark (3 samples, 0.02%)</title><rect x="2.7786%" y="277" width="0.0186%" height="15" fill="rgb(252,49,23)" fg:x="448" fg:w="3"/><text x="3.0286%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.02%)</title><rect x="2.7786%" y="261" width="0.0186%" height="15" fill="rgb(215,19,7)" fg:x="448" fg:w="3"/><text x="3.0286%" y="271.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (7 samples, 0.04%)</title><rect x="2.7724%" y="389" width="0.0434%" height="15" fill="rgb(238,81,41)" fg:x="447" fg:w="7"/><text x="3.0224%" y="399.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (7 samples, 0.04%)</title><rect x="2.7724%" y="373" width="0.0434%" height="15" fill="rgb(210,199,37)" fg:x="447" fg:w="7"/><text x="3.0224%" y="383.50"></text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="2.7972%" y="357" width="0.0186%" height="15" fill="rgb(244,192,49)" fg:x="451" fg:w="3"/><text x="3.0472%" y="367.50"></text></g><g><title>bevy_example`parking::Inner::park (3 samples, 0.02%)</title><rect x="2.7972%" y="341" width="0.0186%" height="15" fill="rgb(226,211,11)" fg:x="451" fg:w="3"/><text x="3.0472%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (3 samples, 0.02%)</title><rect x="2.7972%" y="325" width="0.0186%" height="15" fill="rgb(236,162,54)" fg:x="451" fg:w="3"/><text x="3.0472%" y="335.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::try_schedule_scope (9 samples, 0.06%)</title><rect x="2.7724%" y="405" width="0.0558%" height="15" fill="rgb(220,229,9)" fg:x="447" fg:w="9"/><text x="3.0224%" y="415.50"></text></g><g><title>bevy_example`egui::context::Context::begin_pass (4 samples, 0.02%)</title><rect x="2.8283%" y="405" width="0.0248%" height="15" fill="rgb(250,87,22)" fg:x="456" fg:w="4"/><text x="3.0783%" y="415.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (21 samples, 0.13%)</title><rect x="2.7290%" y="469" width="0.1302%" height="15" fill="rgb(239,43,17)" fg:x="440" fg:w="21"/><text x="2.9790%" y="479.50"></text></g><g><title>bevy_example`bevy_ecs::system::system::System::run (21 samples, 0.13%)</title><rect x="2.7290%" y="453" width="0.1302%" height="15" fill="rgb(231,177,25)" fg:x="440" fg:w="21"/><text x="2.9790%" y="463.50"></text></g><g><title>bevy_example`bevy_egui::run_egui_context_pass_loop_system (20 samples, 0.12%)</title><rect x="2.7352%" y="437" width="0.1240%" height="15" fill="rgb(219,179,1)" fg:x="441" fg:w="20"/><text x="2.9852%" y="447.50"></text></g><g><title>bevy_example`egui::context::Context::run (14 samples, 0.09%)</title><rect x="2.7724%" y="421" width="0.0868%" height="15" fill="rgb(238,219,53)" fg:x="447" fg:w="14"/><text x="3.0224%" y="431.50"></text></g><g><title>bevy_example`epaint::tessellator::Path::add_line_loop (2 samples, 0.01%)</title><rect x="2.8717%" y="325" width="0.0124%" height="15" fill="rgb(232,167,36)" fg:x="463" fg:w="2"/><text x="3.1217%" y="335.50"></text></g><g><title>bevy_example`epaint::tessellator::Tessellator::tessellate_clipped_shape (6 samples, 0.04%)</title><rect x="2.8655%" y="373" width="0.0372%" height="15" fill="rgb(244,19,51)" fg:x="462" fg:w="6"/><text x="3.1155%" y="383.50"></text></g><g><title>bevy_example`epaint::tessellator::Tessellator::tessellate_shape (6 samples, 0.04%)</title><rect x="2.8655%" y="357" width="0.0372%" height="15" fill="rgb(224,6,22)" fg:x="462" fg:w="6"/><text x="3.1155%" y="367.50"></text></g><g><title>bevy_example`epaint::tessellator::Tessellator::tessellate_rect (6 samples, 0.04%)</title><rect x="2.8655%" y="341" width="0.0372%" height="15" fill="rgb(224,145,5)" fg:x="462" fg:w="6"/><text x="3.1155%" y="351.50"></text></g><g><title>bevy_example`epaint::tessellator::fill_closed_path (3 samples, 0.02%)</title><rect x="2.8841%" y="325" width="0.0186%" height="15" fill="rgb(234,130,49)" fg:x="465" fg:w="3"/><text x="3.1341%" y="335.50"></text></g><g><title>bevy_example`epaint::tessellator::Tessellator::tessellate_shapes (8 samples, 0.05%)</title><rect x="2.8655%" y="405" width="0.0496%" height="15" fill="rgb(254,6,2)" fg:x="462" fg:w="8"/><text x="3.1155%" y="415.50"></text></g><g><title>bevy_example`epaint::tessellator::Tessellator::tessellate_clipped_shape (8 samples, 0.05%)</title><rect x="2.8655%" y="389" width="0.0496%" height="15" fill="rgb(208,96,46)" fg:x="462" fg:w="8"/><text x="3.1155%" y="399.50"></text></g><g><title>bevy_example`epaint::tessellator::Tessellator::tessellate_shape (2 samples, 0.01%)</title><rect x="2.9027%" y="373" width="0.0124%" height="15" fill="rgb(239,3,39)" fg:x="468" fg:w="2"/><text x="3.1527%" y="383.50"></text></g><g><title>bevy_example`bevy_egui::output::process_output_system (9 samples, 0.06%)</title><rect x="2.8655%" y="437" width="0.0558%" height="15" fill="rgb(233,210,1)" fg:x="462" fg:w="9"/><text x="3.1155%" y="447.50"></text></g><g><title>bevy_example`egui::context::Context::tessellate (9 samples, 0.06%)</title><rect x="2.8655%" y="421" width="0.0558%" height="15" fill="rgb(244,137,37)" fg:x="462" fg:w="9"/><text x="3.1155%" y="431.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (69 samples, 0.43%)</title><rect x="2.4995%" y="501" width="0.4280%" height="15" fill="rgb(240,136,2)" fg:x="403" fg:w="69"/><text x="2.7495%" y="511.50"></text></g><g><title>bevy_example`std::panic::catch_unwind (32 samples, 0.20%)</title><rect x="2.7290%" y="485" width="0.1985%" height="15" fill="rgb(239,18,37)" fg:x="440" fg:w="32"/><text x="2.9790%" y="495.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (11 samples, 0.07%)</title><rect x="2.8593%" y="469" width="0.0682%" height="15" fill="rgb(218,185,22)" fg:x="461" fg:w="11"/><text x="3.1093%" y="479.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (11 samples, 0.07%)</title><rect x="2.8593%" y="453" width="0.0682%" height="15" fill="rgb(225,218,4)" fg:x="461" fg:w="11"/><text x="3.1093%" y="463.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (2 samples, 0.01%)</title><rect x="2.9275%" y="469" width="0.0124%" height="15" fill="rgb(230,182,32)" fg:x="472" fg:w="2"/><text x="3.1775%" y="479.50"></text></g><g><title>bevy_example`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (4 samples, 0.02%)</title><rect x="2.9709%" y="389" width="0.0248%" height="15" fill="rgb(242,56,43)" fg:x="479" fg:w="4"/><text x="3.2209%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (16 samples, 0.10%)</title><rect x="2.9957%" y="357" width="0.0992%" height="15" fill="rgb(233,99,24)" fg:x="483" fg:w="16"/><text x="3.2457%" y="367.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (21 samples, 0.13%)</title><rect x="2.9709%" y="405" width="0.1302%" height="15" fill="rgb(234,209,42)" fg:x="479" fg:w="21"/><text x="3.2209%" y="415.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (17 samples, 0.11%)</title><rect x="2.9957%" y="389" width="0.1054%" height="15" fill="rgb(227,7,12)" fg:x="483" fg:w="17"/><text x="3.2457%" y="399.50"></text></g><g><title>bevy_example`parking::Inner::unpark (17 samples, 0.11%)</title><rect x="2.9957%" y="373" width="0.1054%" height="15" fill="rgb(245,203,43)" fg:x="483" fg:w="17"/><text x="3.2457%" y="383.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (25 samples, 0.16%)</title><rect x="2.9709%" y="421" width="0.1551%" height="15" fill="rgb(238,205,33)" fg:x="479" fg:w="25"/><text x="3.2209%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.02%)</title><rect x="3.1074%" y="405" width="0.0186%" height="15" fill="rgb(231,56,7)" fg:x="501" fg:w="3"/><text x="3.3574%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.02%)</title><rect x="3.1074%" y="389" width="0.0186%" height="15" fill="rgb(244,186,29)" fg:x="501" fg:w="3"/><text x="3.3574%" y="399.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (26 samples, 0.16%)</title><rect x="2.9709%" y="437" width="0.1613%" height="15" fill="rgb(234,111,31)" fg:x="479" fg:w="26"/><text x="3.2209%" y="447.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (30 samples, 0.19%)</title><rect x="2.9523%" y="453" width="0.1861%" height="15" fill="rgb(241,149,10)" fg:x="476" fg:w="30"/><text x="3.2023%" y="463.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (34 samples, 0.21%)</title><rect x="2.9399%" y="469" width="0.2109%" height="15" fill="rgb(249,206,44)" fg:x="474" fg:w="34"/><text x="3.1899%" y="479.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::is_disjoint (2 samples, 0.01%)</title><rect x="3.1384%" y="453" width="0.0124%" height="15" fill="rgb(251,153,30)" fg:x="506" fg:w="2"/><text x="3.3884%" y="463.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn_inner::_{{closure}} (39 samples, 0.24%)</title><rect x="2.9275%" y="501" width="0.2419%" height="15" fill="rgb(239,152,38)" fg:x="472" fg:w="39"/><text x="3.1775%" y="511.50"></text></g><g><title>bevy_example`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="2.9275%" y="485" width="0.2419%" height="15" fill="rgb(249,139,47)" fg:x="472" fg:w="39"/><text x="3.1775%" y="495.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::apply_deferred (3 samples, 0.02%)</title><rect x="3.1508%" y="469" width="0.0186%" height="15" fill="rgb(244,64,35)" fg:x="508" fg:w="3"/><text x="3.4008%" y="479.50"></text></g><g><title>bevy_example`bevy_ecs::system::commands::_::_&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (2 samples, 0.01%)</title><rect x="3.1570%" y="453" width="0.0124%" height="15" fill="rgb(216,46,15)" fg:x="509" fg:w="2"/><text x="3.4070%" y="463.50"></text></g><g><title>bevy_example`bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued (2 samples, 0.01%)</title><rect x="3.1570%" y="437" width="0.0124%" height="15" fill="rgb(250,74,19)" fg:x="509" fg:w="2"/><text x="3.4070%" y="447.50"></text></g><g><title>bevy_example`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (118 samples, 0.73%)</title><rect x="2.4437%" y="533" width="0.7319%" height="15" fill="rgb(249,42,33)" fg:x="394" fg:w="118"/><text x="2.6937%" y="543.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (113 samples, 0.70%)</title><rect x="2.4747%" y="517" width="0.7009%" height="15" fill="rgb(242,149,17)" fg:x="399" fg:w="113"/><text x="2.7247%" y="527.50"></text></g><g><title>bevy_example`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.15%)</title><rect x="3.1818%" y="517" width="0.1489%" height="15" fill="rgb(244,29,21)" fg:x="513" fg:w="24"/><text x="3.4318%" y="527.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (29 samples, 0.18%)</title><rect x="3.1756%" y="533" width="0.1799%" height="15" fill="rgb(220,130,37)" fg:x="512" fg:w="29"/><text x="3.4256%" y="543.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (4 samples, 0.02%)</title><rect x="3.3306%" y="517" width="0.0248%" height="15" fill="rgb(211,67,2)" fg:x="537" fg:w="4"/><text x="3.5806%" y="527.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (149 samples, 0.92%)</title><rect x="2.4375%" y="549" width="0.9241%" height="15" fill="rgb(235,68,52)" fg:x="393" fg:w="149"/><text x="2.6875%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (101 samples, 0.63%)</title><rect x="3.3989%" y="533" width="0.6264%" height="15" fill="rgb(246,142,3)" fg:x="548" fg:w="101"/><text x="3.6489%" y="543.50"></text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (258 samples, 1.60%)</title><rect x="2.4375%" y="565" width="1.6002%" height="15" fill="rgb(241,25,7)" fg:x="393" fg:w="258"/><text x="2.6875%" y="575.50"></text></g><g><title>bevy_example`parking::Inner::park (108 samples, 0.67%)</title><rect x="3.3679%" y="549" width="0.6699%" height="15" fill="rgb(242,119,39)" fg:x="543" fg:w="108"/><text x="3.6179%" y="559.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (295 samples, 1.83%)</title><rect x="2.2142%" y="581" width="1.8297%" height="15" fill="rgb(241,98,45)" fg:x="357" fg:w="295"/><text x="2.4642%" y="591.50">b..</text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (298 samples, 1.85%)</title><rect x="2.2018%" y="597" width="1.8483%" height="15" fill="rgb(254,28,30)" fg:x="355" fg:w="298"/><text x="2.4518%" y="607.50">b..</text></g><g><title>bevy_example`async_executor::Executor::spawn (6 samples, 0.04%)</title><rect x="4.0625%" y="373" width="0.0372%" height="15" fill="rgb(241,142,54)" fg:x="655" fg:w="6"/><text x="4.3125%" y="383.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (6 samples, 0.04%)</title><rect x="4.0625%" y="357" width="0.0372%" height="15" fill="rgb(222,85,15)" fg:x="655" fg:w="6"/><text x="4.3125%" y="367.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (6 samples, 0.04%)</title><rect x="4.0625%" y="341" width="0.0372%" height="15" fill="rgb(210,85,47)" fg:x="655" fg:w="6"/><text x="4.3125%" y="351.50"></text></g><g><title>bevy_example`parking::Inner::unpark (6 samples, 0.04%)</title><rect x="4.0625%" y="325" width="0.0372%" height="15" fill="rgb(224,206,25)" fg:x="655" fg:w="6"/><text x="4.3125%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.04%)</title><rect x="4.0625%" y="309" width="0.0372%" height="15" fill="rgb(243,201,19)" fg:x="655" fg:w="6"/><text x="4.3125%" y="319.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (7 samples, 0.04%)</title><rect x="4.0625%" y="405" width="0.0434%" height="15" fill="rgb(236,59,4)" fg:x="655" fg:w="7"/><text x="4.3125%" y="415.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (7 samples, 0.04%)</title><rect x="4.0625%" y="389" width="0.0434%" height="15" fill="rgb(254,179,45)" fg:x="655" fg:w="7"/><text x="4.3125%" y="399.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (15 samples, 0.09%)</title><rect x="4.0563%" y="437" width="0.0930%" height="15" fill="rgb(226,14,10)" fg:x="654" fg:w="15"/><text x="4.3063%" y="447.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (15 samples, 0.09%)</title><rect x="4.0563%" y="421" width="0.0930%" height="15" fill="rgb(244,27,41)" fg:x="654" fg:w="15"/><text x="4.3063%" y="431.50"></text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.04%)</title><rect x="4.1059%" y="405" width="0.0434%" height="15" fill="rgb(235,35,32)" fg:x="662" fg:w="7"/><text x="4.3559%" y="415.50"></text></g><g><title>bevy_example`parking::Inner::park (6 samples, 0.04%)</title><rect x="4.1121%" y="389" width="0.0372%" height="15" fill="rgb(218,68,31)" fg:x="663" fg:w="6"/><text x="4.3621%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (6 samples, 0.04%)</title><rect x="4.1121%" y="373" width="0.0372%" height="15" fill="rgb(207,120,37)" fg:x="663" fg:w="6"/><text x="4.3621%" y="383.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (18 samples, 0.11%)</title><rect x="4.0501%" y="597" width="0.1116%" height="15" fill="rgb(227,98,0)" fg:x="653" fg:w="18"/><text x="4.3001%" y="607.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (18 samples, 0.11%)</title><rect x="4.0501%" y="581" width="0.1116%" height="15" fill="rgb(207,7,3)" fg:x="653" fg:w="18"/><text x="4.3001%" y="591.50"></text></g><g><title>bevy_example`bevy_ecs::system::system::System::run (18 samples, 0.11%)</title><rect x="4.0501%" y="565" width="0.1116%" height="15" fill="rgb(206,98,19)" fg:x="653" fg:w="18"/><text x="4.3001%" y="575.50"></text></g><g><title>bevy_example`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.11%)</title><rect x="4.0501%" y="549" width="0.1116%" height="15" fill="rgb(217,5,26)" fg:x="653" fg:w="18"/><text x="4.3001%" y="559.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::try_schedule_scope (18 samples, 0.11%)</title><rect x="4.0501%" y="533" width="0.1116%" height="15" fill="rgb(235,190,38)" fg:x="653" fg:w="18"/><text x="4.3001%" y="543.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (18 samples, 0.11%)</title><rect x="4.0501%" y="517" width="0.1116%" height="15" fill="rgb(247,86,24)" fg:x="653" fg:w="18"/><text x="4.3001%" y="527.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (18 samples, 0.11%)</title><rect x="4.0501%" y="501" width="0.1116%" height="15" fill="rgb(205,101,16)" fg:x="653" fg:w="18"/><text x="4.3001%" y="511.50"></text></g><g><title>bevy_example`bevy_ecs::system::system::System::run (18 samples, 0.11%)</title><rect x="4.0501%" y="485" width="0.1116%" height="15" fill="rgb(246,168,33)" fg:x="653" fg:w="18"/><text x="4.3001%" y="495.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::resource_scope (17 samples, 0.11%)</title><rect x="4.0563%" y="469" width="0.1054%" height="15" fill="rgb(231,114,1)" fg:x="654" fg:w="17"/><text x="4.3063%" y="479.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::try_schedule_scope (17 samples, 0.11%)</title><rect x="4.0563%" y="453" width="0.1054%" height="15" fill="rgb(207,184,53)" fg:x="654" fg:w="17"/><text x="4.3063%" y="463.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::schedule::Schedule::run (5 samples, 0.03%)</title><rect x="4.1742%" y="597" width="0.0310%" height="15" fill="rgb(224,95,51)" fg:x="673" fg:w="5"/><text x="4.4242%" y="607.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::schedule::Schedule::initialize (5 samples, 0.03%)</title><rect x="4.1742%" y="581" width="0.0310%" height="15" fill="rgb(212,188,45)" fg:x="673" fg:w="5"/><text x="4.4242%" y="591.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::schedule::ScheduleGraph::initialize (2 samples, 0.01%)</title><rect x="4.1928%" y="565" width="0.0124%" height="15" fill="rgb(223,154,38)" fg:x="676" fg:w="2"/><text x="4.4428%" y="575.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::initialize (2 samples, 0.01%)</title><rect x="4.1928%" y="549" width="0.0124%" height="15" fill="rgb(251,22,52)" fg:x="676" fg:w="2"/><text x="4.4428%" y="559.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::query::Query&lt;D,F&gt; as bevy_ecs::system::system_param::SystemParam&gt;::init_state (2 samples, 0.01%)</title><rect x="4.1928%" y="533" width="0.0124%" height="15" fill="rgb(229,209,22)" fg:x="676" fg:w="2"/><text x="4.4428%" y="543.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::try_schedule_scope (327 samples, 2.03%)</title><rect x="2.1894%" y="613" width="2.0282%" height="15" fill="rgb(234,138,34)" fg:x="353" fg:w="327"/><text x="2.4394%" y="623.50">b..</text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (328 samples, 2.03%)</title><rect x="2.1894%" y="677" width="2.0344%" height="15" fill="rgb(212,95,11)" fg:x="353" fg:w="328"/><text x="2.4394%" y="687.50">b..</text></g><g><title>bevy_example`bevy_ecs::system::system::System::run (328 samples, 2.03%)</title><rect x="2.1894%" y="661" width="2.0344%" height="15" fill="rgb(240,179,47)" fg:x="353" fg:w="328"/><text x="2.4394%" y="671.50">b..</text></g><g><title>bevy_example`bevy_ecs::world::World::last_change_tick_scope (328 samples, 2.03%)</title><rect x="2.1894%" y="645" width="2.0344%" height="15" fill="rgb(240,163,11)" fg:x="353" fg:w="328"/><text x="2.4394%" y="655.50">b..</text></g><g><title>bevy_example`bevy_ecs::world::World::resource_scope (328 samples, 2.03%)</title><rect x="2.1894%" y="629" width="2.0344%" height="15" fill="rgb(236,37,12)" fg:x="353" fg:w="328"/><text x="2.4394%" y="639.50">b..</text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (329 samples, 2.04%)</title><rect x="2.1894%" y="693" width="2.0406%" height="15" fill="rgb(232,164,16)" fg:x="353" fg:w="329"/><text x="2.4394%" y="703.50">b..</text></g><g><title>bevy_example`bevy_app::sub_app::SubApps::update (577 samples, 3.58%)</title><rect x="0.6574%" y="725" width="3.5787%" height="15" fill="rgb(244,205,15)" fg:x="106" fg:w="577"/><text x="0.9074%" y="735.50">bevy..</text></g><g><title>bevy_example`bevy_ecs::world::World::schedule_scope (330 samples, 2.05%)</title><rect x="2.1894%" y="709" width="2.0468%" height="15" fill="rgb(223,117,47)" fg:x="353" fg:w="330"/><text x="2.4394%" y="719.50">b..</text></g><g><title>bevy_example`&lt;bevy_ecs::change_detection::NonSendMut&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::init_state (2 samples, 0.01%)</title><rect x="4.2486%" y="709" width="0.0124%" height="15" fill="rgb(244,107,35)" fg:x="685" fg:w="2"/><text x="4.4986%" y="719.50"></text></g><g><title>bevy_example`bevy_ecs::query::state::QueryState&lt;D,F&gt;::new_archetype_internal (2 samples, 0.01%)</title><rect x="4.2982%" y="693" width="0.0124%" height="15" fill="rgb(205,140,8)" fg:x="693" fg:w="2"/><text x="4.5482%" y="703.50"></text></g><g><title>bevy_example`bevy_ecs::system::function_system::SystemState&lt;Param&gt;::new (12 samples, 0.07%)</title><rect x="4.2486%" y="725" width="0.0744%" height="15" fill="rgb(228,84,46)" fg:x="685" fg:w="12"/><text x="4.4986%" y="735.50"></text></g><g><title>bevy_example`bevy_ecs::query::state::QueryState&lt;D,F&gt;::new_with_access (8 samples, 0.05%)</title><rect x="4.2734%" y="709" width="0.0496%" height="15" fill="rgb(254,188,9)" fg:x="689" fg:w="8"/><text x="4.5234%" y="719.50"></text></g><g><title>bevy_example`bevy_winit::system::create_monitors (5 samples, 0.03%)</title><rect x="4.3230%" y="725" width="0.0310%" height="15" fill="rgb(206,112,54)" fg:x="697" fg:w="5"/><text x="4.5730%" y="735.50"></text></g><g><title>bevy_example`&lt;winit::platform_impl::macos::monitor::MonitorHandle as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="4.3354%" y="709" width="0.0186%" height="15" fill="rgb(216,84,49)" fg:x="699" fg:w="3"/><text x="4.5854%" y="719.50"></text></g><g><title>AppKit`-[NSResponder init] (2 samples, 0.01%)</title><rect x="4.3726%" y="629" width="0.0124%" height="15" fill="rgb(214,194,35)" fg:x="705" fg:w="2"/><text x="4.6226%" y="639.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (2 samples, 0.01%)</title><rect x="4.3726%" y="613" width="0.0124%" height="15" fill="rgb(249,28,3)" fg:x="705" fg:w="2"/><text x="4.6226%" y="623.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="4.3726%" y="597" width="0.0124%" height="15" fill="rgb(222,56,52)" fg:x="705" fg:w="2"/><text x="4.6226%" y="607.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="4.3726%" y="581" width="0.0124%" height="15" fill="rgb(245,217,50)" fg:x="705" fg:w="2"/><text x="4.6226%" y="591.50"></text></g><g><title>AppKit`initializePropertyInfo (2 samples, 0.01%)</title><rect x="4.3726%" y="565" width="0.0124%" height="15" fill="rgb(213,201,24)" fg:x="705" fg:w="2"/><text x="4.6226%" y="575.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (3 samples, 0.02%)</title><rect x="4.3912%" y="453" width="0.0186%" height="15" fill="rgb(248,116,28)" fg:x="708" fg:w="3"/><text x="4.6412%" y="463.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (3 samples, 0.02%)</title><rect x="4.3912%" y="437" width="0.0186%" height="15" fill="rgb(219,72,43)" fg:x="708" fg:w="3"/><text x="4.6412%" y="447.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (3 samples, 0.02%)</title><rect x="4.3912%" y="421" width="0.0186%" height="15" fill="rgb(209,138,14)" fg:x="708" fg:w="3"/><text x="4.6412%" y="431.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (3 samples, 0.02%)</title><rect x="4.3912%" y="405" width="0.0186%" height="15" fill="rgb(222,18,33)" fg:x="708" fg:w="3"/><text x="4.6412%" y="415.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (3 samples, 0.02%)</title><rect x="4.3912%" y="389" width="0.0186%" height="15" fill="rgb(213,199,7)" fg:x="708" fg:w="3"/><text x="4.6412%" y="399.50"></text></g><g><title>AppKit`-[NSButtonCell init] (2 samples, 0.01%)</title><rect x="4.3974%" y="373" width="0.0124%" height="15" fill="rgb(250,110,10)" fg:x="709" fg:w="2"/><text x="4.6474%" y="383.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (2 samples, 0.01%)</title><rect x="4.3974%" y="357" width="0.0124%" height="15" fill="rgb(248,123,6)" fg:x="709" fg:w="2"/><text x="4.6474%" y="367.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (2 samples, 0.01%)</title><rect x="4.3974%" y="341" width="0.0124%" height="15" fill="rgb(206,91,31)" fg:x="709" fg:w="2"/><text x="4.6474%" y="351.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (2 samples, 0.01%)</title><rect x="4.3974%" y="325" width="0.0124%" height="15" fill="rgb(211,154,13)" fg:x="709" fg:w="2"/><text x="4.6474%" y="335.50"></text></g><g><title>UIFoundation`+[NSFont systemFontOfSize:width:] (2 samples, 0.01%)</title><rect x="4.3974%" y="309" width="0.0124%" height="15" fill="rgb(225,148,7)" fg:x="709" fg:w="2"/><text x="4.6474%" y="319.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (2 samples, 0.01%)</title><rect x="4.3974%" y="293" width="0.0124%" height="15" fill="rgb(220,160,43)" fg:x="709" fg:w="2"/><text x="4.6474%" y="303.50"></text></g><g><title>UIFoundation`+[__NSFontTypefaceInfo typefaceInfoForFontDescriptor:] (2 samples, 0.01%)</title><rect x="4.3974%" y="277" width="0.0124%" height="15" fill="rgb(213,52,39)" fg:x="709" fg:w="2"/><text x="4.6474%" y="287.50"></text></g><g><title>Foundation`-[NSConcreteMapTable setObject:forKey:] (2 samples, 0.01%)</title><rect x="4.3974%" y="261" width="0.0124%" height="15" fill="rgb(243,137,7)" fg:x="709" fg:w="2"/><text x="4.6474%" y="271.50"></text></g><g><title>Foundation`probeGC (2 samples, 0.01%)</title><rect x="4.3974%" y="245" width="0.0124%" height="15" fill="rgb(230,79,13)" fg:x="709" fg:w="2"/><text x="4.6474%" y="255.50"></text></g><g><title>CoreText`TDescriptor::Hash (2 samples, 0.01%)</title><rect x="4.3974%" y="229" width="0.0124%" height="15" fill="rgb(247,105,23)" fg:x="709" fg:w="2"/><text x="4.6474%" y="239.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (2 samples, 0.01%)</title><rect x="4.3974%" y="213" width="0.0124%" height="15" fill="rgb(223,179,41)" fg:x="709" fg:w="2"/><text x="4.6474%" y="223.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (2 samples, 0.01%)</title><rect x="4.3974%" y="197" width="0.0124%" height="15" fill="rgb(218,9,34)" fg:x="709" fg:w="2"/><text x="4.6474%" y="207.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (2 samples, 0.01%)</title><rect x="4.3974%" y="181" width="0.0124%" height="15" fill="rgb(222,106,8)" fg:x="709" fg:w="2"/><text x="4.6474%" y="191.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (2 samples, 0.01%)</title><rect x="4.3974%" y="165" width="0.0124%" height="15" fill="rgb(211,220,0)" fg:x="709" fg:w="2"/><text x="4.6474%" y="175.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*, void const*, __CFString const*) (2 samples, 0.01%)</title><rect x="4.3974%" y="149" width="0.0124%" height="15" fill="rgb(229,52,16)" fg:x="709" fg:w="2"/><text x="4.6474%" y="159.50"></text></g><g><title>CoreText`AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*) (2 samples, 0.01%)</title><rect x="4.3974%" y="133" width="0.0124%" height="15" fill="rgb(212,155,18)" fg:x="709" fg:w="2"/><text x="4.6474%" y="143.50"></text></g><g><title>libFontRegistry.dylib`XTCopyFontWithName (2 samples, 0.01%)</title><rect x="4.3974%" y="117" width="0.0124%" height="15" fill="rgb(242,21,14)" fg:x="709" fg:w="2"/><text x="4.6474%" y="127.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::TGlobalFontRegistry (2 samples, 0.01%)</title><rect x="4.3974%" y="101" width="0.0124%" height="15" fill="rgb(222,19,48)" fg:x="709" fg:w="2"/><text x="4.6474%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (2 samples, 0.01%)</title><rect x="4.3974%" y="85" width="0.0124%" height="15" fill="rgb(232,45,27)" fg:x="709" fg:w="2"/><text x="4.6474%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (2 samples, 0.01%)</title><rect x="4.3974%" y="69" width="0.0124%" height="15" fill="rgb(249,103,42)" fg:x="709" fg:w="2"/><text x="4.6474%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (2 samples, 0.01%)</title><rect x="4.3974%" y="53" width="0.0124%" height="15" fill="rgb(246,81,33)" fg:x="709" fg:w="2"/><text x="4.6474%" y="63.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::CreateRegistry (2 samples, 0.01%)</title><rect x="4.3974%" y="37" width="0.0124%" height="15" fill="rgb(252,33,42)" fg:x="709" fg:w="2"/><text x="4.6474%" y="47.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (5 samples, 0.03%)</title><rect x="4.3850%" y="581" width="0.0310%" height="15" fill="rgb(209,212,41)" fg:x="707" fg:w="5"/><text x="4.6350%" y="591.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (4 samples, 0.02%)</title><rect x="4.3912%" y="565" width="0.0248%" height="15" fill="rgb(207,154,6)" fg:x="708" fg:w="4"/><text x="4.6412%" y="575.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (4 samples, 0.02%)</title><rect x="4.3912%" y="549" width="0.0248%" height="15" fill="rgb(223,64,47)" fg:x="708" fg:w="4"/><text x="4.6412%" y="559.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (4 samples, 0.02%)</title><rect x="4.3912%" y="533" width="0.0248%" height="15" fill="rgb(211,161,38)" fg:x="708" fg:w="4"/><text x="4.6412%" y="543.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (4 samples, 0.02%)</title><rect x="4.3912%" y="517" width="0.0248%" height="15" fill="rgb(219,138,40)" fg:x="708" fg:w="4"/><text x="4.6412%" y="527.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (4 samples, 0.02%)</title><rect x="4.3912%" y="501" width="0.0248%" height="15" fill="rgb(241,228,46)" fg:x="708" fg:w="4"/><text x="4.6412%" y="511.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (4 samples, 0.02%)</title><rect x="4.3912%" y="485" width="0.0248%" height="15" fill="rgb(223,209,38)" fg:x="708" fg:w="4"/><text x="4.6412%" y="495.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (4 samples, 0.02%)</title><rect x="4.3912%" y="469" width="0.0248%" height="15" fill="rgb(236,164,45)" fg:x="708" fg:w="4"/><text x="4.6412%" y="479.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (6 samples, 0.04%)</title><rect x="4.3850%" y="597" width="0.0372%" height="15" fill="rgb(231,15,5)" fg:x="707" fg:w="6"/><text x="4.6350%" y="607.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (8 samples, 0.05%)</title><rect x="4.3850%" y="613" width="0.0496%" height="15" fill="rgb(252,35,15)" fg:x="707" fg:w="8"/><text x="4.6350%" y="623.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (2 samples, 0.01%)</title><rect x="4.4223%" y="597" width="0.0124%" height="15" fill="rgb(248,181,18)" fg:x="713" fg:w="2"/><text x="4.6723%" y="607.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (2 samples, 0.01%)</title><rect x="4.4223%" y="581" width="0.0124%" height="15" fill="rgb(233,39,42)" fg:x="713" fg:w="2"/><text x="4.6723%" y="591.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (2 samples, 0.01%)</title><rect x="4.4223%" y="565" width="0.0124%" height="15" fill="rgb(238,110,33)" fg:x="713" fg:w="2"/><text x="4.6723%" y="575.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (12 samples, 0.07%)</title><rect x="4.3726%" y="661" width="0.0744%" height="15" fill="rgb(233,195,10)" fg:x="705" fg:w="12"/><text x="4.6226%" y="671.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (12 samples, 0.07%)</title><rect x="4.3726%" y="645" width="0.0744%" height="15" fill="rgb(254,105,3)" fg:x="705" fg:w="12"/><text x="4.6226%" y="655.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (10 samples, 0.06%)</title><rect x="4.3850%" y="629" width="0.0620%" height="15" fill="rgb(221,225,9)" fg:x="707" fg:w="10"/><text x="4.6350%" y="639.50"></text></g><g><title>bevy_example`bevy_winit::system::create_windows (16 samples, 0.10%)</title><rect x="4.3540%" y="725" width="0.0992%" height="15" fill="rgb(224,227,45)" fg:x="702" fg:w="16"/><text x="4.6040%" y="735.50"></text></g><g><title>bevy_example`bevy_winit::winit_windows::WinitWindows::create_window (16 samples, 0.10%)</title><rect x="4.3540%" y="709" width="0.0992%" height="15" fill="rgb(229,198,43)" fg:x="702" fg:w="16"/><text x="4.6040%" y="719.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::window::Window::new (14 samples, 0.09%)</title><rect x="4.3664%" y="693" width="0.0868%" height="15" fill="rgb(206,209,35)" fg:x="704" fg:w="14"/><text x="4.6164%" y="703.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::window_delegate::WindowDelegate::new (14 samples, 0.09%)</title><rect x="4.3664%" y="677" width="0.0868%" height="15" fill="rgb(245,195,53)" fg:x="704" fg:w="14"/><text x="4.6164%" y="687.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_ecs::system::function_system::SystemMeta&gt; (2 samples, 0.01%)</title><rect x="4.4657%" y="725" width="0.0124%" height="15" fill="rgb(240,92,26)" fg:x="720" fg:w="2"/><text x="4.7157%" y="735.50"></text></g><g><title>bevy_example`objc2_foundation::thread::run_on_main (2 samples, 0.01%)</title><rect x="4.4781%" y="725" width="0.0124%" height="15" fill="rgb(207,40,23)" fg:x="722" fg:w="2"/><text x="4.7281%" y="735.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::window_delegate::WindowDelegate::request_redraw (2 samples, 0.01%)</title><rect x="4.4905%" y="725" width="0.0124%" height="15" fill="rgb(223,111,35)" fg:x="724" fg:w="2"/><text x="4.7405%" y="735.50"></text></g><g><title>bevy_example`&lt;bevy_winit::state::WinitAppRunnerState&lt;T&gt; as winit::application::ApplicationHandler&lt;T&gt;&gt;::about_to_wait (621 samples, 3.85%)</title><rect x="0.6574%" y="741" width="3.8516%" height="15" fill="rgb(229,147,28)" fg:x="106" fg:w="621"/><text x="0.9074%" y="751.50">bevy..</text></g><g><title>bevy_example`winit::platform_impl::macos::event_handler::EventHandler::handle_event (624 samples, 3.87%)</title><rect x="0.6512%" y="773" width="3.8702%" height="15" fill="rgb(211,29,28)" fg:x="105" fg:w="624"/><text x="0.9012%" y="783.50">bevy..</text></g><g><title>bevy_example`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (623 samples, 3.86%)</title><rect x="0.6574%" y="757" width="3.8640%" height="15" fill="rgb(228,72,33)" fg:x="106" fg:w="623"/><text x="0.9074%" y="767.50">bevy..</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (652 samples, 4.04%)</title><rect x="0.4838%" y="837" width="4.0439%" height="15" fill="rgb(205,214,31)" fg:x="78" fg:w="652"/><text x="0.7338%" y="847.50">Core..</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (651 samples, 4.04%)</title><rect x="0.4900%" y="821" width="4.0377%" height="15" fill="rgb(224,111,15)" fg:x="79" fg:w="651"/><text x="0.7400%" y="831.50">Core..</text></g><g><title>bevy_example`winit::platform_impl::macos::observer::control_flow_end_handler (625 samples, 3.88%)</title><rect x="0.6512%" y="805" width="3.8764%" height="15" fill="rgb(253,21,26)" fg:x="105" fg:w="625"/><text x="0.9012%" y="815.50">bevy..</text></g><g><title>bevy_example`winit::platform_impl::macos::app_state::ApplicationDelegate::cleared (625 samples, 3.88%)</title><rect x="0.6512%" y="789" width="3.8764%" height="15" fill="rgb(245,139,43)" fg:x="105" fg:w="625"/><text x="0.9012%" y="799.50">bevy..</text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (2 samples, 0.01%)</title><rect x="4.5277%" y="837" width="0.0124%" height="15" fill="rgb(252,170,7)" fg:x="730" fg:w="2"/><text x="4.7777%" y="847.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (2 samples, 0.01%)</title><rect x="4.5277%" y="821" width="0.0124%" height="15" fill="rgb(231,118,14)" fg:x="730" fg:w="2"/><text x="4.7777%" y="831.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerInvalidate (2 samples, 0.01%)</title><rect x="4.5277%" y="805" width="0.0124%" height="15" fill="rgb(238,83,0)" fg:x="730" fg:w="2"/><text x="4.7777%" y="815.50"></text></g><g><title>CoreFoundation`CFRunLoopRemoveTimer (2 samples, 0.01%)</title><rect x="4.5277%" y="789" width="0.0124%" height="15" fill="rgb(221,39,39)" fg:x="730" fg:w="2"/><text x="4.7777%" y="799.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (2 samples, 0.01%)</title><rect x="4.5401%" y="837" width="0.0124%" height="15" fill="rgb(222,119,46)" fg:x="732" fg:w="2"/><text x="4.7901%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.01%)</title><rect x="4.5401%" y="821" width="0.0124%" height="15" fill="rgb(222,165,49)" fg:x="732" fg:w="2"/><text x="4.7901%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.01%)</title><rect x="4.5401%" y="805" width="0.0124%" height="15" fill="rgb(219,113,52)" fg:x="732" fg:w="2"/><text x="4.7901%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (2 samples, 0.01%)</title><rect x="4.5525%" y="837" width="0.0124%" height="15" fill="rgb(214,7,15)" fg:x="734" fg:w="2"/><text x="4.8025%" y="847.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (663 samples, 4.11%)</title><rect x="0.4590%" y="853" width="4.1121%" height="15" fill="rgb(235,32,4)" fg:x="74" fg:w="663"/><text x="0.7090%" y="863.50">Core..</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (683 samples, 4.24%)</title><rect x="0.3411%" y="869" width="4.2362%" height="15" fill="rgb(238,90,54)" fg:x="55" fg:w="683"/><text x="0.5911%" y="879.50">CoreF..</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (685 samples, 4.25%)</title><rect x="0.3411%" y="885" width="4.2486%" height="15" fill="rgb(213,208,19)" fg:x="55" fg:w="685"/><text x="0.5911%" y="895.50">HIToo..</text></g><g><title>AppKit`_DPSNextEvent (701 samples, 4.35%)</title><rect x="0.2543%" y="933" width="4.3478%" height="15" fill="rgb(233,156,4)" fg:x="41" fg:w="701"/><text x="0.5043%" y="943.50">AppKi..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (688 samples, 4.27%)</title><rect x="0.3349%" y="917" width="4.2672%" height="15" fill="rgb(207,194,5)" fg:x="54" fg:w="688"/><text x="0.5849%" y="927.50">HIToo..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (688 samples, 4.27%)</title><rect x="0.3349%" y="901" width="4.2672%" height="15" fill="rgb(206,111,30)" fg:x="54" fg:w="688"/><text x="0.5849%" y="911.50">HIToo..</text></g><g><title>HIToolbox`_DropPendingBoost (2 samples, 0.01%)</title><rect x="4.5897%" y="885" width="0.0124%" height="15" fill="rgb(243,70,54)" fg:x="740" fg:w="2"/><text x="4.8397%" y="895.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.01%)</title><rect x="4.5897%" y="869" width="0.0124%" height="15" fill="rgb(242,28,8)" fg:x="740" fg:w="2"/><text x="4.8397%" y="879.50"></text></g><g><title>AppKit`_NS_SetBasicPasteTelemetry (3 samples, 0.02%)</title><rect x="4.6083%" y="933" width="0.0186%" height="15" fill="rgb(219,106,18)" fg:x="743" fg:w="3"/><text x="4.8583%" y="943.50"></text></g><g><title>bevy_example`bevy_app::app::App::run (744 samples, 4.61%)</title><rect x="0.0186%" y="1029" width="4.6145%" height="15" fill="rgb(244,222,10)" fg:x="3" fg:w="744"/><text x="0.2686%" y="1039.50">bevy_..</text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once{{vtable.shim}} (744 samples, 4.61%)</title><rect x="0.0186%" y="1013" width="4.6145%" height="15" fill="rgb(236,179,52)" fg:x="3" fg:w="744"/><text x="0.2686%" y="1023.50">bevy_..</text></g><g><title>bevy_example`bevy_winit::state::winit_runner (744 samples, 4.61%)</title><rect x="0.0186%" y="997" width="4.6145%" height="15" fill="rgb(213,23,39)" fg:x="3" fg:w="744"/><text x="0.2686%" y="1007.50">bevy_..</text></g><g><title>bevy_example`winit::platform_impl::macos::event_handler::EventHandler::set (730 samples, 4.53%)</title><rect x="0.1054%" y="981" width="4.5277%" height="15" fill="rgb(238,48,10)" fg:x="17" fg:w="730"/><text x="0.3554%" y="991.50">bevy_..</text></g><g><title>AppKit`-[NSApplication run] (730 samples, 4.53%)</title><rect x="0.1054%" y="965" width="4.5277%" height="15" fill="rgb(251,196,23)" fg:x="17" fg:w="730"/><text x="0.3554%" y="975.50">AppKi..</text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (708 samples, 4.39%)</title><rect x="0.2419%" y="949" width="4.3912%" height="15" fill="rgb(250,152,24)" fg:x="39" fg:w="708"/><text x="0.4919%" y="959.50">AppKi..</text></g><g><title>bevy_example`&lt;bevy_core_pipeline::smaa::SmaaPlugin as bevy_app::plugin::Plugin&gt;::build (2 samples, 0.01%)</title><rect x="4.6393%" y="965" width="0.0124%" height="15" fill="rgb(209,150,17)" fg:x="748" fg:w="2"/><text x="4.8893%" y="975.50"></text></g><g><title>bevy_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.04%)</title><rect x="4.6517%" y="901" width="0.0372%" height="15" fill="rgb(234,202,34)" fg:x="750" fg:w="6"/><text x="4.9017%" y="911.50"></text></g><g><title>bevy_example`ruzstd::decoding::literals_section_decoder::decode_literals (3 samples, 0.02%)</title><rect x="4.6952%" y="837" width="0.0186%" height="15" fill="rgb(253,148,53)" fg:x="757" fg:w="3"/><text x="4.9452%" y="847.50"></text></g><g><title>bevy_example`ruzstd::decoding::decode_buffer::DecodeBuffer::repeat (2 samples, 0.01%)</title><rect x="4.7138%" y="821" width="0.0124%" height="15" fill="rgb(218,129,16)" fg:x="760" fg:w="2"/><text x="4.9638%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.01%)</title><rect x="4.7138%" y="805" width="0.0124%" height="15" fill="rgb(216,85,19)" fg:x="760" fg:w="2"/><text x="4.9638%" y="815.50"></text></g><g><title>bevy_example`ruzstd::decoding::sequence_execution::execute_sequences (3 samples, 0.02%)</title><rect x="4.7138%" y="837" width="0.0186%" height="15" fill="rgb(235,228,7)" fg:x="760" fg:w="3"/><text x="4.9638%" y="847.50"></text></g><g><title>bevy_example`ruzstd::decoding::block_decoder::BlockDecoder::decode_block_content (9 samples, 0.06%)</title><rect x="4.6890%" y="853" width="0.0558%" height="15" fill="rgb(245,175,0)" fg:x="756" fg:w="9"/><text x="4.9390%" y="863.50"></text></g><g><title>bevy_example`ruzstd::decoding::sequence_section_decoder::decode_sequences (2 samples, 0.01%)</title><rect x="4.7324%" y="837" width="0.0124%" height="15" fill="rgb(208,168,36)" fg:x="763" fg:w="2"/><text x="4.9824%" y="847.50"></text></g><g><title>bevy_example`std::io::default_read_to_end (10 samples, 0.06%)</title><rect x="4.6890%" y="901" width="0.0620%" height="15" fill="rgb(246,171,24)" fg:x="756" fg:w="10"/><text x="4.9390%" y="911.50"></text></g><g><title>bevy_example`std::io::default_read_to_end::small_probe_read (10 samples, 0.06%)</title><rect x="4.6890%" y="885" width="0.0620%" height="15" fill="rgb(215,142,24)" fg:x="756" fg:w="10"/><text x="4.9390%" y="895.50"></text></g><g><title>bevy_example`&lt;ruzstd::decoding::streaming_decoder::StreamingDecoder&lt;READ,DEC&gt; as std::io::Read&gt;::read (10 samples, 0.06%)</title><rect x="4.6890%" y="869" width="0.0620%" height="15" fill="rgb(250,187,7)" fg:x="756" fg:w="10"/><text x="4.9390%" y="879.50"></text></g><g><title>bevy_example`&lt;(S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12) as bevy_app::plugin::sealed::Plugins&lt;(bevy_app::plugin::sealed::PluginsTupleMarker,P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12)&gt;&gt;::add_to_app (20 samples, 0.12%)</title><rect x="4.6331%" y="997" width="0.1240%" height="15" fill="rgb(228,66,33)" fg:x="747" fg:w="20"/><text x="4.8831%" y="1007.50"></text></g><g><title>bevy_example`bevy_app::app::App::add_boxed_plugin (20 samples, 0.12%)</title><rect x="4.6331%" y="981" width="0.1240%" height="15" fill="rgb(234,215,21)" fg:x="747" fg:w="20"/><text x="4.8831%" y="991.50"></text></g><g><title>bevy_example`&lt;bevy_core_pipeline::tonemapping::TonemappingPlugin as bevy_app::plugin::Plugin&gt;::build (17 samples, 0.11%)</title><rect x="4.6517%" y="965" width="0.1054%" height="15" fill="rgb(222,191,20)" fg:x="750" fg:w="17"/><text x="4.9017%" y="975.50"></text></g><g><title>bevy_example`bevy_core_pipeline::tonemapping::setup_tonemapping_lut_image (17 samples, 0.11%)</title><rect x="4.6517%" y="949" width="0.1054%" height="15" fill="rgb(245,79,54)" fg:x="750" fg:w="17"/><text x="4.9017%" y="959.50"></text></g><g><title>bevy_example`bevy_image::image::Image::from_buffer (17 samples, 0.11%)</title><rect x="4.6517%" y="933" width="0.1054%" height="15" fill="rgb(240,10,37)" fg:x="750" fg:w="17"/><text x="4.9017%" y="943.50"></text></g><g><title>bevy_example`bevy_image::ktx2::ktx2_buffer_to_image (17 samples, 0.11%)</title><rect x="4.6517%" y="917" width="0.1054%" height="15" fill="rgb(214,192,32)" fg:x="750" fg:w="17"/><text x="4.9017%" y="927.50"></text></g><g><title>CoreAudio`HALC_ShellObject::ExecuteCommand(void  (2 samples, 0.01%)</title><rect x="4.7758%" y="821" width="0.0124%" height="15" fill="rgb(209,36,54)" fg:x="770" fg:w="2"/><text x="5.0258%" y="831.50"></text></g><g><title>CoreAudio`HALB_CommandGate::ExecuteCommand(void  (2 samples, 0.01%)</title><rect x="4.7758%" y="805" width="0.0124%" height="15" fill="rgb(220,10,11)" fg:x="770" fg:w="2"/><text x="5.0258%" y="815.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::_ReconcileDeviceList(bool, bool, std::__1::vector&lt;unsigned int, std::__1::allocator&lt;unsigned int&gt;&gt;&amp;, std::__1::vector&lt;unsigned int, std::__1::allocator (2 samples, 0.01%)</title><rect x="4.7758%" y="789" width="0.0124%" height="15" fill="rgb(221,106,17)" fg:x="770" fg:w="2"/><text x="5.0258%" y="799.50"></text></g><g><title>CoreAudio`HALC_ShellObjectMap::CreateObject (2 samples, 0.01%)</title><rect x="4.7758%" y="773" width="0.0124%" height="15" fill="rgb(251,142,44)" fg:x="770" fg:w="2"/><text x="5.0258%" y="783.50"></text></g><g><title>CoreAudio`HALC_ShellDevice::Activate (2 samples, 0.01%)</title><rect x="4.7758%" y="757" width="0.0124%" height="15" fill="rgb(238,13,15)" fg:x="770" fg:w="2"/><text x="5.0258%" y="767.50"></text></g><g><title>CoreAudio`HALC_ShellDevice::RebuildControlList (2 samples, 0.01%)</title><rect x="4.7758%" y="741" width="0.0124%" height="15" fill="rgb(208,107,27)" fg:x="770" fg:w="2"/><text x="5.0258%" y="751.50"></text></g><g><title>CoreAudio`HALSystem::InitializeDevices (3 samples, 0.02%)</title><rect x="4.7758%" y="901" width="0.0186%" height="15" fill="rgb(205,136,37)" fg:x="770" fg:w="3"/><text x="5.0258%" y="911.50"></text></g><g><title>CoreAudio`HALPlugInManagement::CreateHALPlugIn (3 samples, 0.02%)</title><rect x="4.7758%" y="885" width="0.0186%" height="15" fill="rgb(250,205,27)" fg:x="770" fg:w="3"/><text x="5.0258%" y="895.50"></text></g><g><title>CoreAudio`HAL_HardwarePlugIn_InitializeWithObjectID(AudioHardwarePlugInInterface**, unsigned int) (3 samples, 0.02%)</title><rect x="4.7758%" y="869" width="0.0186%" height="15" fill="rgb(210,80,43)" fg:x="770" fg:w="3"/><text x="5.0258%" y="879.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::ConnectToServer (3 samples, 0.02%)</title><rect x="4.7758%" y="853" width="0.0186%" height="15" fill="rgb(247,160,36)" fg:x="770" fg:w="3"/><text x="5.0258%" y="863.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::ReconcileDeviceList (3 samples, 0.02%)</title><rect x="4.7758%" y="837" width="0.0186%" height="15" fill="rgb(234,13,49)" fg:x="770" fg:w="3"/><text x="5.0258%" y="847.50"></text></g><g><title>bevy_example`&lt;cpal::platform::platform_impl::Host as cpal::traits::HostTrait&gt;::default_output_device (5 samples, 0.03%)</title><rect x="4.7696%" y="949" width="0.0310%" height="15" fill="rgb(234,122,0)" fg:x="769" fg:w="5"/><text x="5.0196%" y="959.50"></text></g><g><title>CoreAudio`AudioObjectGetPropertyData_mac_imp (4 samples, 0.02%)</title><rect x="4.7758%" y="933" width="0.0248%" height="15" fill="rgb(207,146,38)" fg:x="770" fg:w="4"/><text x="5.0258%" y="943.50"></text></g><g><title>CoreAudio`HALSystem::CheckOutInstance (4 samples, 0.02%)</title><rect x="4.7758%" y="917" width="0.0248%" height="15" fill="rgb(207,177,25)" fg:x="770" fg:w="4"/><text x="5.0258%" y="927.50"></text></g><g><title>AudioToolboxCore`AudioComponentFindNext (2 samples, 0.01%)</title><rect x="4.8006%" y="917" width="0.0124%" height="15" fill="rgb(211,178,42)" fg:x="774" fg:w="2"/><text x="5.0506%" y="927.50"></text></g><g><title>AudioToolboxCore`GlobalComponentPluginMgr() (2 samples, 0.01%)</title><rect x="4.8006%" y="901" width="0.0124%" height="15" fill="rgb(230,69,54)" fg:x="774" fg:w="2"/><text x="5.0506%" y="911.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_RegistrarService::retrieveComponents (2 samples, 0.01%)</title><rect x="4.8006%" y="885" width="0.0124%" height="15" fill="rgb(214,135,41)" fg:x="774" fg:w="2"/><text x="5.0506%" y="895.50"></text></g><g><title>CoreFoundation`_CF_forwarding_prep_0 (2 samples, 0.01%)</title><rect x="4.8006%" y="869" width="0.0124%" height="15" fill="rgb(237,67,25)" fg:x="774" fg:w="2"/><text x="5.0506%" y="879.50"></text></g><g><title>CoreFoundation`___forwarding___ (2 samples, 0.01%)</title><rect x="4.8006%" y="853" width="0.0124%" height="15" fill="rgb(222,189,50)" fg:x="774" fg:w="2"/><text x="5.0506%" y="863.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (2 samples, 0.01%)</title><rect x="4.8006%" y="837" width="0.0124%" height="15" fill="rgb(245,148,34)" fg:x="774" fg:w="2"/><text x="5.0506%" y="847.50"></text></g><g><title>Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_3 (2 samples, 0.01%)</title><rect x="4.8006%" y="821" width="0.0124%" height="15" fill="rgb(222,29,6)" fg:x="774" fg:w="2"/><text x="5.0506%" y="831.50"></text></g><g><title>Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] (2 samples, 0.01%)</title><rect x="4.8006%" y="805" width="0.0124%" height="15" fill="rgb(221,189,43)" fg:x="774" fg:w="2"/><text x="5.0506%" y="815.50"></text></g><g><title>Foundation`__NSXPCCONNECTION_IS_CALLING_OUT_TO_REPLY_BLOCK__ (2 samples, 0.01%)</title><rect x="4.8006%" y="789" width="0.0124%" height="15" fill="rgb(207,36,27)" fg:x="774" fg:w="2"/><text x="5.0506%" y="799.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (2 samples, 0.01%)</title><rect x="4.8006%" y="773" width="0.0124%" height="15" fill="rgb(217,90,24)" fg:x="774" fg:w="2"/><text x="5.0506%" y="783.50"></text></g><g><title>CoreFoundation`__invoking___ (2 samples, 0.01%)</title><rect x="4.8006%" y="757" width="0.0124%" height="15" fill="rgb(224,66,35)" fg:x="774" fg:w="2"/><text x="5.0506%" y="767.50"></text></g><g><title>AudioToolboxCore`invocation function for block in AudioComponentMgr_RegistrarService::retrieveComponents (2 samples, 0.01%)</title><rect x="4.8006%" y="741" width="0.0124%" height="15" fill="rgb(221,13,50)" fg:x="774" fg:w="2"/><text x="5.0506%" y="751.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_RegistrarService::mergeServerRegistrations (2 samples, 0.01%)</title><rect x="4.8006%" y="725" width="0.0124%" height="15" fill="rgb(236,68,49)" fg:x="774" fg:w="2"/><text x="5.0506%" y="735.50"></text></g><g><title>AudioToolboxCore`AudioComponentInstanceNew (2 samples, 0.01%)</title><rect x="4.8130%" y="917" width="0.0124%" height="15" fill="rgb(229,146,28)" fg:x="776" fg:w="2"/><text x="5.0630%" y="927.50"></text></g><g><title>AudioToolboxCore`Synchronously (2 samples, 0.01%)</title><rect x="4.8130%" y="901" width="0.0124%" height="15" fill="rgb(225,31,38)" fg:x="776" fg:w="2"/><text x="5.0630%" y="911.50"></text></g><g><title>AudioToolboxCore`__AudioComponentInstanceNew_block_invoke (2 samples, 0.01%)</title><rect x="4.8130%" y="885" width="0.0124%" height="15" fill="rgb(250,208,3)" fg:x="776" fg:w="2"/><text x="5.0630%" y="895.50"></text></g><g><title>AudioToolboxCore`instantiate(OpaqueAudioComponent*, unsigned int, bool, void (OpaqueAudioComponentInstance*, int) block_pointer) (2 samples, 0.01%)</title><rect x="4.8130%" y="869" width="0.0124%" height="15" fill="rgb(246,54,23)" fg:x="776" fg:w="2"/><text x="5.0630%" y="879.50"></text></g><g><title>AudioToolboxCore`APComponent::newInstance(unsigned int, bool, void  (2 samples, 0.01%)</title><rect x="4.8130%" y="853" width="0.0124%" height="15" fill="rgb(243,76,11)" fg:x="776" fg:w="2"/><text x="5.0630%" y="863.50"></text></g><g><title>AudioToolboxCore`APComponent_FromBundle_Loadable::ResolveFactoryFunction (2 samples, 0.01%)</title><rect x="4.8130%" y="837" width="0.0124%" height="15" fill="rgb(245,21,50)" fg:x="776" fg:w="2"/><text x="5.0630%" y="847.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (2 samples, 0.01%)</title><rect x="4.8130%" y="821" width="0.0124%" height="15" fill="rgb(228,9,43)" fg:x="776" fg:w="2"/><text x="5.0630%" y="831.50"></text></g><g><title>bevy_example`cpal::host::coreaudio::macos::Device::default_config (6 samples, 0.04%)</title><rect x="4.8006%" y="949" width="0.0372%" height="15" fill="rgb(208,100,47)" fg:x="774" fg:w="6"/><text x="5.0506%" y="959.50"></text></g><g><title>bevy_example`cpal::host::coreaudio::macos::audio_unit_from_device (6 samples, 0.04%)</title><rect x="4.8006%" y="933" width="0.0372%" height="15" fill="rgb(232,26,8)" fg:x="774" fg:w="6"/><text x="5.0506%" y="943.50"></text></g><g><title>AudioToolboxCore`AudioUnitInitialize (2 samples, 0.01%)</title><rect x="4.8254%" y="917" width="0.0124%" height="15" fill="rgb(216,166,38)" fg:x="778" fg:w="2"/><text x="5.0754%" y="927.50"></text></g><g><title>CoreAudio`0x000000010e307b3c (2 samples, 0.01%)</title><rect x="4.8254%" y="901" width="0.0124%" height="15" fill="rgb(251,202,51)" fg:x="778" fg:w="2"/><text x="5.0754%" y="911.50"></text></g><g><title>CoreAudio`0x000000010e302f98 (2 samples, 0.01%)</title><rect x="4.8254%" y="885" width="0.0124%" height="15" fill="rgb(254,216,34)" fg:x="778" fg:w="2"/><text x="5.0754%" y="895.50"></text></g><g><title>CoreAudio`0x000000010e200250 (2 samples, 0.01%)</title><rect x="4.8254%" y="869" width="0.0124%" height="15" fill="rgb(251,32,27)" fg:x="778" fg:w="2"/><text x="5.0754%" y="879.50"></text></g><g><title>bevy_example`&lt;bevy_audio::AudioPlugin as bevy_app::plugin::Plugin&gt;::build (12 samples, 0.07%)</title><rect x="4.7696%" y="997" width="0.0744%" height="15" fill="rgb(208,127,28)" fg:x="769" fg:w="12"/><text x="5.0196%" y="1007.50"></text></g><g><title>bevy_example`&lt;bevy_audio::audio_output::AudioOutput as core::default::Default&gt;::default (12 samples, 0.07%)</title><rect x="4.7696%" y="981" width="0.0744%" height="15" fill="rgb(224,137,22)" fg:x="769" fg:w="12"/><text x="5.0196%" y="991.50"></text></g><g><title>bevy_example`rodio::stream::OutputStream::try_default (12 samples, 0.07%)</title><rect x="4.7696%" y="965" width="0.0744%" height="15" fill="rgb(254,70,32)" fg:x="769" fg:w="12"/><text x="5.0196%" y="975.50"></text></g><g><title>bevy_example`&lt;bevy_gizmos::GizmoPlugin as bevy_app::plugin::Plugin&gt;::build (2 samples, 0.01%)</title><rect x="4.8440%" y="997" width="0.0124%" height="15" fill="rgb(229,75,37)" fg:x="781" fg:w="2"/><text x="5.0940%" y="1007.50"></text></g><g><title>bevy_example`&lt;bevy_input::InputPlugin as bevy_app::plugin::Plugin&gt;::build (2 samples, 0.01%)</title><rect x="4.8626%" y="997" width="0.0124%" height="15" fill="rgb(252,64,23)" fg:x="784" fg:w="2"/><text x="5.1126%" y="1007.50"></text></g><g><title>bevy_example`&lt;bevy_log::LogPlugin as bevy_app::plugin::Plugin&gt;::build (2 samples, 0.01%)</title><rect x="4.8750%" y="997" width="0.0124%" height="15" fill="rgb(232,162,48)" fg:x="786" fg:w="2"/><text x="5.1250%" y="1007.50"></text></g><g><title>bevy_example`tracing_subscriber::filter::env::builder::Builder::parse_lossy (2 samples, 0.01%)</title><rect x="4.8750%" y="981" width="0.0124%" height="15" fill="rgb(246,160,12)" fg:x="786" fg:w="2"/><text x="5.1250%" y="991.50"></text></g><g><title>bevy_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="4.8750%" y="965" width="0.0124%" height="15" fill="rgb(247,166,0)" fg:x="786" fg:w="2"/><text x="5.1250%" y="975.50"></text></g><g><title>bevy_example`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="4.8750%" y="949" width="0.0124%" height="15" fill="rgb(249,219,21)" fg:x="786" fg:w="2"/><text x="5.1250%" y="959.50"></text></g><g><title>bevy_example`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.01%)</title><rect x="4.8750%" y="933" width="0.0124%" height="15" fill="rgb(205,209,3)" fg:x="786" fg:w="2"/><text x="5.1250%" y="943.50"></text></g><g><title>bevy_example`tracing_subscriber::filter::env::directive::Directive::parse (2 samples, 0.01%)</title><rect x="4.8750%" y="917" width="0.0124%" height="15" fill="rgb(243,44,1)" fg:x="786" fg:w="2"/><text x="5.1250%" y="927.50"></text></g><g><title>bevy_example`once_cell::imp::OnceCell&lt;T&gt;::initialize (2 samples, 0.01%)</title><rect x="4.8750%" y="901" width="0.0124%" height="15" fill="rgb(206,159,16)" fg:x="786" fg:w="2"/><text x="5.1250%" y="911.50"></text></g><g><title>bevy_example`once_cell::imp::initialize_or_wait (2 samples, 0.01%)</title><rect x="4.8750%" y="885" width="0.0124%" height="15" fill="rgb(244,77,30)" fg:x="786" fg:w="2"/><text x="5.1250%" y="895.50"></text></g><g><title>bevy_example`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (2 samples, 0.01%)</title><rect x="4.8750%" y="869" width="0.0124%" height="15" fill="rgb(218,69,12)" fg:x="786" fg:w="2"/><text x="5.1250%" y="879.50"></text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once (2 samples, 0.01%)</title><rect x="4.8750%" y="853" width="0.0124%" height="15" fill="rgb(212,87,7)" fg:x="786" fg:w="2"/><text x="5.1250%" y="863.50"></text></g><g><title>bevy_example`regex::regex::string::Regex::new (2 samples, 0.01%)</title><rect x="4.8750%" y="837" width="0.0124%" height="15" fill="rgb(245,114,25)" fg:x="786" fg:w="2"/><text x="5.1250%" y="847.50"></text></g><g><title>bevy_example`regex::builders::Builder::build_one_string (2 samples, 0.01%)</title><rect x="4.8750%" y="821" width="0.0124%" height="15" fill="rgb(210,61,42)" fg:x="786" fg:w="2"/><text x="5.1250%" y="831.50"></text></g><g><title>bevy_example`regex_automata::meta::regex::Builder::build (2 samples, 0.01%)</title><rect x="4.8750%" y="805" width="0.0124%" height="15" fill="rgb(211,52,33)" fg:x="786" fg:w="2"/><text x="5.1250%" y="815.50"></text></g><g><title>bevy_example`&lt;(S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13) as bevy_app::plugin::sealed::Plugins&lt;(bevy_app::plugin::sealed::PluginsTupleMarker,P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13)&gt;&gt;::add_to_app (6 samples, 0.04%)</title><rect x="4.8874%" y="981" width="0.0372%" height="15" fill="rgb(234,58,33)" fg:x="788" fg:w="6"/><text x="5.1374%" y="991.50"></text></g><g><title>bevy_example`bevy_app::app::App::add_boxed_plugin (6 samples, 0.04%)</title><rect x="4.8874%" y="965" width="0.0372%" height="15" fill="rgb(220,115,36)" fg:x="788" fg:w="6"/><text x="5.1374%" y="975.50"></text></g><g><title>bevy_example`regex::regex::string::Regex::captures_at (2 samples, 0.01%)</title><rect x="4.9432%" y="933" width="0.0124%" height="15" fill="rgb(243,153,54)" fg:x="797" fg:w="2"/><text x="5.1932%" y="943.50"></text></g><g><title>bevy_example`&lt;bevy_pbr::PbrPlugin as bevy_app::plugin::Plugin&gt;::build (13 samples, 0.08%)</title><rect x="4.8874%" y="997" width="0.0806%" height="15" fill="rgb(251,47,18)" fg:x="788" fg:w="13"/><text x="5.1374%" y="1007.50"></text></g><g><title>bevy_example`bevy_render::render_resource::shader::Shader::preprocess (5 samples, 0.03%)</title><rect x="4.9370%" y="981" width="0.0310%" height="15" fill="rgb(242,102,42)" fg:x="796" fg:w="5"/><text x="5.1870%" y="991.50"></text></g><g><title>bevy_example`naga_oil::compose::get_preprocessor_data (5 samples, 0.03%)</title><rect x="4.9370%" y="965" width="0.0310%" height="15" fill="rgb(234,31,38)" fg:x="796" fg:w="5"/><text x="5.1870%" y="975.50"></text></g><g><title>bevy_example`naga_oil::compose::preprocess::Preprocessor::get_preprocessor_metadata (5 samples, 0.03%)</title><rect x="4.9370%" y="949" width="0.0310%" height="15" fill="rgb(221,117,51)" fg:x="796" fg:w="5"/><text x="5.1870%" y="959.50"></text></g><g><title>bevy_example`bevy_render::render_resource::shader::Shader::preprocess (2 samples, 0.01%)</title><rect x="4.9805%" y="885" width="0.0124%" height="15" fill="rgb(212,20,18)" fg:x="803" fg:w="2"/><text x="5.2305%" y="895.50"></text></g><g><title>bevy_example`naga_oil::compose::get_preprocessor_data (2 samples, 0.01%)</title><rect x="4.9805%" y="869" width="0.0124%" height="15" fill="rgb(245,133,36)" fg:x="803" fg:w="2"/><text x="5.2305%" y="879.50"></text></g><g><title>bevy_example`once_cell::imp::OnceCell&lt;T&gt;::initialize (2 samples, 0.01%)</title><rect x="4.9805%" y="853" width="0.0124%" height="15" fill="rgb(212,6,19)" fg:x="803" fg:w="2"/><text x="5.2305%" y="863.50"></text></g><g><title>bevy_example`once_cell::imp::initialize_or_wait (2 samples, 0.01%)</title><rect x="4.9805%" y="837" width="0.0124%" height="15" fill="rgb(218,1,36)" fg:x="803" fg:w="2"/><text x="5.2305%" y="847.50"></text></g><g><title>bevy_example`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (2 samples, 0.01%)</title><rect x="4.9805%" y="821" width="0.0124%" height="15" fill="rgb(246,84,54)" fg:x="803" fg:w="2"/><text x="5.2305%" y="831.50"></text></g><g><title>bevy_example`&lt;naga_oil::compose::preprocess::Preprocessor as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="4.9805%" y="805" width="0.0124%" height="15" fill="rgb(242,110,6)" fg:x="803" fg:w="2"/><text x="5.2305%" y="815.50"></text></g><g><title>bevy_example`regex::regex::string::Regex::new (2 samples, 0.01%)</title><rect x="4.9805%" y="789" width="0.0124%" height="15" fill="rgb(214,47,5)" fg:x="803" fg:w="2"/><text x="5.2305%" y="799.50"></text></g><g><title>bevy_example`regex::builders::Builder::build_one_string (2 samples, 0.01%)</title><rect x="4.9805%" y="773" width="0.0124%" height="15" fill="rgb(218,159,25)" fg:x="803" fg:w="2"/><text x="5.2305%" y="783.50"></text></g><g><title>bevy_example`regex_automata::meta::regex::Builder::build (2 samples, 0.01%)</title><rect x="4.9805%" y="757" width="0.0124%" height="15" fill="rgb(215,211,28)" fg:x="803" fg:w="2"/><text x="5.2305%" y="767.50"></text></g><g><title>bevy_example`regex_automata::meta::strategy::new (2 samples, 0.01%)</title><rect x="4.9805%" y="741" width="0.0124%" height="15" fill="rgb(238,59,32)" fg:x="803" fg:w="2"/><text x="5.2305%" y="751.50"></text></g><g><title>bevy_example`regex_automata::nfa::thompson::compiler::Compiler::compile (2 samples, 0.01%)</title><rect x="4.9805%" y="725" width="0.0124%" height="15" fill="rgb(226,82,3)" fg:x="803" fg:w="2"/><text x="5.2305%" y="735.50"></text></g><g><title>bevy_example`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="4.9805%" y="709" width="0.0124%" height="15" fill="rgb(240,164,32)" fg:x="803" fg:w="2"/><text x="5.2305%" y="719.50"></text></g><g><title>bevy_example`&lt;(S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10) as bevy_app::plugin::sealed::Plugins&lt;(bevy_app::plugin::sealed::PluginsTupleMarker,P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)&gt;&gt;::add_to_app (5 samples, 0.03%)</title><rect x="4.9681%" y="981" width="0.0310%" height="15" fill="rgb(232,46,7)" fg:x="801" fg:w="5"/><text x="5.2181%" y="991.50"></text></g><g><title>bevy_example`bevy_app::app::App::add_boxed_plugin (5 samples, 0.03%)</title><rect x="4.9681%" y="965" width="0.0310%" height="15" fill="rgb(229,129,53)" fg:x="801" fg:w="5"/><text x="5.2181%" y="975.50"></text></g><g><title>bevy_example`&lt;bevy_render::view::window::WindowRenderPlugin as bevy_app::plugin::Plugin&gt;::build (3 samples, 0.02%)</title><rect x="4.9805%" y="949" width="0.0186%" height="15" fill="rgb(234,188,29)" fg:x="803" fg:w="3"/><text x="5.2305%" y="959.50"></text></g><g><title>bevy_example`bevy_app::app::App::add_plugins (3 samples, 0.02%)</title><rect x="4.9805%" y="933" width="0.0186%" height="15" fill="rgb(246,141,4)" fg:x="803" fg:w="3"/><text x="5.2305%" y="943.50"></text></g><g><title>bevy_example`bevy_app::app::App::add_boxed_plugin (3 samples, 0.02%)</title><rect x="4.9805%" y="917" width="0.0186%" height="15" fill="rgb(229,23,39)" fg:x="803" fg:w="3"/><text x="5.2305%" y="927.50"></text></g><g><title>bevy_example`&lt;bevy_render::view::window::screenshot::ScreenshotPlugin as bevy_app::plugin::Plugin&gt;::build (3 samples, 0.02%)</title><rect x="4.9805%" y="901" width="0.0186%" height="15" fill="rgb(206,12,3)" fg:x="803" fg:w="3"/><text x="5.2305%" y="911.50"></text></g><g><title>bevy_example`&lt;bevy_app::app::App as bevy_asset::AssetApp&gt;::init_asset (2 samples, 0.01%)</title><rect x="4.9991%" y="981" width="0.0124%" height="15" fill="rgb(252,226,20)" fg:x="806" fg:w="2"/><text x="5.2491%" y="991.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_compute_pipeline (2 samples, 0.01%)</title><rect x="5.0115%" y="853" width="0.0124%" height="15" fill="rgb(216,123,35)" fg:x="808" fg:w="2"/><text x="5.2615%" y="863.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (2 samples, 0.01%)</title><rect x="5.0115%" y="837" width="0.0124%" height="15" fill="rgb(212,68,40)" fg:x="808" fg:w="2"/><text x="5.2615%" y="847.50"></text></g><g><title>bevy_example`wgpu::api::adapter::Adapter::request_device (3 samples, 0.02%)</title><rect x="5.0115%" y="965" width="0.0186%" height="15" fill="rgb(254,125,32)" fg:x="808" fg:w="3"/><text x="5.2615%" y="975.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreAdapter as wgpu::dispatch::AdapterInterface&gt;::request_device (3 samples, 0.02%)</title><rect x="5.0115%" y="949" width="0.0186%" height="15" fill="rgb(253,97,22)" fg:x="808" fg:w="3"/><text x="5.2615%" y="959.50"></text></g><g><title>bevy_example`wgpu_core::instance::_&lt;impl wgpu_core::global::Global&gt;::adapter_request_device (3 samples, 0.02%)</title><rect x="5.0115%" y="933" width="0.0186%" height="15" fill="rgb(241,101,14)" fg:x="808" fg:w="3"/><text x="5.2615%" y="943.50"></text></g><g><title>bevy_example`wgpu_core::instance::Adapter::create_device_and_queue (3 samples, 0.02%)</title><rect x="5.0115%" y="917" width="0.0186%" height="15" fill="rgb(238,103,29)" fg:x="808" fg:w="3"/><text x="5.2615%" y="927.50"></text></g><g><title>bevy_example`wgpu_core::instance::Adapter::create_device_and_queue_from_hal (3 samples, 0.02%)</title><rect x="5.0115%" y="901" width="0.0186%" height="15" fill="rgb(233,195,47)" fg:x="808" fg:w="3"/><text x="5.2615%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::resource::Device::new (3 samples, 0.02%)</title><rect x="5.0115%" y="885" width="0.0186%" height="15" fill="rgb(246,218,30)" fg:x="808" fg:w="3"/><text x="5.2615%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::indirect_validation::IndirectValidation::new (3 samples, 0.02%)</title><rect x="5.0115%" y="869" width="0.0186%" height="15" fill="rgb(219,145,47)" fg:x="808" fg:w="3"/><text x="5.2615%" y="879.50"></text></g><g><title>Metal`-[MTLIOAccelServiceGlobalContext init] (3 samples, 0.02%)</title><rect x="5.0425%" y="821" width="0.0186%" height="15" fill="rgb(243,12,26)" fg:x="813" fg:w="3"/><text x="5.2925%" y="831.50"></text></g><g><title>Metal`getMetalPluginClassForService (3 samples, 0.02%)</title><rect x="5.0425%" y="805" width="0.0186%" height="15" fill="rgb(214,87,16)" fg:x="813" fg:w="3"/><text x="5.2925%" y="815.50"></text></g><g><title>Foundation`-[NSBundle classNamed:] (2 samples, 0.01%)</title><rect x="5.0487%" y="789" width="0.0124%" height="15" fill="rgb(208,99,42)" fg:x="814" fg:w="2"/><text x="5.2987%" y="799.50"></text></g><g><title>bevy_example`&lt;bevy_render::RenderPlugin as bevy_app::plugin::Plugin&gt;::build (16 samples, 0.10%)</title><rect x="4.9681%" y="997" width="0.0992%" height="15" fill="rgb(253,99,2)" fg:x="801" fg:w="16"/><text x="5.2181%" y="1007.50"></text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.06%)</title><rect x="5.0115%" y="981" width="0.0558%" height="15" fill="rgb(220,168,23)" fg:x="808" fg:w="9"/><text x="5.2615%" y="991.50"></text></g><g><title>bevy_example`wgpu::api::instance::Instance::request_adapter (5 samples, 0.03%)</title><rect x="5.0363%" y="965" width="0.0310%" height="15" fill="rgb(242,38,24)" fg:x="812" fg:w="5"/><text x="5.2863%" y="975.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::dispatch::InstanceInterface&gt;::request_adapter (5 samples, 0.03%)</title><rect x="5.0363%" y="949" width="0.0310%" height="15" fill="rgb(225,182,9)" fg:x="812" fg:w="5"/><text x="5.2863%" y="959.50"></text></g><g><title>bevy_example`wgpu_core::instance::_&lt;impl wgpu_core::global::Global&gt;::request_adapter (5 samples, 0.03%)</title><rect x="5.0363%" y="933" width="0.0310%" height="15" fill="rgb(243,178,37)" fg:x="812" fg:w="5"/><text x="5.2863%" y="943.50"></text></g><g><title>bevy_example`wgpu_core::instance::Instance::request_adapter (5 samples, 0.03%)</title><rect x="5.0363%" y="917" width="0.0310%" height="15" fill="rgb(232,139,19)" fg:x="812" fg:w="5"/><text x="5.2863%" y="927.50"></text></g><g><title>bevy_example`&lt;I as wgpu_hal::dynamic::instance::DynInstance&gt;::enumerate_adapters (5 samples, 0.03%)</title><rect x="5.0363%" y="901" width="0.0310%" height="15" fill="rgb(225,201,24)" fg:x="812" fg:w="5"/><text x="5.2863%" y="911.50"></text></g><g><title>bevy_example`&lt;wgpu_hal::metal::Instance as wgpu_hal::Instance&gt;::enumerate_adapters (5 samples, 0.03%)</title><rect x="5.0363%" y="885" width="0.0310%" height="15" fill="rgb(221,47,46)" fg:x="812" fg:w="5"/><text x="5.2863%" y="895.50"></text></g><g><title>bevy_example`metal::device::Device::all (5 samples, 0.03%)</title><rect x="5.0363%" y="869" width="0.0310%" height="15" fill="rgb(249,23,13)" fg:x="812" fg:w="5"/><text x="5.2863%" y="879.50"></text></g><g><title>Metal`MTLCopyAllDevices (5 samples, 0.03%)</title><rect x="5.0363%" y="853" width="0.0310%" height="15" fill="rgb(219,9,5)" fg:x="812" fg:w="5"/><text x="5.2863%" y="863.50"></text></g><g><title>Metal`MTLRegisterDevices (4 samples, 0.02%)</title><rect x="5.0425%" y="837" width="0.0248%" height="15" fill="rgb(254,171,16)" fg:x="813" fg:w="4"/><text x="5.2925%" y="847.50"></text></g><g><title>bevy_example`&lt;bevy_scene::ScenePlugin as bevy_app::plugin::Plugin&gt;::build (3 samples, 0.02%)</title><rect x="5.0673%" y="997" width="0.0186%" height="15" fill="rgb(230,171,20)" fg:x="817" fg:w="3"/><text x="5.3173%" y="1007.50"></text></g><g><title>bevy_example`&lt;bevy_sprite::SpritePlugin as bevy_app::plugin::Plugin&gt;::build (2 samples, 0.01%)</title><rect x="5.0859%" y="997" width="0.0124%" height="15" fill="rgb(210,71,41)" fg:x="820" fg:w="2"/><text x="5.3359%" y="1007.50"></text></g><g><title>bevy_example`&lt;bevy_ui::UiPlugin as bevy_app::plugin::Plugin&gt;::build (2 samples, 0.01%)</title><rect x="5.1107%" y="997" width="0.0124%" height="15" fill="rgb(206,173,20)" fg:x="824" fg:w="2"/><text x="5.3607%" y="1007.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (2 samples, 0.01%)</title><rect x="5.1479%" y="933" width="0.0124%" height="15" fill="rgb(233,88,34)" fg:x="830" fg:w="2"/><text x="5.3979%" y="943.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (2 samples, 0.01%)</title><rect x="5.1479%" y="917" width="0.0124%" height="15" fill="rgb(223,209,46)" fg:x="830" fg:w="2"/><text x="5.3979%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="5.1479%" y="901" width="0.0124%" height="15" fill="rgb(250,43,18)" fg:x="830" fg:w="2"/><text x="5.3979%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="5.1479%" y="885" width="0.0124%" height="15" fill="rgb(208,13,10)" fg:x="830" fg:w="2"/><text x="5.3979%" y="895.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (2 samples, 0.01%)</title><rect x="5.1479%" y="869" width="0.0124%" height="15" fill="rgb(212,200,36)" fg:x="830" fg:w="2"/><text x="5.3979%" y="879.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (2 samples, 0.01%)</title><rect x="5.1479%" y="853" width="0.0124%" height="15" fill="rgb(225,90,30)" fg:x="830" fg:w="2"/><text x="5.3979%" y="863.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (2 samples, 0.01%)</title><rect x="5.1479%" y="837" width="0.0124%" height="15" fill="rgb(236,182,39)" fg:x="830" fg:w="2"/><text x="5.3979%" y="847.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (3 samples, 0.02%)</title><rect x="5.1603%" y="933" width="0.0186%" height="15" fill="rgb(212,144,35)" fg:x="832" fg:w="3"/><text x="5.4103%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.02%)</title><rect x="5.1603%" y="917" width="0.0186%" height="15" fill="rgb(228,63,44)" fg:x="832" fg:w="3"/><text x="5.4103%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="5.1603%" y="901" width="0.0186%" height="15" fill="rgb(228,109,6)" fg:x="832" fg:w="3"/><text x="5.4103%" y="911.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (3 samples, 0.02%)</title><rect x="5.1603%" y="885" width="0.0186%" height="15" fill="rgb(238,117,24)" fg:x="832" fg:w="3"/><text x="5.4103%" y="895.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateForReason (3 samples, 0.02%)</title><rect x="5.1603%" y="869" width="0.0186%" height="15" fill="rgb(242,26,26)" fg:x="832" fg:w="3"/><text x="5.4103%" y="879.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (3 samples, 0.02%)</title><rect x="5.1603%" y="853" width="0.0186%" height="15" fill="rgb(221,92,48)" fg:x="832" fg:w="3"/><text x="5.4103%" y="863.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (3 samples, 0.02%)</title><rect x="5.1603%" y="837" width="0.0186%" height="15" fill="rgb(209,209,32)" fg:x="832" fg:w="3"/><text x="5.4103%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.02%)</title><rect x="5.1603%" y="821" width="0.0186%" height="15" fill="rgb(221,70,22)" fg:x="832" fg:w="3"/><text x="5.4103%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="5.1603%" y="805" width="0.0186%" height="15" fill="rgb(248,145,5)" fg:x="832" fg:w="3"/><text x="5.4103%" y="815.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (3 samples, 0.02%)</title><rect x="5.1603%" y="789" width="0.0186%" height="15" fill="rgb(226,116,26)" fg:x="832" fg:w="3"/><text x="5.4103%" y="799.50"></text></g><g><title>AppKit`_NSCGSCreateUniqueDisplaysWithFlipOffset (3 samples, 0.02%)</title><rect x="5.1603%" y="773" width="0.0186%" height="15" fill="rgb(244,5,17)" fg:x="832" fg:w="3"/><text x="5.4103%" y="783.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (3 samples, 0.02%)</title><rect x="5.1603%" y="757" width="0.0186%" height="15" fill="rgb(252,159,33)" fg:x="832" fg:w="3"/><text x="5.4103%" y="767.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (3 samples, 0.02%)</title><rect x="5.1603%" y="741" width="0.0186%" height="15" fill="rgb(206,71,0)" fg:x="832" fg:w="3"/><text x="5.4103%" y="751.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (11 samples, 0.07%)</title><rect x="5.1355%" y="965" width="0.0682%" height="15" fill="rgb(233,118,54)" fg:x="828" fg:w="11"/><text x="5.3855%" y="975.50"></text></g><g><title>AppKit`-[NSApplication init] (11 samples, 0.07%)</title><rect x="5.1355%" y="949" width="0.0682%" height="15" fill="rgb(234,83,48)" fg:x="828" fg:w="11"/><text x="5.3855%" y="959.50"></text></g><g><title>AppKit`_NSInitializeAppContext (3 samples, 0.02%)</title><rect x="5.1851%" y="933" width="0.0186%" height="15" fill="rgb(228,3,54)" fg:x="836" fg:w="3"/><text x="5.4351%" y="943.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _isMenuBarVisible] (3 samples, 0.02%)</title><rect x="5.1851%" y="917" width="0.0186%" height="15" fill="rgb(226,155,13)" fg:x="836" fg:w="3"/><text x="5.4351%" y="927.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isVisible] (2 samples, 0.01%)</title><rect x="5.1913%" y="901" width="0.0124%" height="15" fill="rgb(241,28,37)" fg:x="837" fg:w="2"/><text x="5.4413%" y="911.50"></text></g><g><title>AppKit`_NSGetAggregateUIMode (2 samples, 0.01%)</title><rect x="5.1913%" y="885" width="0.0124%" height="15" fill="rgb(233,93,10)" fg:x="837" fg:w="2"/><text x="5.4413%" y="895.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _getAggregateUIMode:withOptions:] (2 samples, 0.01%)</title><rect x="5.1913%" y="869" width="0.0124%" height="15" fill="rgb(225,113,19)" fg:x="837" fg:w="2"/><text x="5.4413%" y="879.50"></text></g><g><title>AppKit`+[NSApplication _initializeRegisteredDefaults] (2 samples, 0.01%)</title><rect x="5.2037%" y="853" width="0.0124%" height="15" fill="rgb(241,2,18)" fg:x="839" fg:w="2"/><text x="5.4537%" y="863.50"></text></g><g><title>bevy_example`bevy_app::app::App::add_boxed_plugin (95 samples, 0.59%)</title><rect x="4.6331%" y="1013" width="0.5892%" height="15" fill="rgb(228,207,21)" fg:x="747" fg:w="95"/><text x="4.8831%" y="1023.50"></text></g><g><title>bevy_example`&lt;bevy_winit::WinitPlugin&lt;T&gt; as bevy_app::plugin::Plugin&gt;::build (15 samples, 0.09%)</title><rect x="5.1293%" y="997" width="0.0930%" height="15" fill="rgb(213,211,35)" fg:x="827" fg:w="15"/><text x="5.3793%" y="1007.50"></text></g><g><title>bevy_example`winit::platform_impl::macos::event_loop::EventLoop&lt;T&gt;::new (14 samples, 0.09%)</title><rect x="5.1355%" y="981" width="0.0868%" height="15" fill="rgb(209,83,10)" fg:x="828" fg:w="14"/><text x="5.3855%" y="991.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (3 samples, 0.02%)</title><rect x="5.2037%" y="965" width="0.0186%" height="15" fill="rgb(209,164,1)" fg:x="839" fg:w="3"/><text x="5.4537%" y="975.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (3 samples, 0.02%)</title><rect x="5.2037%" y="949" width="0.0186%" height="15" fill="rgb(213,184,43)" fg:x="839" fg:w="3"/><text x="5.4537%" y="959.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin&lt;lockdebug::lock_mixin (3 samples, 0.02%)</title><rect x="5.2037%" y="933" width="0.0186%" height="15" fill="rgb(231,61,34)" fg:x="839" fg:w="3"/><text x="5.4537%" y="943.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (3 samples, 0.02%)</title><rect x="5.2037%" y="917" width="0.0186%" height="15" fill="rgb(235,75,3)" fg:x="839" fg:w="3"/><text x="5.4537%" y="927.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (3 samples, 0.02%)</title><rect x="5.2037%" y="901" width="0.0186%" height="15" fill="rgb(220,106,47)" fg:x="839" fg:w="3"/><text x="5.4537%" y="911.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (3 samples, 0.02%)</title><rect x="5.2037%" y="885" width="0.0186%" height="15" fill="rgb(210,196,33)" fg:x="839" fg:w="3"/><text x="5.4537%" y="895.50"></text></g><g><title>AppKit`+[NSApplication initialize] (3 samples, 0.02%)</title><rect x="5.2037%" y="869" width="0.0186%" height="15" fill="rgb(229,154,42)" fg:x="839" fg:w="3"/><text x="5.4537%" y="879.50"></text></g><g><title>bevy_example`bevy_app::plugin_group::PluginGroupBuilder::finish (96 samples, 0.60%)</title><rect x="4.6331%" y="1029" width="0.5954%" height="15" fill="rgb(228,114,26)" fg:x="747" fg:w="96"/><text x="4.8831%" y="1039.50"></text></g><g><title>bevy_example`cosmic_text::buffer::Buffer::set_text (2 samples, 0.01%)</title><rect x="5.2286%" y="997" width="0.0124%" height="15" fill="rgb(208,144,1)" fg:x="843" fg:w="2"/><text x="5.4786%" y="1007.50"></text></g><g><title>bevy_example`cosmic_text::buffer::Buffer::shape_until_scroll (2 samples, 0.01%)</title><rect x="5.2286%" y="981" width="0.0124%" height="15" fill="rgb(239,112,37)" fg:x="843" fg:w="2"/><text x="5.4786%" y="991.50"></text></g><g><title>bevy_example`cosmic_text::buffer_line::BufferLine::layout (2 samples, 0.01%)</title><rect x="5.2286%" y="965" width="0.0124%" height="15" fill="rgb(210,96,50)" fg:x="843" fg:w="2"/><text x="5.4786%" y="975.50"></text></g><g><title>bevy_example`cosmic_text::buffer_line::BufferLine::shape (2 samples, 0.01%)</title><rect x="5.2286%" y="949" width="0.0124%" height="15" fill="rgb(222,178,2)" fg:x="843" fg:w="2"/><text x="5.4786%" y="959.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeLine::build (2 samples, 0.01%)</title><rect x="5.2286%" y="933" width="0.0124%" height="15" fill="rgb(226,74,18)" fg:x="843" fg:w="2"/><text x="5.4786%" y="943.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeSpan::build (2 samples, 0.01%)</title><rect x="5.2286%" y="917" width="0.0124%" height="15" fill="rgb(225,67,54)" fg:x="843" fg:w="2"/><text x="5.4786%" y="927.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeWord::build (2 samples, 0.01%)</title><rect x="5.2286%" y="901" width="0.0124%" height="15" fill="rgb(251,92,32)" fg:x="843" fg:w="2"/><text x="5.4786%" y="911.50"></text></g><g><title>bevy_example`cosmic_text::shape::Shaping::run (2 samples, 0.01%)</title><rect x="5.2286%" y="885" width="0.0124%" height="15" fill="rgb(228,149,22)" fg:x="843" fg:w="2"/><text x="5.4786%" y="895.50"></text></g><g><title>bevy_example`fontdb::parse_face_info (3 samples, 0.02%)</title><rect x="5.2534%" y="917" width="0.0186%" height="15" fill="rgb(243,54,13)" fg:x="847" fg:w="3"/><text x="5.5034%" y="927.50"></text></g><g><title>bevy_example`fontdb::Database::load_fonts_dir_impl (9 samples, 0.06%)</title><rect x="5.2534%" y="949" width="0.0558%" height="15" fill="rgb(243,180,28)" fg:x="847" fg:w="9"/><text x="5.5034%" y="959.50"></text></g><g><title>bevy_example`fontdb::Database::load_font_file_impl (9 samples, 0.06%)</title><rect x="5.2534%" y="933" width="0.0558%" height="15" fill="rgb(208,167,24)" fg:x="847" fg:w="9"/><text x="5.5034%" y="943.50"></text></g><g><title>bevy_example`std::fs::OpenOptions::_open (5 samples, 0.03%)</title><rect x="5.2782%" y="917" width="0.0310%" height="15" fill="rgb(245,73,45)" fg:x="851" fg:w="5"/><text x="5.5282%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__open (5 samples, 0.03%)</title><rect x="5.2782%" y="901" width="0.0310%" height="15" fill="rgb(237,203,48)" fg:x="851" fg:w="5"/><text x="5.5282%" y="911.50"></text></g><g><title>bevy_example`cosmic_text::font::system::FontSystem::new (12 samples, 0.07%)</title><rect x="5.2410%" y="997" width="0.0744%" height="15" fill="rgb(211,197,16)" fg:x="845" fg:w="12"/><text x="5.4910%" y="1007.50"></text></g><g><title>bevy_example`fontdb::Database::load_system_fonts (12 samples, 0.07%)</title><rect x="5.2410%" y="981" width="0.0744%" height="15" fill="rgb(243,99,51)" fg:x="845" fg:w="12"/><text x="5.4910%" y="991.50"></text></g><g><title>bevy_example`fontdb::Database::load_fonts_dir_impl (11 samples, 0.07%)</title><rect x="5.2472%" y="965" width="0.0682%" height="15" fill="rgb(215,123,29)" fg:x="846" fg:w="11"/><text x="5.4972%" y="975.50"></text></g><g><title>bevy_example`soft_ratatui::soft_backend::SoftBackend::new_with_font (15 samples, 0.09%)</title><rect x="5.2286%" y="1013" width="0.0930%" height="15" fill="rgb(239,186,37)" fg:x="843" fg:w="15"/><text x="5.4786%" y="1023.50"></text></g><g><title>bevy_example`main (865 samples, 5.37%)</title><rect x="0.0000%" y="1109" width="5.3650%" height="15" fill="rgb(252,136,39)" fg:x="0" fg:w="865"/><text x="0.2500%" y="1119.50">bevy_ex..</text></g><g><title>bevy_example`std::rt::lang_start_internal (865 samples, 5.37%)</title><rect x="0.0000%" y="1093" width="5.3650%" height="15" fill="rgb(223,213,32)" fg:x="0" fg:w="865"/><text x="0.2500%" y="1103.50">bevy_ex..</text></g><g><title>bevy_example`std::rt::lang_start::_{{closure}} (865 samples, 5.37%)</title><rect x="0.0000%" y="1077" width="5.3650%" height="15" fill="rgb(233,115,5)" fg:x="0" fg:w="865"/><text x="0.2500%" y="1087.50">bevy_ex..</text></g><g><title>bevy_example`std::sys::backtrace::__rust_begin_short_backtrace (865 samples, 5.37%)</title><rect x="0.0000%" y="1061" width="5.3650%" height="15" fill="rgb(207,226,44)" fg:x="0" fg:w="865"/><text x="0.2500%" y="1071.50">bevy_ex..</text></g><g><title>bevy_example`bevy_example::main (865 samples, 5.37%)</title><rect x="0.0000%" y="1045" width="5.3650%" height="15" fill="rgb(208,126,0)" fg:x="0" fg:w="865"/><text x="0.2500%" y="1055.50">bevy_ex..</text></g><g><title>bevy_example`egui_ratatui::ratagui_backend::RataguiBackend::new (22 samples, 0.14%)</title><rect x="5.2286%" y="1029" width="0.1365%" height="15" fill="rgb(244,66,21)" fg:x="843" fg:w="22"/><text x="5.4786%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.04%)</title><rect x="5.3216%" y="1013" width="0.0434%" height="15" fill="rgb(222,97,12)" fg:x="858" fg:w="7"/><text x="5.5716%" y="1023.50"></text></g><g><title>dyld`start (866 samples, 5.37%)</title><rect x="0.0000%" y="1125" width="5.3712%" height="15" fill="rgb(219,213,19)" fg:x="0" fg:w="866"/><text x="0.2500%" y="1135.50">dyld`st..</text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.02%)</title><rect x="5.3712%" y="1125" width="0.0248%" height="15" fill="rgb(252,169,30)" fg:x="866" fg:w="4"/><text x="5.6212%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (2 samples, 0.01%)</title><rect x="5.3960%" y="1125" width="0.0124%" height="15" fill="rgb(206,32,51)" fg:x="870" fg:w="2"/><text x="5.6460%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (155 samples, 0.96%)</title><rect x="5.4953%" y="1109" width="0.9614%" height="15" fill="rgb(250,172,42)" fg:x="886" fg:w="155"/><text x="5.7453%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (2 samples, 0.01%)</title><rect x="6.4690%" y="1093" width="0.0124%" height="15" fill="rgb(209,34,43)" fg:x="1043" fg:w="2"/><text x="6.7190%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (2 samples, 0.01%)</title><rect x="6.4690%" y="1077" width="0.0124%" height="15" fill="rgb(223,11,35)" fg:x="1043" fg:w="2"/><text x="6.7190%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="6.4690%" y="1061" width="0.0124%" height="15" fill="rgb(251,219,26)" fg:x="1043" fg:w="2"/><text x="6.7190%" y="1071.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (7 samples, 0.04%)</title><rect x="6.5310%" y="981" width="0.0434%" height="15" fill="rgb(231,119,3)" fg:x="1053" fg:w="7"/><text x="6.7810%" y="991.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (7 samples, 0.04%)</title><rect x="6.5310%" y="965" width="0.0434%" height="15" fill="rgb(216,97,11)" fg:x="1053" fg:w="7"/><text x="6.7810%" y="975.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (7 samples, 0.04%)</title><rect x="6.5310%" y="949" width="0.0434%" height="15" fill="rgb(223,59,9)" fg:x="1053" fg:w="7"/><text x="6.7810%" y="959.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (7 samples, 0.04%)</title><rect x="6.5310%" y="933" width="0.0434%" height="15" fill="rgb(233,93,31)" fg:x="1053" fg:w="7"/><text x="6.7810%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (7 samples, 0.04%)</title><rect x="6.5310%" y="917" width="0.0434%" height="15" fill="rgb(239,81,33)" fg:x="1053" fg:w="7"/><text x="6.7810%" y="927.50"></text></g><g><title>Foundation`+[NSNumber numberWithDouble:] (2 samples, 0.01%)</title><rect x="6.5869%" y="965" width="0.0124%" height="15" fill="rgb(213,120,34)" fg:x="1062" fg:w="2"/><text x="6.8369%" y="975.50"></text></g><g><title>Foundation`-[NSPlaceholderNumber initWithDouble:] (2 samples, 0.01%)</title><rect x="6.5869%" y="949" width="0.0124%" height="15" fill="rgb(243,49,53)" fg:x="1062" fg:w="2"/><text x="6.8369%" y="959.50"></text></g><g><title>CoreFoundation`CFNumberCreate (2 samples, 0.01%)</title><rect x="6.5869%" y="933" width="0.0124%" height="15" fill="rgb(247,216,33)" fg:x="1062" fg:w="2"/><text x="6.8369%" y="943.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (17 samples, 0.11%)</title><rect x="6.5248%" y="997" width="0.1054%" height="15" fill="rgb(226,26,14)" fg:x="1052" fg:w="17"/><text x="6.7748%" y="1007.50"></text></g><g><title>QuartzCore`mark_drawable_finish(CAMetalDrawable*, _CAMetalLayerPrivate*, bool, double) (8 samples, 0.05%)</title><rect x="6.5807%" y="981" width="0.0496%" height="15" fill="rgb(215,49,53)" fg:x="1061" fg:w="8"/><text x="6.8307%" y="991.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:] (5 samples, 0.03%)</title><rect x="6.5993%" y="965" width="0.0310%" height="15" fill="rgb(245,162,40)" fg:x="1064" fg:w="5"/><text x="6.8493%" y="975.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (4 samples, 0.02%)</title><rect x="6.6055%" y="949" width="0.0248%" height="15" fill="rgb(229,68,17)" fg:x="1065" fg:w="4"/><text x="6.8555%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.02%)</title><rect x="6.6055%" y="933" width="0.0248%" height="15" fill="rgb(213,182,10)" fg:x="1065" fg:w="4"/><text x="6.8555%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.02%)</title><rect x="6.6055%" y="917" width="0.0248%" height="15" fill="rgb(245,125,30)" fg:x="1065" fg:w="4"/><text x="6.8555%" y="927.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (18 samples, 0.11%)</title><rect x="6.5248%" y="1013" width="0.1116%" height="15" fill="rgb(232,202,2)" fg:x="1052" fg:w="18"/><text x="6.7748%" y="1023.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.01%)</title><rect x="6.6551%" y="965" width="0.0124%" height="15" fill="rgb(237,140,51)" fg:x="1073" fg:w="2"/><text x="6.9051%" y="975.50"></text></g><g><title>FramePacing`-[FPInFlightDrawableLifetime dealloc] (2 samples, 0.01%)</title><rect x="6.6737%" y="965" width="0.0124%" height="15" fill="rgb(236,157,25)" fg:x="1076" fg:w="2"/><text x="6.9237%" y="975.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (2 samples, 0.01%)</title><rect x="6.6737%" y="949" width="0.0124%" height="15" fill="rgb(219,209,0)" fg:x="1076" fg:w="2"/><text x="6.9237%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (2 samples, 0.01%)</title><rect x="6.6737%" y="933" width="0.0124%" height="15" fill="rgb(240,116,54)" fg:x="1076" fg:w="2"/><text x="6.9237%" y="943.50"></text></g><g><title>FramePacing`__142+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:]_block_invoke (8 samples, 0.05%)</title><rect x="6.6427%" y="981" width="0.0496%" height="15" fill="rgb(216,10,36)" fg:x="1071" fg:w="8"/><text x="6.8927%" y="991.50"></text></g><g><title>FramePacing`__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (11 samples, 0.07%)</title><rect x="6.6427%" y="997" width="0.0682%" height="15" fill="rgb(222,72,44)" fg:x="1071" fg:w="11"/><text x="6.8927%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.01%)</title><rect x="6.6985%" y="981" width="0.0124%" height="15" fill="rgb(232,159,9)" fg:x="1080" fg:w="2"/><text x="6.9485%" y="991.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _commandBufferForAddress:] (2 samples, 0.01%)</title><rect x="6.7109%" y="981" width="0.0124%" height="15" fill="rgb(210,39,32)" fg:x="1082" fg:w="2"/><text x="6.9609%" y="991.50"></text></g><g><title>FramePacing`__70+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:]_block_invoke (3 samples, 0.02%)</title><rect x="6.7419%" y="981" width="0.0186%" height="15" fill="rgb(216,194,45)" fg:x="1087" fg:w="3"/><text x="6.9919%" y="991.50"></text></g><g><title>FramePacing`__55+[FPCAMetalLayerState _updateCommandBufferState:block:]_block_invoke (12 samples, 0.07%)</title><rect x="6.7109%" y="997" width="0.0744%" height="15" fill="rgb(218,18,35)" fg:x="1082" fg:w="12"/><text x="6.9609%" y="1007.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM setObject:forKeyedSubscript:] (5 samples, 0.03%)</title><rect x="6.7915%" y="981" width="0.0310%" height="15" fill="rgb(207,83,51)" fg:x="1095" fg:w="5"/><text x="7.0415%" y="991.50"></text></g><g><title>CoreFoundation`__CFNumberHash (2 samples, 0.01%)</title><rect x="6.8101%" y="965" width="0.0124%" height="15" fill="rgb(225,63,43)" fg:x="1098" fg:w="2"/><text x="7.0601%" y="975.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (2 samples, 0.01%)</title><rect x="6.8101%" y="949" width="0.0124%" height="15" fill="rgb(207,57,36)" fg:x="1098" fg:w="2"/><text x="7.0601%" y="959.50"></text></g><g><title>FramePacing`__56+[FPCAMetalLayerState commandBufferCreate:creationTime:]_block_invoke (8 samples, 0.05%)</title><rect x="6.7853%" y="997" width="0.0496%" height="15" fill="rgb(216,99,33)" fg:x="1094" fg:w="8"/><text x="7.0353%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (38 samples, 0.24%)</title><rect x="6.6365%" y="1013" width="0.2357%" height="15" fill="rgb(225,42,16)" fg:x="1070" fg:w="38"/><text x="6.8865%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`__msync (4 samples, 0.02%)</title><rect x="6.8474%" y="997" width="0.0248%" height="15" fill="rgb(220,201,45)" fg:x="1104" fg:w="4"/><text x="7.0974%" y="1007.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (2 samples, 0.01%)</title><rect x="6.8908%" y="949" width="0.0124%" height="15" fill="rgb(225,33,4)" fg:x="1111" fg:w="2"/><text x="7.1408%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (2 samples, 0.01%)</title><rect x="6.8908%" y="933" width="0.0124%" height="15" fill="rgb(224,33,50)" fg:x="1111" fg:w="2"/><text x="7.1408%" y="943.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (2 samples, 0.01%)</title><rect x="6.8908%" y="917" width="0.0124%" height="15" fill="rgb(246,198,51)" fg:x="1111" fg:w="2"/><text x="7.1408%" y="927.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (6 samples, 0.04%)</title><rect x="6.8722%" y="1013" width="0.0372%" height="15" fill="rgb(205,22,4)" fg:x="1108" fg:w="6"/><text x="7.1222%" y="1023.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (4 samples, 0.02%)</title><rect x="6.8846%" y="997" width="0.0248%" height="15" fill="rgb(206,3,8)" fg:x="1110" fg:w="4"/><text x="7.1346%" y="1007.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (4 samples, 0.02%)</title><rect x="6.8846%" y="981" width="0.0248%" height="15" fill="rgb(251,23,15)" fg:x="1110" fg:w="4"/><text x="7.1346%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (3 samples, 0.02%)</title><rect x="6.8908%" y="965" width="0.0186%" height="15" fill="rgb(252,88,28)" fg:x="1111" fg:w="3"/><text x="7.1408%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (65 samples, 0.40%)</title><rect x="6.5124%" y="1029" width="0.4032%" height="15" fill="rgb(212,127,14)" fg:x="1050" fg:w="65"/><text x="6.7624%" y="1039.50"></text></g><g><title>IOKit`__IODataQueueDequeue (2 samples, 0.01%)</title><rect x="6.9280%" y="901" width="0.0124%" height="15" fill="rgb(247,145,37)" fg:x="1117" fg:w="2"/><text x="7.1780%" y="911.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (4 samples, 0.02%)</title><rect x="6.9404%" y="885" width="0.0248%" height="15" fill="rgb(209,117,53)" fg:x="1119" fg:w="4"/><text x="7.1904%" y="895.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (4 samples, 0.02%)</title><rect x="6.9404%" y="869" width="0.0248%" height="15" fill="rgb(212,90,42)" fg:x="1119" fg:w="4"/><text x="7.1904%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.02%)</title><rect x="6.9404%" y="853" width="0.0248%" height="15" fill="rgb(218,164,37)" fg:x="1119" fg:w="4"/><text x="7.1904%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.02%)</title><rect x="6.9404%" y="837" width="0.0248%" height="15" fill="rgb(246,65,34)" fg:x="1119" fg:w="4"/><text x="7.1904%" y="847.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:] (2 samples, 0.01%)</title><rect x="6.9838%" y="821" width="0.0124%" height="15" fill="rgb(231,100,33)" fg:x="1126" fg:w="2"/><text x="7.2338%" y="831.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (2 samples, 0.01%)</title><rect x="6.9838%" y="805" width="0.0124%" height="15" fill="rgb(228,126,14)" fg:x="1126" fg:w="2"/><text x="7.2338%" y="815.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (2 samples, 0.01%)</title><rect x="6.9962%" y="821" width="0.0124%" height="15" fill="rgb(215,173,21)" fg:x="1128" fg:w="2"/><text x="7.2462%" y="831.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.01%)</title><rect x="6.9962%" y="805" width="0.0124%" height="15" fill="rgb(210,6,40)" fg:x="1128" fg:w="2"/><text x="7.2462%" y="815.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.01%)</title><rect x="6.9962%" y="789" width="0.0124%" height="15" fill="rgb(212,48,18)" fg:x="1128" fg:w="2"/><text x="7.2462%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.01%)</title><rect x="6.9962%" y="773" width="0.0124%" height="15" fill="rgb(230,214,11)" fg:x="1128" fg:w="2"/><text x="7.2462%" y="783.50"></text></g><g><title>Metal`MTLDispatchListApply (11 samples, 0.07%)</title><rect x="6.9714%" y="885" width="0.0682%" height="15" fill="rgb(254,105,39)" fg:x="1124" fg:w="11"/><text x="7.2214%" y="895.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (11 samples, 0.07%)</title><rect x="6.9714%" y="869" width="0.0682%" height="15" fill="rgb(245,158,5)" fg:x="1124" fg:w="11"/><text x="7.2214%" y="879.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (10 samples, 0.06%)</title><rect x="6.9776%" y="853" width="0.0620%" height="15" fill="rgb(249,208,11)" fg:x="1125" fg:w="10"/><text x="7.2276%" y="863.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, double, unsigned int) (9 samples, 0.06%)</title><rect x="6.9838%" y="837" width="0.0558%" height="15" fill="rgb(210,39,28)" fg:x="1126" fg:w="9"/><text x="7.2338%" y="847.50"></text></g><g><title>IOSurface`IOSurfaceSharedEventNotifyEventListener (5 samples, 0.03%)</title><rect x="7.0086%" y="821" width="0.0310%" height="15" fill="rgb(211,56,53)" fg:x="1130" fg:w="5"/><text x="7.2586%" y="831.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.02%)</title><rect x="7.0148%" y="805" width="0.0248%" height="15" fill="rgb(226,201,30)" fg:x="1131" fg:w="4"/><text x="7.2648%" y="815.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.02%)</title><rect x="7.0148%" y="789" width="0.0248%" height="15" fill="rgb(239,101,34)" fg:x="1131" fg:w="4"/><text x="7.2648%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="7.0148%" y="773" width="0.0248%" height="15" fill="rgb(226,209,5)" fg:x="1131" fg:w="4"/><text x="7.2648%" y="783.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (17 samples, 0.11%)</title><rect x="6.9404%" y="901" width="0.1054%" height="15" fill="rgb(250,105,47)" fg:x="1119" fg:w="17"/><text x="7.1904%" y="911.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (2 samples, 0.01%)</title><rect x="7.0520%" y="885" width="0.0124%" height="15" fill="rgb(230,72,3)" fg:x="1137" fg:w="2"/><text x="7.3020%" y="895.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseCurrentResources (5 samples, 0.03%)</title><rect x="7.0706%" y="837" width="0.0310%" height="15" fill="rgb(232,218,39)" fg:x="1140" fg:w="5"/><text x="7.3206%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (3 samples, 0.02%)</title><rect x="7.0830%" y="821" width="0.0186%" height="15" fill="rgb(248,166,6)" fg:x="1142" fg:w="3"/><text x="7.3330%" y="831.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (10 samples, 0.06%)</title><rect x="7.0706%" y="853" width="0.0620%" height="15" fill="rgb(247,89,20)" fg:x="1140" fg:w="10"/><text x="7.3206%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.03%)</title><rect x="7.1017%" y="837" width="0.0310%" height="15" fill="rgb(248,130,54)" fg:x="1145" fg:w="5"/><text x="7.3517%" y="847.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (11 samples, 0.07%)</title><rect x="7.0706%" y="869" width="0.0682%" height="15" fill="rgb(234,196,4)" fg:x="1140" fg:w="11"/><text x="7.3206%" y="879.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageFree (2 samples, 0.01%)</title><rect x="7.1389%" y="869" width="0.0124%" height="15" fill="rgb(250,143,31)" fg:x="1151" fg:w="2"/><text x="7.3889%" y="879.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (12 samples, 0.07%)</title><rect x="7.1513%" y="837" width="0.0744%" height="15" fill="rgb(211,110,34)" fg:x="1153" fg:w="12"/><text x="7.4013%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (12 samples, 0.07%)</title><rect x="7.1513%" y="821" width="0.0744%" height="15" fill="rgb(215,124,48)" fg:x="1153" fg:w="12"/><text x="7.4013%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (12 samples, 0.07%)</title><rect x="7.1513%" y="805" width="0.0744%" height="15" fill="rgb(216,46,13)" fg:x="1153" fg:w="12"/><text x="7.4013%" y="815.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (14 samples, 0.09%)</title><rect x="7.1513%" y="869" width="0.0868%" height="15" fill="rgb(205,184,25)" fg:x="1153" fg:w="14"/><text x="7.4013%" y="879.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:] (14 samples, 0.09%)</title><rect x="7.1513%" y="853" width="0.0868%" height="15" fill="rgb(228,1,10)" fg:x="1153" fg:w="14"/><text x="7.4013%" y="863.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (30 samples, 0.19%)</title><rect x="7.0644%" y="885" width="0.1861%" height="15" fill="rgb(213,116,27)" fg:x="1139" fg:w="30"/><text x="7.3144%" y="895.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (35 samples, 0.22%)</title><rect x="7.0458%" y="901" width="0.2171%" height="15" fill="rgb(241,95,50)" fg:x="1136" fg:w="35"/><text x="7.2958%" y="911.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (59 samples, 0.37%)</title><rect x="6.9218%" y="917" width="0.3659%" height="15" fill="rgb(238,48,32)" fg:x="1116" fg:w="59"/><text x="7.1718%" y="927.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (3 samples, 0.02%)</title><rect x="7.2691%" y="901" width="0.0186%" height="15" fill="rgb(235,113,49)" fg:x="1172" fg:w="3"/><text x="7.5191%" y="911.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (2 samples, 0.01%)</title><rect x="7.2753%" y="885" width="0.0124%" height="15" fill="rgb(205,127,43)" fg:x="1173" fg:w="2"/><text x="7.5253%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (60 samples, 0.37%)</title><rect x="6.9218%" y="949" width="0.3721%" height="15" fill="rgb(250,162,2)" fg:x="1116" fg:w="60"/><text x="7.1718%" y="959.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (60 samples, 0.37%)</title><rect x="6.9218%" y="933" width="0.3721%" height="15" fill="rgb(220,13,41)" fg:x="1116" fg:w="60"/><text x="7.1718%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (61 samples, 0.38%)</title><rect x="6.9218%" y="965" width="0.3783%" height="15" fill="rgb(249,221,25)" fg:x="1116" fg:w="61"/><text x="7.1718%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (63 samples, 0.39%)</title><rect x="6.9156%" y="1029" width="0.3907%" height="15" fill="rgb(215,208,19)" fg:x="1115" fg:w="63"/><text x="7.1656%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (63 samples, 0.39%)</title><rect x="6.9156%" y="1013" width="0.3907%" height="15" fill="rgb(236,175,2)" fg:x="1115" fg:w="63"/><text x="7.1656%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (63 samples, 0.39%)</title><rect x="6.9156%" y="997" width="0.3907%" height="15" fill="rgb(241,52,2)" fg:x="1115" fg:w="63"/><text x="7.1656%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (63 samples, 0.39%)</title><rect x="6.9156%" y="981" width="0.3907%" height="15" fill="rgb(248,140,14)" fg:x="1115" fg:w="63"/><text x="7.1656%" y="991.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer fillCommandBufferArgs:commandQueue:] (2 samples, 0.01%)</title><rect x="7.3311%" y="917" width="0.0124%" height="15" fill="rgb(253,22,42)" fg:x="1182" fg:w="2"/><text x="7.5811%" y="927.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:] (2 samples, 0.01%)</title><rect x="7.3311%" y="901" width="0.0124%" height="15" fill="rgb(234,61,47)" fg:x="1182" fg:w="2"/><text x="7.5811%" y="911.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (176 samples, 1.09%)</title><rect x="7.3435%" y="917" width="1.0916%" height="15" fill="rgb(208,226,15)" fg:x="1184" fg:w="176"/><text x="7.5935%" y="927.50"></text></g><g><title>IOKit`IOConnectCallMethod (176 samples, 1.09%)</title><rect x="7.3435%" y="901" width="1.0916%" height="15" fill="rgb(217,221,4)" fg:x="1184" fg:w="176"/><text x="7.5935%" y="911.50"></text></g><g><title>IOKit`io_connect_method (175 samples, 1.09%)</title><rect x="7.3497%" y="885" width="1.0854%" height="15" fill="rgb(212,174,34)" fg:x="1185" fg:w="175"/><text x="7.5997%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (175 samples, 1.09%)</title><rect x="7.3497%" y="869" width="1.0854%" height="15" fill="rgb(253,83,4)" fg:x="1185" fg:w="175"/><text x="7.5997%" y="879.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (206 samples, 1.28%)</title><rect x="7.3311%" y="933" width="1.2777%" height="15" fill="rgb(250,195,49)" fg:x="1182" fg:w="206"/><text x="7.5811%" y="943.50"></text></g><g><title>IOKit`iokit_user_client_trap (28 samples, 0.17%)</title><rect x="8.4352%" y="917" width="0.1737%" height="15" fill="rgb(241,192,25)" fg:x="1360" fg:w="28"/><text x="8.6852%" y="927.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (208 samples, 1.29%)</title><rect x="7.3249%" y="965" width="1.2901%" height="15" fill="rgb(208,124,10)" fg:x="1181" fg:w="208"/><text x="7.5749%" y="975.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (207 samples, 1.28%)</title><rect x="7.3311%" y="949" width="1.2839%" height="15" fill="rgb(222,33,0)" fg:x="1182" fg:w="207"/><text x="7.5811%" y="959.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (2 samples, 0.01%)</title><rect x="8.6274%" y="949" width="0.0124%" height="15" fill="rgb(234,209,28)" fg:x="1391" fg:w="2"/><text x="8.8774%" y="959.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (2 samples, 0.01%)</title><rect x="8.6274%" y="933" width="0.0124%" height="15" fill="rgb(224,11,23)" fg:x="1391" fg:w="2"/><text x="8.8774%" y="943.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (2 samples, 0.01%)</title><rect x="8.6274%" y="917" width="0.0124%" height="15" fill="rgb(232,99,1)" fg:x="1391" fg:w="2"/><text x="8.8774%" y="927.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (2 samples, 0.01%)</title><rect x="8.6398%" y="949" width="0.0124%" height="15" fill="rgb(237,95,45)" fg:x="1393" fg:w="2"/><text x="8.8898%" y="959.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (13 samples, 0.08%)</title><rect x="8.6150%" y="965" width="0.0806%" height="15" fill="rgb(208,109,11)" fg:x="1389" fg:w="13"/><text x="8.8650%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (7 samples, 0.04%)</title><rect x="8.6522%" y="949" width="0.0434%" height="15" fill="rgb(216,190,48)" fg:x="1395" fg:w="7"/><text x="8.9022%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (7 samples, 0.04%)</title><rect x="8.6522%" y="933" width="0.0434%" height="15" fill="rgb(251,171,36)" fg:x="1395" fg:w="7"/><text x="8.9022%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (7 samples, 0.04%)</title><rect x="8.6522%" y="917" width="0.0434%" height="15" fill="rgb(230,62,22)" fg:x="1395" fg:w="7"/><text x="8.9022%" y="927.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (4 samples, 0.02%)</title><rect x="8.6957%" y="901" width="0.0248%" height="15" fill="rgb(225,114,35)" fg:x="1402" fg:w="4"/><text x="8.9457%" y="911.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (4 samples, 0.02%)</title><rect x="8.6957%" y="885" width="0.0248%" height="15" fill="rgb(215,118,42)" fg:x="1402" fg:w="4"/><text x="8.9457%" y="895.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (4 samples, 0.02%)</title><rect x="8.6957%" y="869" width="0.0248%" height="15" fill="rgb(243,119,21)" fg:x="1402" fg:w="4"/><text x="8.9457%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.02%)</title><rect x="8.6957%" y="853" width="0.0248%" height="15" fill="rgb(252,177,53)" fg:x="1402" fg:w="4"/><text x="8.9457%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.02%)</title><rect x="8.6957%" y="837" width="0.0248%" height="15" fill="rgb(237,209,29)" fg:x="1402" fg:w="4"/><text x="8.9457%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="8.6957%" y="821" width="0.0248%" height="15" fill="rgb(212,65,23)" fg:x="1402" fg:w="4"/><text x="8.9457%" y="831.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (5 samples, 0.03%)</title><rect x="8.6957%" y="949" width="0.0310%" height="15" fill="rgb(230,222,46)" fg:x="1402" fg:w="5"/><text x="8.9457%" y="959.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (5 samples, 0.03%)</title><rect x="8.6957%" y="933" width="0.0310%" height="15" fill="rgb(215,135,32)" fg:x="1402" fg:w="5"/><text x="8.9457%" y="943.50"></text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (5 samples, 0.03%)</title><rect x="8.6957%" y="917" width="0.0310%" height="15" fill="rgb(246,101,22)" fg:x="1402" fg:w="5"/><text x="8.9457%" y="927.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (7 samples, 0.04%)</title><rect x="8.6957%" y="965" width="0.0434%" height="15" fill="rgb(206,107,13)" fg:x="1402" fg:w="7"/><text x="8.9457%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.01%)</title><rect x="8.7267%" y="949" width="0.0124%" height="15" fill="rgb(250,100,44)" fg:x="1407" fg:w="2"/><text x="8.9767%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.01%)</title><rect x="8.7267%" y="933" width="0.0124%" height="15" fill="rgb(231,147,38)" fg:x="1407" fg:w="2"/><text x="8.9767%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.01%)</title><rect x="8.7267%" y="917" width="0.0124%" height="15" fill="rgb(229,8,40)" fg:x="1407" fg:w="2"/><text x="8.9767%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (232 samples, 1.44%)</title><rect x="7.3063%" y="1029" width="1.4389%" height="15" fill="rgb(221,135,30)" fg:x="1178" fg:w="232"/><text x="7.5563%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (230 samples, 1.43%)</title><rect x="7.3187%" y="1013" width="1.4265%" height="15" fill="rgb(249,193,18)" fg:x="1180" fg:w="230"/><text x="7.5687%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (230 samples, 1.43%)</title><rect x="7.3187%" y="997" width="1.4265%" height="15" fill="rgb(209,133,39)" fg:x="1180" fg:w="230"/><text x="7.5687%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (230 samples, 1.43%)</title><rect x="7.3187%" y="981" width="1.4265%" height="15" fill="rgb(232,100,14)" fg:x="1180" fg:w="230"/><text x="7.5687%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (363 samples, 2.25%)</title><rect x="6.5000%" y="1045" width="2.2514%" height="15" fill="rgb(224,185,1)" fg:x="1048" fg:w="363"/><text x="6.7500%" y="1055.50">l..</text></g><g><title>libsystem_pthread.dylib`start_wqthread (540 samples, 3.35%)</title><rect x="5.4084%" y="1125" width="3.3493%" height="15" fill="rgb(223,139,8)" fg:x="872" fg:w="540"/><text x="5.6584%" y="1135.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (371 samples, 2.30%)</title><rect x="6.4566%" y="1109" width="2.3011%" height="15" fill="rgb(232,213,38)" fg:x="1041" fg:w="371"/><text x="6.7066%" y="1119.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (367 samples, 2.28%)</title><rect x="6.4814%" y="1093" width="2.2763%" height="15" fill="rgb(207,94,22)" fg:x="1045" fg:w="367"/><text x="6.7314%" y="1103.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (364 samples, 2.26%)</title><rect x="6.5000%" y="1077" width="2.2576%" height="15" fill="rgb(219,183,54)" fg:x="1048" fg:w="364"/><text x="6.7500%" y="1087.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (364 samples, 2.26%)</title><rect x="6.5000%" y="1061" width="2.2576%" height="15" fill="rgb(216,185,54)" fg:x="1048" fg:w="364"/><text x="6.7500%" y="1071.50">l..</text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (2 samples, 0.01%)</title><rect x="8.7825%" y="965" width="0.0124%" height="15" fill="rgb(254,217,39)" fg:x="1416" fg:w="2"/><text x="9.0325%" y="975.50"></text></g><g><title>HIToolbox`PushToCGEventQueue(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (2 samples, 0.01%)</title><rect x="8.8011%" y="965" width="0.0124%" height="15" fill="rgb(240,178,23)" fg:x="1419" fg:w="2"/><text x="9.0511%" y="975.50"></text></g><g><title>SkyLight`CGSConnectionByID (2 samples, 0.01%)</title><rect x="8.8197%" y="933" width="0.0124%" height="15" fill="rgb(218,11,47)" fg:x="1422" fg:w="2"/><text x="9.0697%" y="943.50"></text></g><g><title>SkyLight`(anonymous namespace)::LogRingBuffer::push_back(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (2 samples, 0.01%)</title><rect x="8.8321%" y="917" width="0.0124%" height="15" fill="rgb(218,51,51)" fg:x="1424" fg:w="2"/><text x="9.0821%" y="927.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&amp; std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_no_alias&lt;true&gt; (2 samples, 0.01%)</title><rect x="8.8321%" y="901" width="0.0124%" height="15" fill="rgb(238,126,27)" fg:x="1424" fg:w="2"/><text x="9.0821%" y="911.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (2 samples, 0.01%)</title><rect x="8.8321%" y="885" width="0.0124%" height="15" fill="rgb(249,202,22)" fg:x="1424" fg:w="2"/><text x="9.0821%" y="895.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (2 samples, 0.01%)</title><rect x="8.8321%" y="869" width="0.0124%" height="15" fill="rgb(254,195,49)" fg:x="1424" fg:w="2"/><text x="9.0821%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.01%)</title><rect x="8.8321%" y="853" width="0.0124%" height="15" fill="rgb(208,123,14)" fg:x="1424" fg:w="2"/><text x="9.0821%" y="863.50"></text></g><g><title>SkyLight`CGSEventLogEvent (4 samples, 0.02%)</title><rect x="8.8321%" y="933" width="0.0248%" height="15" fill="rgb(224,200,8)" fg:x="1424" fg:w="4"/><text x="9.0821%" y="943.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (2 samples, 0.01%)</title><rect x="8.8445%" y="917" width="0.0124%" height="15" fill="rgb(217,61,36)" fg:x="1426" fg:w="2"/><text x="9.0945%" y="927.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (2 samples, 0.01%)</title><rect x="8.8445%" y="901" width="0.0124%" height="15" fill="rgb(206,35,45)" fg:x="1426" fg:w="2"/><text x="9.0945%" y="911.50"></text></g><g><title>libsystem_c.dylib`snprintf (2 samples, 0.01%)</title><rect x="8.8445%" y="885" width="0.0124%" height="15" fill="rgb(217,65,33)" fg:x="1426" fg:w="2"/><text x="9.0945%" y="895.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (2 samples, 0.01%)</title><rect x="8.8445%" y="869" width="0.0124%" height="15" fill="rgb(222,158,48)" fg:x="1426" fg:w="2"/><text x="9.0945%" y="879.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (2 samples, 0.01%)</title><rect x="8.8445%" y="853" width="0.0124%" height="15" fill="rgb(254,2,54)" fg:x="1426" fg:w="2"/><text x="9.0945%" y="863.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (4 samples, 0.02%)</title><rect x="8.8569%" y="917" width="0.0248%" height="15" fill="rgb(250,143,38)" fg:x="1428" fg:w="4"/><text x="9.1069%" y="927.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::~VMData (4 samples, 0.02%)</title><rect x="8.8569%" y="901" width="0.0248%" height="15" fill="rgb(248,25,0)" fg:x="1428" fg:w="4"/><text x="9.1069%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.02%)</title><rect x="8.8569%" y="885" width="0.0248%" height="15" fill="rgb(206,152,27)" fg:x="1428" fg:w="4"/><text x="9.1069%" y="895.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (2 samples, 0.01%)</title><rect x="8.9251%" y="693" width="0.0124%" height="15" fill="rgb(240,77,30)" fg:x="1439" fg:w="2"/><text x="9.1751%" y="703.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (5 samples, 0.03%)</title><rect x="8.9127%" y="789" width="0.0310%" height="15" fill="rgb(231,5,3)" fg:x="1437" fg:w="5"/><text x="9.1627%" y="799.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (5 samples, 0.03%)</title><rect x="8.9127%" y="773" width="0.0310%" height="15" fill="rgb(207,226,32)" fg:x="1437" fg:w="5"/><text x="9.1627%" y="783.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (5 samples, 0.03%)</title><rect x="8.9127%" y="757" width="0.0310%" height="15" fill="rgb(222,207,47)" fg:x="1437" fg:w="5"/><text x="9.1627%" y="767.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (5 samples, 0.03%)</title><rect x="8.9127%" y="741" width="0.0310%" height="15" fill="rgb(229,115,45)" fg:x="1437" fg:w="5"/><text x="9.1627%" y="751.50"></text></g><g><title>SkyLight`SLEventAuthenticationMessageCreateWithData (4 samples, 0.02%)</title><rect x="8.9189%" y="725" width="0.0248%" height="15" fill="rgb(224,191,6)" fg:x="1438" fg:w="4"/><text x="9.1689%" y="735.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.02%)</title><rect x="8.9251%" y="709" width="0.0186%" height="15" fill="rgb(230,227,24)" fg:x="1439" fg:w="3"/><text x="9.1751%" y="719.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (9 samples, 0.06%)</title><rect x="8.8941%" y="869" width="0.0558%" height="15" fill="rgb(228,80,19)" fg:x="1434" fg:w="9"/><text x="9.1441%" y="879.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (9 samples, 0.06%)</title><rect x="8.8941%" y="853" width="0.0558%" height="15" fill="rgb(247,229,0)" fg:x="1434" fg:w="9"/><text x="9.1441%" y="863.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (8 samples, 0.05%)</title><rect x="8.9003%" y="837" width="0.0496%" height="15" fill="rgb(237,194,15)" fg:x="1435" fg:w="8"/><text x="9.1503%" y="847.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (7 samples, 0.04%)</title><rect x="8.9065%" y="821" width="0.0434%" height="15" fill="rgb(219,203,20)" fg:x="1436" fg:w="7"/><text x="9.1565%" y="831.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern (7 samples, 0.04%)</title><rect x="8.9065%" y="805" width="0.0434%" height="15" fill="rgb(234,128,8)" fg:x="1436" fg:w="7"/><text x="9.1565%" y="815.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (11 samples, 0.07%)</title><rect x="8.8879%" y="917" width="0.0682%" height="15" fill="rgb(248,202,8)" fg:x="1433" fg:w="11"/><text x="9.1379%" y="927.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (11 samples, 0.07%)</title><rect x="8.8879%" y="901" width="0.0682%" height="15" fill="rgb(206,104,37)" fg:x="1433" fg:w="11"/><text x="9.1379%" y="911.50"></text></g><g><title>SkyLight`_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (11 samples, 0.07%)</title><rect x="8.8879%" y="885" width="0.0682%" height="15" fill="rgb(223,8,27)" fg:x="1433" fg:w="11"/><text x="9.1379%" y="895.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (41 samples, 0.25%)</title><rect x="8.7639%" y="1045" width="0.2543%" height="15" fill="rgb(216,217,28)" fg:x="1413" fg:w="41"/><text x="9.0139%" y="1055.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (39 samples, 0.24%)</title><rect x="8.7763%" y="1029" width="0.2419%" height="15" fill="rgb(249,199,1)" fg:x="1415" fg:w="39"/><text x="9.0263%" y="1039.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (39 samples, 0.24%)</title><rect x="8.7763%" y="1013" width="0.2419%" height="15" fill="rgb(240,85,17)" fg:x="1415" fg:w="39"/><text x="9.0263%" y="1023.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (38 samples, 0.24%)</title><rect x="8.7825%" y="997" width="0.2357%" height="15" fill="rgb(206,108,45)" fg:x="1416" fg:w="38"/><text x="9.0325%" y="1007.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (38 samples, 0.24%)</title><rect x="8.7825%" y="981" width="0.2357%" height="15" fill="rgb(245,210,41)" fg:x="1416" fg:w="38"/><text x="9.0325%" y="991.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (33 samples, 0.20%)</title><rect x="8.8135%" y="965" width="0.2047%" height="15" fill="rgb(206,13,37)" fg:x="1421" fg:w="33"/><text x="9.0635%" y="975.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (32 samples, 0.20%)</title><rect x="8.8197%" y="949" width="0.1985%" height="15" fill="rgb(250,61,18)" fg:x="1422" fg:w="32"/><text x="9.0697%" y="959.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (26 samples, 0.16%)</title><rect x="8.8569%" y="933" width="0.1613%" height="15" fill="rgb(235,172,48)" fg:x="1428" fg:w="26"/><text x="9.1069%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (10 samples, 0.06%)</title><rect x="8.9561%" y="917" width="0.0620%" height="15" fill="rgb(249,201,17)" fg:x="1444" fg:w="10"/><text x="9.2061%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (10 samples, 0.06%)</title><rect x="8.9561%" y="901" width="0.0620%" height="15" fill="rgb(219,208,6)" fg:x="1444" fg:w="10"/><text x="9.2061%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10 samples, 0.06%)</title><rect x="8.9561%" y="885" width="0.0620%" height="15" fill="rgb(248,31,23)" fg:x="1444" fg:w="10"/><text x="9.2061%" y="895.50"></text></g><g><title>AppKit`_NSEventThread (45 samples, 0.28%)</title><rect x="8.7577%" y="1093" width="0.2791%" height="15" fill="rgb(245,15,42)" fg:x="1412" fg:w="45"/><text x="9.0077%" y="1103.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (44 samples, 0.27%)</title><rect x="8.7639%" y="1077" width="0.2729%" height="15" fill="rgb(222,217,39)" fg:x="1413" fg:w="44"/><text x="9.0139%" y="1087.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (44 samples, 0.27%)</title><rect x="8.7639%" y="1061" width="0.2729%" height="15" fill="rgb(210,219,27)" fg:x="1413" fg:w="44"/><text x="9.0139%" y="1071.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (3 samples, 0.02%)</title><rect x="9.0182%" y="1045" width="0.0186%" height="15" fill="rgb(252,166,36)" fg:x="1454" fg:w="3"/><text x="9.2682%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (3 samples, 0.02%)</title><rect x="9.0182%" y="1029" width="0.0186%" height="15" fill="rgb(245,132,34)" fg:x="1454" fg:w="3"/><text x="9.2682%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (3 samples, 0.02%)</title><rect x="9.0182%" y="1013" width="0.0186%" height="15" fill="rgb(236,54,3)" fg:x="1454" fg:w="3"/><text x="9.2682%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.02%)</title><rect x="9.0182%" y="997" width="0.0186%" height="15" fill="rgb(241,173,43)" fg:x="1454" fg:w="3"/><text x="9.2682%" y="1007.50"></text></g><g><title>bevy_example`coreaudio::audio_unit::render_callback::_&lt;impl coreaudio::audio_unit::AudioUnit&gt;::set_render_callback::_{{closure}} (17 samples, 0.11%)</title><rect x="9.0678%" y="981" width="0.1054%" height="15" fill="rgb(215,190,9)" fg:x="1462" fg:w="17"/><text x="9.3178%" y="991.50"></text></g><g><title>CoreAudio`0x000000010e201440 (22 samples, 0.14%)</title><rect x="9.0616%" y="1013" width="0.1365%" height="15" fill="rgb(242,101,16)" fg:x="1461" fg:w="22"/><text x="9.3116%" y="1023.50"></text></g><g><title>bevy_example`coreaudio::audio_unit::render_callback::input_proc (21 samples, 0.13%)</title><rect x="9.0678%" y="997" width="0.1302%" height="15" fill="rgb(223,190,21)" fg:x="1462" fg:w="21"/><text x="9.3178%" y="1007.50"></text></g><g><title>bevy_example`rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (4 samples, 0.02%)</title><rect x="9.1732%" y="981" width="0.0248%" height="15" fill="rgb(215,228,25)" fg:x="1479" fg:w="4"/><text x="9.4232%" y="991.50"></text></g><g><title>CoreAudio`0x000000010e206b10 (26 samples, 0.16%)</title><rect x="9.0430%" y="1045" width="0.1613%" height="15" fill="rgb(225,36,22)" fg:x="1458" fg:w="26"/><text x="9.2930%" y="1055.50"></text></g><g><title>CoreAudio`0x000000010e3036d0 (24 samples, 0.15%)</title><rect x="9.0554%" y="1029" width="0.1489%" height="15" fill="rgb(251,106,46)" fg:x="1460" fg:w="24"/><text x="9.3054%" y="1039.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::IOWorkLoop (33 samples, 0.20%)</title><rect x="9.0430%" y="1061" width="0.2047%" height="15" fill="rgb(208,90,1)" fg:x="1458" fg:w="33"/><text x="9.2930%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_signal_trap (7 samples, 0.04%)</title><rect x="9.2042%" y="1045" width="0.0434%" height="15" fill="rgb(243,10,4)" fg:x="1484" fg:w="7"/><text x="9.4542%" y="1055.50"></text></g><g><title>CoreAudio`HALC_IOThread::Entry (35 samples, 0.22%)</title><rect x="9.0368%" y="1093" width="0.2171%" height="15" fill="rgb(212,137,27)" fg:x="1457" fg:w="35"/><text x="9.2868%" y="1103.50"></text></g><g><title>CoreAudio`invocation function for block in HALC_ProxyIOContext::HALC_ProxyIOContext (35 samples, 0.22%)</title><rect x="9.0368%" y="1077" width="0.2171%" height="15" fill="rgb(231,220,49)" fg:x="1457" fg:w="35"/><text x="9.2868%" y="1087.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (5 samples, 0.03%)</title><rect x="9.3097%" y="837" width="0.0310%" height="15" fill="rgb(237,96,20)" fg:x="1501" fg:w="5"/><text x="9.5597%" y="847.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (5 samples, 0.03%)</title><rect x="9.3097%" y="821" width="0.0310%" height="15" fill="rgb(239,229,30)" fg:x="1501" fg:w="5"/><text x="9.5597%" y="831.50"></text></g><g><title>bevy_example`parking::Inner::unpark (5 samples, 0.03%)</title><rect x="9.3097%" y="805" width="0.0310%" height="15" fill="rgb(219,65,33)" fg:x="1501" fg:w="5"/><text x="9.5597%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5 samples, 0.03%)</title><rect x="9.3097%" y="789" width="0.0310%" height="15" fill="rgb(243,134,7)" fg:x="1501" fg:w="5"/><text x="9.5597%" y="799.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (9 samples, 0.06%)</title><rect x="9.3035%" y="869" width="0.0558%" height="15" fill="rgb(216,177,54)" fg:x="1500" fg:w="9"/><text x="9.5535%" y="879.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (9 samples, 0.06%)</title><rect x="9.3035%" y="853" width="0.0558%" height="15" fill="rgb(211,160,20)" fg:x="1500" fg:w="9"/><text x="9.5535%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (2 samples, 0.01%)</title><rect x="9.3469%" y="837" width="0.0124%" height="15" fill="rgb(239,85,39)" fg:x="1507" fg:w="2"/><text x="9.5969%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (2 samples, 0.01%)</title><rect x="9.3469%" y="821" width="0.0124%" height="15" fill="rgb(232,125,22)" fg:x="1507" fg:w="2"/><text x="9.5969%" y="831.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (13 samples, 0.08%)</title><rect x="9.2849%" y="885" width="0.0806%" height="15" fill="rgb(244,57,34)" fg:x="1497" fg:w="13"/><text x="9.5349%" y="895.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (15 samples, 0.09%)</title><rect x="9.2787%" y="901" width="0.0930%" height="15" fill="rgb(214,203,32)" fg:x="1496" fg:w="15"/><text x="9.5287%" y="911.50"></text></g><g><title>bevy_example`bevy_ecs::component::ComponentDescriptor::drop_ptr (2 samples, 0.01%)</title><rect x="9.3965%" y="741" width="0.0124%" height="15" fill="rgb(207,58,43)" fg:x="1515" fg:w="2"/><text x="9.6465%" y="751.50"></text></g><g><title>bevy_example`bevy_ecs::bundle::BundleInserter::insert (37 samples, 0.23%)</title><rect x="9.3965%" y="757" width="0.2295%" height="15" fill="rgb(215,193,15)" fg:x="1515" fg:w="37"/><text x="9.6465%" y="767.50"></text></g><g><title>bevy_example`bevy_ecs::storage::blob_array::BlobArray::replace_unchecked (35 samples, 0.22%)</title><rect x="9.4089%" y="741" width="0.2171%" height="15" fill="rgb(232,15,44)" fg:x="1517" fg:w="35"/><text x="9.6589%" y="751.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (34 samples, 0.21%)</title><rect x="9.4151%" y="725" width="0.2109%" height="15" fill="rgb(212,3,48)" fg:x="1518" fg:w="34"/><text x="9.6651%" y="735.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (34 samples, 0.21%)</title><rect x="9.4151%" y="709" width="0.2109%" height="15" fill="rgb(218,128,7)" fg:x="1518" fg:w="34"/><text x="9.6651%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (34 samples, 0.21%)</title><rect x="9.4151%" y="693" width="0.2109%" height="15" fill="rgb(226,216,39)" fg:x="1518" fg:w="34"/><text x="9.6651%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`madvise (34 samples, 0.21%)</title><rect x="9.4151%" y="677" width="0.2109%" height="15" fill="rgb(243,47,51)" fg:x="1518" fg:w="34"/><text x="9.6651%" y="687.50"></text></g><g><title>bevy_example`&lt;F as bevy_ecs::system::commands::command::Command&lt;Out&gt;&gt;::apply (40 samples, 0.25%)</title><rect x="9.3965%" y="773" width="0.2481%" height="15" fill="rgb(241,183,40)" fg:x="1515" fg:w="40"/><text x="9.6465%" y="783.50"></text></g><g><title>bevy_example`bevy_ecs::storage::blob_vec::BlobVec::replace_unchecked (2 samples, 0.01%)</title><rect x="9.6322%" y="757" width="0.0124%" height="15" fill="rgb(231,217,32)" fg:x="1553" fg:w="2"/><text x="9.8822%" y="767.50"></text></g><g><title>bevy_example`bevy_ecs::component::ComponentDescriptor::drop_ptr (2 samples, 0.01%)</title><rect x="9.6322%" y="741" width="0.0124%" height="15" fill="rgb(229,61,38)" fg:x="1553" fg:w="2"/><text x="9.8822%" y="751.50"></text></g><g><title>bevy_example`bevy_ecs::bundle::Bundles::register_info (2 samples, 0.01%)</title><rect x="9.6446%" y="773" width="0.0124%" height="15" fill="rgb(225,210,5)" fg:x="1555" fg:w="2"/><text x="9.8946%" y="783.50"></text></g><g><title>bevy_example`bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued (45 samples, 0.28%)</title><rect x="9.3841%" y="805" width="0.2791%" height="15" fill="rgb(231,79,45)" fg:x="1513" fg:w="45"/><text x="9.6341%" y="815.50"></text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once (43 samples, 0.27%)</title><rect x="9.3965%" y="789" width="0.2667%" height="15" fill="rgb(224,100,7)" fg:x="1515" fg:w="43"/><text x="9.6465%" y="799.50"></text></g><g><title>bevy_example`bevy_ecs::world::World::resource_scope (50 samples, 0.31%)</title><rect x="9.3717%" y="853" width="0.3101%" height="15" fill="rgb(241,198,18)" fg:x="1511" fg:w="50"/><text x="9.6217%" y="863.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::schedule::Schedule::apply_deferred (50 samples, 0.31%)</title><rect x="9.3717%" y="837" width="0.3101%" height="15" fill="rgb(252,97,53)" fg:x="1511" fg:w="50"/><text x="9.6217%" y="847.50"></text></g><g><title>bevy_example`bevy_ecs::system::commands::_::_&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (49 samples, 0.30%)</title><rect x="9.3779%" y="821" width="0.3039%" height="15" fill="rgb(220,88,7)" fg:x="1512" fg:w="49"/><text x="9.6279%" y="831.50"></text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once (3 samples, 0.02%)</title><rect x="9.6632%" y="805" width="0.0186%" height="15" fill="rgb(213,176,14)" fg:x="1558" fg:w="3"/><text x="9.9132%" y="815.50"></text></g><g><title>bevy_example`bevy_render::render_graph::graph::RenderGraph::update (5 samples, 0.03%)</title><rect x="9.6818%" y="837" width="0.0310%" height="15" fill="rgb(246,73,7)" fg:x="1561" fg:w="5"/><text x="9.9318%" y="847.50"></text></g><g><title>bevy_example`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="9.7190%" y="805" width="0.0124%" height="15" fill="rgb(245,64,36)" fg:x="1567" fg:w="2"/><text x="9.9690%" y="815.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="9.7190%" y="789" width="0.0124%" height="15" fill="rgb(245,80,10)" fg:x="1567" fg:w="2"/><text x="9.9690%" y="799.50"></text></g><g><title>bevy_example`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::command_buffer_drop (2 samples, 0.01%)</title><rect x="9.7190%" y="773" width="0.0124%" height="15" fill="rgb(232,107,50)" fg:x="1567" fg:w="2"/><text x="9.9690%" y="783.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext deferredEndEncoding] (2 samples, 0.01%)</title><rect x="9.7376%" y="693" width="0.0124%" height="15" fill="rgb(253,3,0)" fg:x="1570" fg:w="2"/><text x="9.9876%" y="703.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::commit (2 samples, 0.01%)</title><rect x="9.7376%" y="677" width="0.0124%" height="15" fill="rgb(212,99,53)" fg:x="1570" fg:w="2"/><text x="9.9876%" y="687.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer commitEncoder] (5 samples, 0.03%)</title><rect x="9.7376%" y="709" width="0.0310%" height="15" fill="rgb(249,111,54)" fg:x="1570" fg:w="5"/><text x="9.9876%" y="719.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext deferredEndEncoding:] (2 samples, 0.01%)</title><rect x="9.7562%" y="693" width="0.0124%" height="15" fill="rgb(249,55,30)" fg:x="1573" fg:w="2"/><text x="10.0062%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.01%)</title><rect x="9.7811%" y="645" width="0.0124%" height="15" fill="rgb(237,47,42)" fg:x="1577" fg:w="2"/><text x="10.0311%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.01%)</title><rect x="9.7811%" y="629" width="0.0124%" height="15" fill="rgb(211,20,18)" fg:x="1577" fg:w="2"/><text x="10.0311%" y="639.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCommit:commitTime:] (3 samples, 0.02%)</title><rect x="9.7811%" y="677" width="0.0186%" height="15" fill="rgb(231,203,46)" fg:x="1577" fg:w="3"/><text x="10.0311%" y="687.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (3 samples, 0.02%)</title><rect x="9.7811%" y="661" width="0.0186%" height="15" fill="rgb(237,142,3)" fg:x="1577" fg:w="3"/><text x="10.0311%" y="671.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (7 samples, 0.04%)</title><rect x="9.7811%" y="693" width="0.0434%" height="15" fill="rgb(241,107,1)" fg:x="1577" fg:w="7"/><text x="10.0311%" y="703.50"></text></g><g><title>Metal`-[_MTLCommandQueue enqueueCommandBuffer:] (4 samples, 0.02%)</title><rect x="9.7997%" y="677" width="0.0248%" height="15" fill="rgb(229,83,13)" fg:x="1580" fg:w="4"/><text x="10.0497%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (4 samples, 0.02%)</title><rect x="9.7997%" y="661" width="0.0248%" height="15" fill="rgb(241,91,40)" fg:x="1580" fg:w="4"/><text x="10.0497%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (4 samples, 0.02%)</title><rect x="9.7997%" y="645" width="0.0248%" height="15" fill="rgb(225,3,45)" fg:x="1580" fg:w="4"/><text x="10.0497%" y="655.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (3 samples, 0.02%)</title><rect x="9.8245%" y="693" width="0.0186%" height="15" fill="rgb(244,223,14)" fg:x="1584" fg:w="3"/><text x="10.0745%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.01%)</title><rect x="9.8307%" y="677" width="0.0124%" height="15" fill="rgb(224,124,37)" fg:x="1585" fg:w="2"/><text x="10.0807%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.01%)</title><rect x="9.8307%" y="661" width="0.0124%" height="15" fill="rgb(251,171,30)" fg:x="1585" fg:w="2"/><text x="10.0807%" y="671.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (14 samples, 0.09%)</title><rect x="9.7687%" y="709" width="0.0868%" height="15" fill="rgb(236,46,54)" fg:x="1575" fg:w="14"/><text x="10.0187%" y="719.50"></text></g><g><title>Metal`objc_msgSend$executeSynchronizationNotifications: (2 samples, 0.01%)</title><rect x="9.8431%" y="693" width="0.0124%" height="15" fill="rgb(245,213,5)" fg:x="1587" fg:w="2"/><text x="10.0931%" y="703.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer commit] (20 samples, 0.12%)</title><rect x="9.7376%" y="725" width="0.1240%" height="15" fill="rgb(230,144,27)" fg:x="1570" fg:w="20"/><text x="9.9876%" y="735.50"></text></g><g><title>bevy_example`&lt;Q as wgpu_hal::dynamic::queue::DynQueue&gt;::submit (23 samples, 0.14%)</title><rect x="9.7314%" y="773" width="0.1427%" height="15" fill="rgb(220,86,6)" fg:x="1569" fg:w="23"/><text x="9.9814%" y="783.50"></text></g><g><title>bevy_example`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&gt;::submit (23 samples, 0.14%)</title><rect x="9.7314%" y="757" width="0.1427%" height="15" fill="rgb(240,20,13)" fg:x="1569" fg:w="23"/><text x="9.9814%" y="767.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (22 samples, 0.14%)</title><rect x="9.7376%" y="741" width="0.1365%" height="15" fill="rgb(217,89,34)" fg:x="1570" fg:w="22"/><text x="9.9876%" y="751.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;wgpu_core::command::CommandEncoder&gt; (2 samples, 0.01%)</title><rect x="9.8803%" y="741" width="0.0124%" height="15" fill="rgb(229,13,5)" fg:x="1593" fg:w="2"/><text x="10.1303%" y="751.50"></text></g><g><title>bevy_example`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::reset_all (2 samples, 0.01%)</title><rect x="9.8803%" y="725" width="0.0124%" height="15" fill="rgb(244,67,35)" fg:x="1593" fg:w="2"/><text x="10.1303%" y="735.50"></text></g><g><title>bevy_example`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="9.8803%" y="709" width="0.0124%" height="15" fill="rgb(221,40,2)" fg:x="1593" fg:w="2"/><text x="10.1303%" y="719.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer dealloc] (2 samples, 0.01%)</title><rect x="9.8803%" y="693" width="0.0124%" height="15" fill="rgb(237,157,21)" fg:x="1593" fg:w="2"/><text x="10.1303%" y="703.50"></text></g><g><title>IOKit`iokit_user_client_trap (32 samples, 0.20%)</title><rect x="9.9113%" y="645" width="0.1985%" height="15" fill="rgb(222,94,11)" fg:x="1598" fg:w="32"/><text x="10.1613%" y="655.50"></text></g><g><title>CoreFoundation`_CFRelease (35 samples, 0.22%)</title><rect x="9.8989%" y="661" width="0.2171%" height="15" fill="rgb(249,113,6)" fg:x="1596" fg:w="35"/><text x="10.1489%" y="671.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (2 samples, 0.01%)</title><rect x="10.1160%" y="661" width="0.0124%" height="15" fill="rgb(238,137,36)" fg:x="1631" fg:w="2"/><text x="10.3660%" y="671.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (2 samples, 0.01%)</title><rect x="10.1160%" y="645" width="0.0124%" height="15" fill="rgb(210,102,26)" fg:x="1631" fg:w="2"/><text x="10.3660%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (2 samples, 0.01%)</title><rect x="10.1160%" y="629" width="0.0124%" height="15" fill="rgb(218,30,30)" fg:x="1631" fg:w="2"/><text x="10.3660%" y="639.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (2 samples, 0.01%)</title><rect x="10.1160%" y="613" width="0.0124%" height="15" fill="rgb(214,67,26)" fg:x="1631" fg:w="2"/><text x="10.3660%" y="623.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (39 samples, 0.24%)</title><rect x="9.8989%" y="677" width="0.2419%" height="15" fill="rgb(251,9,53)" fg:x="1596" fg:w="39"/><text x="10.1489%" y="687.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBuffer dealloc] (41 samples, 0.25%)</title><rect x="9.8927%" y="725" width="0.2543%" height="15" fill="rgb(228,204,25)" fg:x="1595" fg:w="41"/><text x="10.1427%" y="735.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer dealloc] (41 samples, 0.25%)</title><rect x="9.8927%" y="709" width="0.2543%" height="15" fill="rgb(207,153,8)" fg:x="1595" fg:w="41"/><text x="10.1427%" y="719.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (41 samples, 0.25%)</title><rect x="9.8927%" y="693" width="0.2543%" height="15" fill="rgb(242,9,16)" fg:x="1595" fg:w="41"/><text x="10.1427%" y="703.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;wgpu_core::device::queue::TempResource&gt; (42 samples, 0.26%)</title><rect x="9.8927%" y="741" width="0.2605%" height="15" fill="rgb(217,211,10)" fg:x="1595" fg:w="42"/><text x="10.1427%" y="751.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="10.1532%" y="725" width="0.0124%" height="15" fill="rgb(219,228,52)" fg:x="1637" fg:w="2"/><text x="10.4032%" y="735.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;wgpu_core::track::texture::TextureTracker&gt; (2 samples, 0.01%)</title><rect x="10.1656%" y="725" width="0.0124%" height="15" fill="rgb(231,92,29)" fg:x="1639" fg:w="2"/><text x="10.4156%" y="735.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&gt; (6 samples, 0.04%)</title><rect x="10.1532%" y="741" width="0.0372%" height="15" fill="rgb(232,8,23)" fg:x="1637" fg:w="6"/><text x="10.4032%" y="751.50"></text></g><g><title>bevy_example`wgpu_core::device::resource::Device::maintain (53 samples, 0.33%)</title><rect x="9.8741%" y="773" width="0.3287%" height="15" fill="rgb(216,211,34)" fg:x="1592" fg:w="53"/><text x="10.1241%" y="783.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::maintain (53 samples, 0.33%)</title><rect x="9.8741%" y="757" width="0.3287%" height="15" fill="rgb(236,151,0)" fg:x="1592" fg:w="53"/><text x="10.1241%" y="767.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (2 samples, 0.01%)</title><rect x="10.2090%" y="693" width="0.0124%" height="15" fill="rgb(209,168,3)" fg:x="1646" fg:w="2"/><text x="10.4590%" y="703.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageCreateExt (2 samples, 0.01%)</title><rect x="10.2090%" y="677" width="0.0124%" height="15" fill="rgb(208,129,28)" fg:x="1646" fg:w="2"/><text x="10.4590%" y="687.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (8 samples, 0.05%)</title><rect x="10.2090%" y="709" width="0.0496%" height="15" fill="rgb(229,78,22)" fg:x="1646" fg:w="8"/><text x="10.4590%" y="719.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (6 samples, 0.04%)</title><rect x="10.2214%" y="693" width="0.0372%" height="15" fill="rgb(228,187,13)" fg:x="1648" fg:w="6"/><text x="10.4714%" y="703.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (6 samples, 0.04%)</title><rect x="10.2214%" y="677" width="0.0372%" height="15" fill="rgb(240,119,24)" fg:x="1648" fg:w="6"/><text x="10.4714%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (6 samples, 0.04%)</title><rect x="10.2214%" y="661" width="0.0372%" height="15" fill="rgb(209,194,42)" fg:x="1648" fg:w="6"/><text x="10.4714%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (6 samples, 0.04%)</title><rect x="10.2214%" y="645" width="0.0372%" height="15" fill="rgb(247,200,46)" fg:x="1648" fg:w="6"/><text x="10.4714%" y="655.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (11 samples, 0.07%)</title><rect x="10.2028%" y="741" width="0.0682%" height="15" fill="rgb(218,76,16)" fg:x="1645" fg:w="11"/><text x="10.4528%" y="751.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (11 samples, 0.07%)</title><rect x="10.2028%" y="725" width="0.0682%" height="15" fill="rgb(225,21,48)" fg:x="1645" fg:w="11"/><text x="10.4528%" y="735.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (13 samples, 0.08%)</title><rect x="10.2028%" y="773" width="0.0806%" height="15" fill="rgb(239,223,50)" fg:x="1645" fg:w="13"/><text x="10.4528%" y="783.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (13 samples, 0.08%)</title><rect x="10.2028%" y="757" width="0.0806%" height="15" fill="rgb(244,45,21)" fg:x="1645" fg:w="13"/><text x="10.4528%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (2 samples, 0.01%)</title><rect x="10.2710%" y="741" width="0.0124%" height="15" fill="rgb(232,33,43)" fg:x="1656" fg:w="2"/><text x="10.5210%" y="751.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::submit (90 samples, 0.56%)</title><rect x="9.7314%" y="789" width="0.5582%" height="15" fill="rgb(209,8,3)" fg:x="1569" fg:w="90"/><text x="9.9814%" y="799.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::submit (93 samples, 0.58%)</title><rect x="9.7190%" y="821" width="0.5768%" height="15" fill="rgb(214,25,53)" fg:x="1567" fg:w="93"/><text x="9.9690%" y="831.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_submit (91 samples, 0.56%)</title><rect x="9.7314%" y="805" width="0.5644%" height="15" fill="rgb(254,186,54)" fg:x="1569" fg:w="91"/><text x="9.9814%" y="815.50"></text></g><g><title>bevy_example`DYLD-STUB$$powf (6 samples, 0.04%)</title><rect x="10.6990%" y="613" width="0.0372%" height="15" fill="rgb(208,174,49)" fg:x="1725" fg:w="6"/><text x="10.9490%" y="623.50"></text></g><g><title>bevy_example`ecolor::_&lt;impl core::convert::From&lt;ecolor::color32::Color32&gt; for ecolor::rgba::Rgba&gt;::from (71 samples, 0.44%)</title><rect x="10.7362%" y="613" width="0.4404%" height="15" fill="rgb(233,191,51)" fg:x="1731" fg:w="71"/><text x="10.9862%" y="623.50"></text></g><g><title>libsystem_m.dylib`powf (31 samples, 0.19%)</title><rect x="10.9843%" y="597" width="0.1923%" height="15" fill="rgb(222,134,10)" fg:x="1771" fg:w="31"/><text x="11.2343%" y="607.50"></text></g><g><title>bevy_example`ecolor::gamma_u8_from_linear_f32 (59 samples, 0.37%)</title><rect x="11.1766%" y="613" width="0.3659%" height="15" fill="rgb(230,226,20)" fg:x="1802" fg:w="59"/><text x="11.4266%" y="623.50"></text></g><g><title>libsystem_m.dylib`powf (40 samples, 0.25%)</title><rect x="11.2944%" y="597" width="0.2481%" height="15" fill="rgb(251,111,25)" fg:x="1821" fg:w="40"/><text x="11.5444%" y="607.50"></text></g><g><title>bevy_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (202 samples, 1.25%)</title><rect x="10.3269%" y="629" width="1.2529%" height="15" fill="rgb(224,40,46)" fg:x="1665" fg:w="202"/><text x="10.5769%" y="639.50"></text></g><g><title>libsystem_m.dylib`powf (6 samples, 0.04%)</title><rect x="11.5425%" y="613" width="0.0372%" height="15" fill="rgb(236,108,47)" fg:x="1861" fg:w="6"/><text x="11.7925%" y="623.50"></text></g><g><title>bevy_example`ecolor::_&lt;impl core::convert::From&lt;ecolor::color32::Color32&gt; for ecolor::rgba::Rgba&gt;::from (13 samples, 0.08%)</title><rect x="11.5797%" y="629" width="0.0806%" height="15" fill="rgb(234,93,0)" fg:x="1867" fg:w="13"/><text x="11.8297%" y="639.50"></text></g><g><title>bevy_example`bevy_egui::egui_node::color_image_as_bevy_image (260 samples, 1.61%)</title><rect x="10.3269%" y="645" width="1.6126%" height="15" fill="rgb(224,213,32)" fg:x="1665" fg:w="260"/><text x="10.5769%" y="655.50"></text></g><g><title>bevy_example`ecolor::gamma_u8_from_linear_f32 (45 samples, 0.28%)</title><rect x="11.6604%" y="629" width="0.2791%" height="15" fill="rgb(251,11,48)" fg:x="1880" fg:w="45"/><text x="11.9104%" y="639.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (264 samples, 1.64%)</title><rect x="10.3269%" y="725" width="1.6374%" height="15" fill="rgb(236,173,5)" fg:x="1665" fg:w="264"/><text x="10.5769%" y="735.50"></text></g><g><title>bevy_example`std::panic::catch_unwind (264 samples, 1.64%)</title><rect x="10.3269%" y="709" width="1.6374%" height="15" fill="rgb(230,95,12)" fg:x="1665" fg:w="264"/><text x="10.5769%" y="719.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (264 samples, 1.64%)</title><rect x="10.3269%" y="693" width="1.6374%" height="15" fill="rgb(232,209,1)" fg:x="1665" fg:w="264"/><text x="10.5769%" y="703.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (264 samples, 1.64%)</title><rect x="10.3269%" y="677" width="1.6374%" height="15" fill="rgb(232,6,1)" fg:x="1665" fg:w="264"/><text x="10.5769%" y="687.50"></text></g><g><title>bevy_example`bevy_egui::update_egui_textures_system (264 samples, 1.64%)</title><rect x="10.3269%" y="661" width="1.6374%" height="15" fill="rgb(210,224,50)" fg:x="1665" fg:w="264"/><text x="10.5769%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="11.9395%" y="645" width="0.0248%" height="15" fill="rgb(228,127,35)" fg:x="1925" fg:w="4"/><text x="12.1895%" y="655.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.03%)</title><rect x="11.9953%" y="581" width="0.0310%" height="15" fill="rgb(245,102,45)" fg:x="1934" fg:w="5"/><text x="12.2453%" y="591.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (5 samples, 0.03%)</title><rect x="11.9953%" y="565" width="0.0310%" height="15" fill="rgb(214,1,49)" fg:x="1934" fg:w="5"/><text x="12.2453%" y="575.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (5 samples, 0.03%)</title><rect x="11.9953%" y="549" width="0.0310%" height="15" fill="rgb(226,163,40)" fg:x="1934" fg:w="5"/><text x="12.2453%" y="559.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.02%)</title><rect x="12.0015%" y="533" width="0.0248%" height="15" fill="rgb(239,212,28)" fg:x="1935" fg:w="4"/><text x="12.2515%" y="543.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (4 samples, 0.02%)</title><rect x="12.0015%" y="517" width="0.0248%" height="15" fill="rgb(220,20,13)" fg:x="1935" fg:w="4"/><text x="12.2515%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.02%)</title><rect x="12.0015%" y="501" width="0.0248%" height="15" fill="rgb(210,164,35)" fg:x="1935" fg:w="4"/><text x="12.2515%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.02%)</title><rect x="12.0015%" y="485" width="0.0248%" height="15" fill="rgb(248,109,41)" fg:x="1935" fg:w="4"/><text x="12.2515%" y="495.50"></text></g><g><title>bevy_example`wgpu_core::command::CommandEncoder::open_pass (6 samples, 0.04%)</title><rect x="11.9953%" y="629" width="0.0372%" height="15" fill="rgb(238,23,50)" fg:x="1934" fg:w="6"/><text x="12.2453%" y="639.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (6 samples, 0.04%)</title><rect x="11.9953%" y="613" width="0.0372%" height="15" fill="rgb(211,48,49)" fg:x="1934" fg:w="6"/><text x="12.2453%" y="623.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (6 samples, 0.04%)</title><rect x="11.9953%" y="597" width="0.0372%" height="15" fill="rgb(223,36,21)" fg:x="1934" fg:w="6"/><text x="12.2453%" y="607.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (3 samples, 0.02%)</title><rect x="12.0387%" y="549" width="0.0186%" height="15" fill="rgb(207,123,46)" fg:x="1941" fg:w="3"/><text x="12.2887%" y="559.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (4 samples, 0.02%)</title><rect x="12.0387%" y="565" width="0.0248%" height="15" fill="rgb(240,218,32)" fg:x="1941" fg:w="4"/><text x="12.2887%" y="575.50"></text></g><g><title>bevy_example`wgpu_core::command::render::RenderPassInfo::start (6 samples, 0.04%)</title><rect x="12.0325%" y="629" width="0.0372%" height="15" fill="rgb(252,5,43)" fg:x="1940" fg:w="6"/><text x="12.2825%" y="639.50"></text></g><g><title>bevy_example`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (5 samples, 0.03%)</title><rect x="12.0387%" y="613" width="0.0310%" height="15" fill="rgb(252,84,19)" fg:x="1941" fg:w="5"/><text x="12.2887%" y="623.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (5 samples, 0.03%)</title><rect x="12.0387%" y="597" width="0.0310%" height="15" fill="rgb(243,152,39)" fg:x="1941" fg:w="5"/><text x="12.2887%" y="607.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="12.0387%" y="581" width="0.0310%" height="15" fill="rgb(234,160,15)" fg:x="1941" fg:w="5"/><text x="12.2887%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.01%)</title><rect x="12.0759%" y="517" width="0.0124%" height="15" fill="rgb(237,34,20)" fg:x="1947" fg:w="2"/><text x="12.3259%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.01%)</title><rect x="12.0759%" y="501" width="0.0124%" height="15" fill="rgb(229,97,13)" fg:x="1947" fg:w="2"/><text x="12.3259%" y="511.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (3 samples, 0.02%)</title><rect x="12.0759%" y="533" width="0.0186%" height="15" fill="rgb(234,71,50)" fg:x="1947" fg:w="3"/><text x="12.3259%" y="543.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (4 samples, 0.02%)</title><rect x="12.0759%" y="581" width="0.0248%" height="15" fill="rgb(253,155,4)" fg:x="1947" fg:w="4"/><text x="12.3259%" y="591.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.02%)</title><rect x="12.0759%" y="565" width="0.0248%" height="15" fill="rgb(222,185,37)" fg:x="1947" fg:w="4"/><text x="12.3259%" y="575.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.02%)</title><rect x="12.0759%" y="549" width="0.0248%" height="15" fill="rgb(251,177,13)" fg:x="1947" fg:w="4"/><text x="12.3259%" y="559.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (5 samples, 0.03%)</title><rect x="12.0759%" y="629" width="0.0310%" height="15" fill="rgb(250,179,40)" fg:x="1947" fg:w="5"/><text x="12.3259%" y="639.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="12.0759%" y="613" width="0.0310%" height="15" fill="rgb(242,44,2)" fg:x="1947" fg:w="5"/><text x="12.3259%" y="623.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.03%)</title><rect x="12.0759%" y="597" width="0.0310%" height="15" fill="rgb(216,177,13)" fg:x="1947" fg:w="5"/><text x="12.3259%" y="607.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn_inner::_{{closure}} (24 samples, 0.15%)</title><rect x="11.9643%" y="725" width="0.1489%" height="15" fill="rgb(216,106,43)" fg:x="1929" fg:w="24"/><text x="12.2143%" y="735.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (24 samples, 0.15%)</title><rect x="11.9643%" y="709" width="0.1489%" height="15" fill="rgb(216,183,2)" fg:x="1929" fg:w="24"/><text x="12.2143%" y="719.50"></text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once{{vtable.shim}} (24 samples, 0.15%)</title><rect x="11.9643%" y="693" width="0.1489%" height="15" fill="rgb(249,75,3)" fg:x="1929" fg:w="24"/><text x="12.2143%" y="703.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (23 samples, 0.14%)</title><rect x="11.9705%" y="677" width="0.1427%" height="15" fill="rgb(219,67,39)" fg:x="1930" fg:w="23"/><text x="12.2205%" y="687.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (23 samples, 0.14%)</title><rect x="11.9705%" y="661" width="0.1427%" height="15" fill="rgb(253,228,2)" fg:x="1930" fg:w="23"/><text x="12.2205%" y="671.50"></text></g><g><title>bevy_example`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (23 samples, 0.14%)</title><rect x="11.9705%" y="645" width="0.1427%" height="15" fill="rgb(235,138,27)" fg:x="1930" fg:w="23"/><text x="12.2205%" y="655.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (293 samples, 1.82%)</title><rect x="10.3021%" y="757" width="1.8173%" height="15" fill="rgb(236,97,51)" fg:x="1661" fg:w="293"/><text x="10.5521%" y="767.50">b..</text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (289 samples, 1.79%)</title><rect x="10.3269%" y="741" width="1.7925%" height="15" fill="rgb(240,80,30)" fg:x="1665" fg:w="289"/><text x="10.5769%" y="751.50">b..</text></g><g><title>bevy_example`bevy_render::renderer::RenderContext::finish (296 samples, 1.84%)</title><rect x="10.2959%" y="821" width="1.8359%" height="15" fill="rgb(230,178,19)" fg:x="1660" fg:w="296"/><text x="10.5459%" y="831.50">b..</text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (296 samples, 1.84%)</title><rect x="10.2959%" y="805" width="1.8359%" height="15" fill="rgb(210,190,27)" fg:x="1660" fg:w="296"/><text x="10.5459%" y="815.50">b..</text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (296 samples, 1.84%)</title><rect x="10.2959%" y="789" width="1.8359%" height="15" fill="rgb(222,107,31)" fg:x="1660" fg:w="296"/><text x="10.5459%" y="799.50">b..</text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (295 samples, 1.83%)</title><rect x="10.3021%" y="773" width="1.8297%" height="15" fill="rgb(216,127,34)" fg:x="1661" fg:w="295"/><text x="10.5521%" y="783.50">b..</text></g><g><title>bevy_example`alloc::task::raw_waker::drop_waker (2 samples, 0.01%)</title><rect x="12.1193%" y="757" width="0.0124%" height="15" fill="rgb(234,116,52)" fg:x="1954" fg:w="2"/><text x="12.3693%" y="767.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.01%)</title><rect x="12.1193%" y="741" width="0.0124%" height="15" fill="rgb(222,124,15)" fg:x="1954" fg:w="2"/><text x="12.3693%" y="751.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.02%)</title><rect x="12.1627%" y="661" width="0.0248%" height="15" fill="rgb(231,179,28)" fg:x="1961" fg:w="4"/><text x="12.4127%" y="671.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.02%)</title><rect x="12.1690%" y="645" width="0.0186%" height="15" fill="rgb(226,93,45)" fg:x="1962" fg:w="3"/><text x="12.4190%" y="655.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (2 samples, 0.01%)</title><rect x="12.1752%" y="629" width="0.0124%" height="15" fill="rgb(215,8,51)" fg:x="1963" fg:w="2"/><text x="12.4252%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.01%)</title><rect x="12.1752%" y="613" width="0.0124%" height="15" fill="rgb(223,106,5)" fg:x="1963" fg:w="2"/><text x="12.4252%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.01%)</title><rect x="12.1752%" y="597" width="0.0124%" height="15" fill="rgb(250,191,5)" fg:x="1963" fg:w="2"/><text x="12.4252%" y="607.50"></text></g><g><title>bevy_example`wgpu_core::command::CommandEncoder::open_pass (5 samples, 0.03%)</title><rect x="12.1627%" y="741" width="0.0310%" height="15" fill="rgb(242,132,44)" fg:x="1961" fg:w="5"/><text x="12.4127%" y="751.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (5 samples, 0.03%)</title><rect x="12.1627%" y="725" width="0.0310%" height="15" fill="rgb(251,152,29)" fg:x="1961" fg:w="5"/><text x="12.4127%" y="735.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="12.1627%" y="709" width="0.0310%" height="15" fill="rgb(218,179,5)" fg:x="1961" fg:w="5"/><text x="12.4127%" y="719.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.03%)</title><rect x="12.1627%" y="693" width="0.0310%" height="15" fill="rgb(227,67,19)" fg:x="1961" fg:w="5"/><text x="12.4127%" y="703.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (5 samples, 0.03%)</title><rect x="12.1627%" y="677" width="0.0310%" height="15" fill="rgb(233,119,31)" fg:x="1961" fg:w="5"/><text x="12.4127%" y="687.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (3 samples, 0.02%)</title><rect x="12.2000%" y="661" width="0.0186%" height="15" fill="rgb(241,120,22)" fg:x="1967" fg:w="3"/><text x="12.4500%" y="671.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="12.1938%" y="693" width="0.0310%" height="15" fill="rgb(224,102,30)" fg:x="1966" fg:w="5"/><text x="12.4438%" y="703.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (4 samples, 0.02%)</title><rect x="12.2000%" y="677" width="0.0248%" height="15" fill="rgb(210,164,37)" fg:x="1967" fg:w="4"/><text x="12.4500%" y="687.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (7 samples, 0.04%)</title><rect x="12.1938%" y="709" width="0.0434%" height="15" fill="rgb(226,191,16)" fg:x="1966" fg:w="7"/><text x="12.4438%" y="719.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::begin_pass (2 samples, 0.01%)</title><rect x="12.2248%" y="693" width="0.0124%" height="15" fill="rgb(214,40,45)" fg:x="1971" fg:w="2"/><text x="12.4748%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.01%)</title><rect x="12.2248%" y="677" width="0.0124%" height="15" fill="rgb(244,29,26)" fg:x="1971" fg:w="2"/><text x="12.4748%" y="687.50"></text></g><g><title>bevy_example`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (8 samples, 0.05%)</title><rect x="12.1938%" y="725" width="0.0496%" height="15" fill="rgb(216,16,5)" fg:x="1966" fg:w="8"/><text x="12.4438%" y="735.50"></text></g><g><title>bevy_example`wgpu_core::command::render::RenderPassInfo::start (9 samples, 0.06%)</title><rect x="12.1938%" y="741" width="0.0558%" height="15" fill="rgb(249,76,35)" fg:x="1966" fg:w="9"/><text x="12.4438%" y="751.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (4 samples, 0.02%)</title><rect x="12.2558%" y="709" width="0.0248%" height="15" fill="rgb(207,11,44)" fg:x="1976" fg:w="4"/><text x="12.5058%" y="719.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (4 samples, 0.02%)</title><rect x="12.2558%" y="693" width="0.0248%" height="15" fill="rgb(228,190,49)" fg:x="1976" fg:w="4"/><text x="12.5058%" y="703.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.02%)</title><rect x="12.2558%" y="677" width="0.0248%" height="15" fill="rgb(214,173,12)" fg:x="1976" fg:w="4"/><text x="12.5058%" y="687.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.01%)</title><rect x="12.2682%" y="661" width="0.0124%" height="15" fill="rgb(218,26,35)" fg:x="1978" fg:w="2"/><text x="12.5182%" y="671.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (2 samples, 0.01%)</title><rect x="12.2682%" y="645" width="0.0124%" height="15" fill="rgb(220,200,19)" fg:x="1978" fg:w="2"/><text x="12.5182%" y="655.50"></text></g><g><title>bevy_example`bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (25 samples, 0.16%)</title><rect x="12.1317%" y="821" width="0.1551%" height="15" fill="rgb(239,95,49)" fg:x="1956" fg:w="25"/><text x="12.3817%" y="831.50"></text></g><g><title>bevy_example`&lt;bevy_render::camera::camera_driver_node::CameraDriverNode as bevy_render::render_graph::node::Node&gt;::run (25 samples, 0.16%)</title><rect x="12.1317%" y="805" width="0.1551%" height="15" fill="rgb(235,85,53)" fg:x="1956" fg:w="25"/><text x="12.3817%" y="815.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;wgpu::api::render_pass::RenderPass&gt; (23 samples, 0.14%)</title><rect x="12.1441%" y="789" width="0.1427%" height="15" fill="rgb(233,133,31)" fg:x="1958" fg:w="23"/><text x="12.3941%" y="799.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (21 samples, 0.13%)</title><rect x="12.1565%" y="773" width="0.1302%" height="15" fill="rgb(218,25,20)" fg:x="1960" fg:w="21"/><text x="12.4065%" y="783.50"></text></g><g><title>bevy_example`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (20 samples, 0.12%)</title><rect x="12.1627%" y="757" width="0.1240%" height="15" fill="rgb(252,210,38)" fg:x="1961" fg:w="20"/><text x="12.4127%" y="767.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (5 samples, 0.03%)</title><rect x="12.2558%" y="741" width="0.0310%" height="15" fill="rgb(242,134,21)" fg:x="1976" fg:w="5"/><text x="12.5058%" y="751.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="12.2558%" y="725" width="0.0310%" height="15" fill="rgb(213,28,48)" fg:x="1976" fg:w="5"/><text x="12.5058%" y="735.50"></text></g><g><title>bevy_example`bevy_render::renderer::graph_runner::RenderGraphRunner::run (416 samples, 2.58%)</title><rect x="9.7128%" y="837" width="2.5802%" height="15" fill="rgb(250,196,2)" fg:x="1566" fg:w="416"/><text x="9.9628%" y="847.50">be..</text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBuffer] (2 samples, 0.01%)</title><rect x="12.2992%" y="741" width="0.0124%" height="15" fill="rgb(227,5,17)" fg:x="1983" fg:w="2"/><text x="12.5492%" y="751.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (2 samples, 0.01%)</title><rect x="12.2992%" y="725" width="0.0124%" height="15" fill="rgb(221,226,24)" fg:x="1983" fg:w="2"/><text x="12.5492%" y="735.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.01%)</title><rect x="12.2992%" y="709" width="0.0124%" height="15" fill="rgb(211,5,48)" fg:x="1983" fg:w="2"/><text x="12.5492%" y="719.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (491 samples, 3.05%)</title><rect x="9.2787%" y="917" width="3.0453%" height="15" fill="rgb(219,150,6)" fg:x="1496" fg:w="491"/><text x="9.5287%" y="927.50">bev..</text></g><g><title>bevy_example`std::panic::catch_unwind (476 samples, 2.95%)</title><rect x="9.3717%" y="901" width="2.9523%" height="15" fill="rgb(251,46,16)" fg:x="1511" fg:w="476"/><text x="9.6217%" y="911.50">bev..</text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (476 samples, 2.95%)</title><rect x="9.3717%" y="885" width="2.9523%" height="15" fill="rgb(220,204,40)" fg:x="1511" fg:w="476"/><text x="9.6217%" y="895.50">bev..</text></g><g><title>bevy_example`bevy_ecs::system::system::System::run (476 samples, 2.95%)</title><rect x="9.3717%" y="869" width="2.9523%" height="15" fill="rgb(211,85,2)" fg:x="1511" fg:w="476"/><text x="9.6217%" y="879.50">bev..</text></g><g><title>bevy_example`bevy_render::renderer::render_system (426 samples, 2.64%)</title><rect x="9.6818%" y="853" width="2.6422%" height="15" fill="rgb(229,17,7)" fg:x="1561" fg:w="426"/><text x="9.9318%" y="863.50">be..</text></g><g><title>bevy_example`wgpu::api::surface_texture::SurfaceTexture::present (5 samples, 0.03%)</title><rect x="12.2930%" y="837" width="0.0310%" height="15" fill="rgb(239,72,28)" fg:x="1982" fg:w="5"/><text x="12.5430%" y="847.50"></text></g><g><title>bevy_example`wgpu_core::present::_&lt;impl wgpu_core::global::Global&gt;::surface_present (5 samples, 0.03%)</title><rect x="12.2930%" y="821" width="0.0310%" height="15" fill="rgb(230,47,54)" fg:x="1982" fg:w="5"/><text x="12.5430%" y="831.50"></text></g><g><title>bevy_example`wgpu_core::present::_&lt;impl wgpu_core::instance::Surface&gt;::present (5 samples, 0.03%)</title><rect x="12.2930%" y="805" width="0.0310%" height="15" fill="rgb(214,50,8)" fg:x="1982" fg:w="5"/><text x="12.5430%" y="815.50"></text></g><g><title>bevy_example`&lt;Q as wgpu_hal::dynamic::queue::DynQueue&gt;::present (5 samples, 0.03%)</title><rect x="12.2930%" y="789" width="0.0310%" height="15" fill="rgb(216,198,43)" fg:x="1982" fg:w="5"/><text x="12.5430%" y="799.50"></text></g><g><title>bevy_example`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&gt;::present (5 samples, 0.03%)</title><rect x="12.2930%" y="773" width="0.0310%" height="15" fill="rgb(234,20,35)" fg:x="1982" fg:w="5"/><text x="12.5430%" y="783.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="12.2930%" y="757" width="0.0310%" height="15" fill="rgb(254,45,19)" fg:x="1982" fg:w="5"/><text x="12.5430%" y="767.50"></text></g><g><title>bevy_example`&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone_from (2 samples, 0.01%)</title><rect x="12.3364%" y="869" width="0.0124%" height="15" fill="rgb(219,14,44)" fg:x="1989" fg:w="2"/><text x="12.5864%" y="879.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (2 samples, 0.01%)</title><rect x="12.3922%" y="821" width="0.0124%" height="15" fill="rgb(217,220,26)" fg:x="1998" fg:w="2"/><text x="12.6422%" y="831.50"></text></g><g><title>bevy_example`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (6 samples, 0.04%)</title><rect x="12.4046%" y="805" width="0.0372%" height="15" fill="rgb(213,158,28)" fg:x="2000" fg:w="6"/><text x="12.6546%" y="815.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (2 samples, 0.01%)</title><rect x="12.4294%" y="789" width="0.0124%" height="15" fill="rgb(252,51,52)" fg:x="2004" fg:w="2"/><text x="12.6794%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.01%)</title><rect x="12.4294%" y="773" width="0.0124%" height="15" fill="rgb(246,89,16)" fg:x="2004" fg:w="2"/><text x="12.6794%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.01%)</title><rect x="12.4294%" y="757" width="0.0124%" height="15" fill="rgb(216,158,49)" fg:x="2004" fg:w="2"/><text x="12.6794%" y="767.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (15 samples, 0.09%)</title><rect x="12.4046%" y="821" width="0.0930%" height="15" fill="rgb(236,107,19)" fg:x="2000" fg:w="15"/><text x="12.6546%" y="831.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (9 samples, 0.06%)</title><rect x="12.4419%" y="805" width="0.0558%" height="15" fill="rgb(228,185,30)" fg:x="2006" fg:w="9"/><text x="12.6919%" y="815.50"></text></g><g><title>bevy_example`parking::Inner::unpark (9 samples, 0.06%)</title><rect x="12.4419%" y="789" width="0.0558%" height="15" fill="rgb(246,134,8)" fg:x="2006" fg:w="9"/><text x="12.6919%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (9 samples, 0.06%)</title><rect x="12.4419%" y="773" width="0.0558%" height="15" fill="rgb(214,143,50)" fg:x="2006" fg:w="9"/><text x="12.6919%" y="783.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (2 samples, 0.01%)</title><rect x="12.4977%" y="821" width="0.0124%" height="15" fill="rgb(228,75,8)" fg:x="2015" fg:w="2"/><text x="12.7477%" y="831.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (22 samples, 0.14%)</title><rect x="12.3922%" y="853" width="0.1365%" height="15" fill="rgb(207,175,4)" fg:x="1998" fg:w="22"/><text x="12.6422%" y="863.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (22 samples, 0.14%)</title><rect x="12.3922%" y="837" width="0.1365%" height="15" fill="rgb(205,108,24)" fg:x="1998" fg:w="22"/><text x="12.6422%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.02%)</title><rect x="12.5101%" y="821" width="0.0186%" height="15" fill="rgb(244,120,49)" fg:x="2017" fg:w="3"/><text x="12.7601%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.02%)</title><rect x="12.5101%" y="805" width="0.0186%" height="15" fill="rgb(223,47,38)" fg:x="2017" fg:w="3"/><text x="12.7601%" y="815.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (34 samples, 0.21%)</title><rect x="12.3302%" y="885" width="0.2109%" height="15" fill="rgb(229,179,11)" fg:x="1988" fg:w="34"/><text x="12.5802%" y="895.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (31 samples, 0.19%)</title><rect x="12.3488%" y="869" width="0.1923%" height="15" fill="rgb(231,122,1)" fg:x="1991" fg:w="31"/><text x="12.5988%" y="879.50"></text></g><g><title>bevy_example`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (530 samples, 3.29%)</title><rect x="9.2663%" y="949" width="3.2872%" height="15" fill="rgb(245,119,9)" fg:x="1494" fg:w="530"/><text x="9.5163%" y="959.50">bev..</text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (529 samples, 3.28%)</title><rect x="9.2725%" y="933" width="3.2810%" height="15" fill="rgb(241,163,25)" fg:x="1495" fg:w="529"/><text x="9.5225%" y="943.50">bev..</text></g><g><title>bevy_example`async_executor::Executor::spawn_inner::_{{closure}} (37 samples, 0.23%)</title><rect x="12.3240%" y="917" width="0.2295%" height="15" fill="rgb(217,214,3)" fg:x="1987" fg:w="37"/><text x="12.5740%" y="927.50"></text></g><g><title>bevy_example`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (37 samples, 0.23%)</title><rect x="12.3240%" y="901" width="0.2295%" height="15" fill="rgb(240,86,28)" fg:x="1987" fg:w="37"/><text x="12.5740%" y="911.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::apply_deferred (2 samples, 0.01%)</title><rect x="12.5411%" y="885" width="0.0124%" height="15" fill="rgb(215,47,9)" fg:x="2022" fg:w="2"/><text x="12.7911%" y="895.50"></text></g><g><title>bevy_example`&lt;async_task::task::FallibleTask&lt;T,M&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="12.5659%" y="933" width="0.0248%" height="15" fill="rgb(252,25,45)" fg:x="2026" fg:w="4"/><text x="12.8159%" y="943.50"></text></g><g><title>bevy_example`&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.20%)</title><rect x="12.5907%" y="933" width="0.1985%" height="15" fill="rgb(251,164,9)" fg:x="2030" fg:w="32"/><text x="12.8407%" y="943.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.02%)</title><rect x="12.7892%" y="933" width="0.0186%" height="15" fill="rgb(233,194,0)" fg:x="2062" fg:w="3"/><text x="13.0392%" y="943.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (573 samples, 3.55%)</title><rect x="9.2663%" y="965" width="3.5539%" height="15" fill="rgb(249,111,24)" fg:x="1494" fg:w="573"/><text x="9.5163%" y="975.50">bevy..</text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (43 samples, 0.27%)</title><rect x="12.5535%" y="949" width="0.2667%" height="15" fill="rgb(250,223,3)" fg:x="2024" fg:w="43"/><text x="12.8035%" y="959.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (675 samples, 4.19%)</title><rect x="9.2539%" y="1013" width="4.1866%" height="15" fill="rgb(236,178,37)" fg:x="1492" fg:w="675"/><text x="9.5039%" y="1023.50">bevy_..</text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (675 samples, 4.19%)</title><rect x="9.2539%" y="997" width="4.1866%" height="15" fill="rgb(241,158,50)" fg:x="1492" fg:w="675"/><text x="9.5039%" y="1007.50">bevy_..</text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (674 samples, 4.18%)</title><rect x="9.2601%" y="981" width="4.1804%" height="15" fill="rgb(213,121,41)" fg:x="1493" fg:w="674"/><text x="9.5101%" y="991.50">bevy_..</text></g><g><title>bevy_example`parking::Inner::park (98 samples, 0.61%)</title><rect x="12.8326%" y="965" width="0.6078%" height="15" fill="rgb(240,92,3)" fg:x="2069" fg:w="98"/><text x="13.0826%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (95 samples, 0.59%)</title><rect x="12.8512%" y="949" width="0.5892%" height="15" fill="rgb(205,123,3)" fg:x="2072" fg:w="95"/><text x="13.1012%" y="959.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::schedule::ScheduleGraph::build_schedule (4 samples, 0.02%)</title><rect x="13.4404%" y="981" width="0.0248%" height="15" fill="rgb(205,97,47)" fg:x="2167" fg:w="4"/><text x="13.6904%" y="991.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::graph::check_graph (3 samples, 0.02%)</title><rect x="13.4466%" y="965" width="0.0186%" height="15" fill="rgb(247,152,14)" fg:x="2168" fg:w="3"/><text x="13.6966%" y="975.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::schedule::Schedule::run (5 samples, 0.03%)</title><rect x="13.4404%" y="1013" width="0.0310%" height="15" fill="rgb(248,195,53)" fg:x="2167" fg:w="5"/><text x="13.6904%" y="1023.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::schedule::Schedule::initialize (5 samples, 0.03%)</title><rect x="13.4404%" y="997" width="0.0310%" height="15" fill="rgb(226,201,16)" fg:x="2167" fg:w="5"/><text x="13.6904%" y="1007.50"></text></g><g><title>bevy_example`bevy_app::sub_app::SubApp::update (681 samples, 4.22%)</title><rect x="9.2539%" y="1045" width="4.2238%" height="15" fill="rgb(205,98,0)" fg:x="1492" fg:w="681"/><text x="9.5039%" y="1055.50">bevy_..</text></g><g><title>bevy_example`bevy_ecs::world::World::schedule_scope (681 samples, 4.22%)</title><rect x="9.2539%" y="1029" width="4.2238%" height="15" fill="rgb(214,191,48)" fg:x="1492" fg:w="681"/><text x="9.5039%" y="1039.50">bevy_..</text></g><g><title>bevy_example`alloc::task::raw_waker::wake (13 samples, 0.08%)</title><rect x="13.5273%" y="981" width="0.0806%" height="15" fill="rgb(237,112,39)" fg:x="2181" fg:w="13"/><text x="13.7773%" y="991.50"></text></g><g><title>bevy_example`parking::Inner::unpark (13 samples, 0.08%)</title><rect x="13.5273%" y="965" width="0.0806%" height="15" fill="rgb(247,203,27)" fg:x="2181" fg:w="13"/><text x="13.7773%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (13 samples, 0.08%)</title><rect x="13.5273%" y="949" width="0.0806%" height="15" fill="rgb(235,124,28)" fg:x="2181" fg:w="13"/><text x="13.7773%" y="959.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (10 samples, 0.06%)</title><rect x="13.6141%" y="965" width="0.0620%" height="15" fill="rgb(208,207,46)" fg:x="2195" fg:w="10"/><text x="13.8641%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (10 samples, 0.06%)</title><rect x="13.6141%" y="949" width="0.0620%" height="15" fill="rgb(234,176,4)" fg:x="2195" fg:w="10"/><text x="13.8641%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (10 samples, 0.06%)</title><rect x="13.6141%" y="933" width="0.0620%" height="15" fill="rgb(230,133,28)" fg:x="2195" fg:w="10"/><text x="13.8641%" y="943.50"></text></g><g><title>bevy_example`async_executor::Ticker::sleep (14 samples, 0.09%)</title><rect x="13.6141%" y="981" width="0.0868%" height="15" fill="rgb(211,137,40)" fg:x="2195" fg:w="14"/><text x="13.8641%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (4 samples, 0.02%)</title><rect x="13.6761%" y="965" width="0.0248%" height="15" fill="rgb(254,35,13)" fg:x="2205" fg:w="4"/><text x="13.9261%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (4 samples, 0.02%)</title><rect x="13.6761%" y="949" width="0.0248%" height="15" fill="rgb(225,49,51)" fg:x="2205" fg:w="4"/><text x="13.9261%" y="959.50"></text></g><g><title>bevy_example`async_executor::Ticker::wake (2 samples, 0.01%)</title><rect x="13.7009%" y="981" width="0.0124%" height="15" fill="rgb(251,10,15)" fg:x="2209" fg:w="2"/><text x="13.9509%" y="991.50"></text></g><g><title>bevy_example`async_executor::steal (2 samples, 0.01%)</title><rect x="13.7133%" y="981" width="0.0124%" height="15" fill="rgb(228,207,15)" fg:x="2211" fg:w="2"/><text x="13.9633%" y="991.50"></text></g><g><title>bevy_example`async_executor::Runner::runnable::_{{closure}} (38 samples, 0.24%)</title><rect x="13.4962%" y="997" width="0.2357%" height="15" fill="rgb(241,99,19)" fg:x="2176" fg:w="38"/><text x="13.7462%" y="1007.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (3 samples, 0.02%)</title><rect x="13.7878%" y="901" width="0.0186%" height="15" fill="rgb(207,104,49)" fg:x="2223" fg:w="3"/><text x="14.0378%" y="911.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (6 samples, 0.04%)</title><rect x="13.7878%" y="933" width="0.0372%" height="15" fill="rgb(234,99,18)" fg:x="2223" fg:w="6"/><text x="14.0378%" y="943.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (6 samples, 0.04%)</title><rect x="13.7878%" y="917" width="0.0372%" height="15" fill="rgb(213,191,49)" fg:x="2223" fg:w="6"/><text x="14.0378%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.02%)</title><rect x="13.8064%" y="901" width="0.0186%" height="15" fill="rgb(210,226,19)" fg:x="2226" fg:w="3"/><text x="14.0564%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.02%)</title><rect x="13.8064%" y="885" width="0.0186%" height="15" fill="rgb(229,97,18)" fg:x="2226" fg:w="3"/><text x="14.0564%" y="895.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_scope (2 samples, 0.01%)</title><rect x="13.8312%" y="933" width="0.0124%" height="15" fill="rgb(211,167,15)" fg:x="2230" fg:w="2"/><text x="14.0812%" y="943.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (2 samples, 0.01%)</title><rect x="13.8312%" y="917" width="0.0124%" height="15" fill="rgb(210,169,34)" fg:x="2230" fg:w="2"/><text x="14.0812%" y="927.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (2 samples, 0.01%)</title><rect x="13.8312%" y="901" width="0.0124%" height="15" fill="rgb(241,121,31)" fg:x="2230" fg:w="2"/><text x="14.0812%" y="911.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (2 samples, 0.01%)</title><rect x="13.8312%" y="885" width="0.0124%" height="15" fill="rgb(232,40,11)" fg:x="2230" fg:w="2"/><text x="14.0812%" y="895.50"></text></g><g><title>bevy_example`parking::Inner::unpark (2 samples, 0.01%)</title><rect x="13.8312%" y="869" width="0.0124%" height="15" fill="rgb(205,86,26)" fg:x="2230" fg:w="2"/><text x="14.0812%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.01%)</title><rect x="13.8312%" y="853" width="0.0124%" height="15" fill="rgb(231,126,28)" fg:x="2230" fg:w="2"/><text x="14.0812%" y="863.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (13 samples, 0.08%)</title><rect x="13.7691%" y="965" width="0.0806%" height="15" fill="rgb(219,221,18)" fg:x="2220" fg:w="13"/><text x="14.0191%" y="975.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (13 samples, 0.08%)</title><rect x="13.7691%" y="949" width="0.0806%" height="15" fill="rgb(211,40,0)" fg:x="2220" fg:w="13"/><text x="14.0191%" y="959.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (4 samples, 0.02%)</title><rect x="13.8498%" y="949" width="0.0248%" height="15" fill="rgb(239,85,43)" fg:x="2233" fg:w="4"/><text x="14.0998%" y="959.50"></text></g><g><title>bevy_example`bevy_egui::free_egui_textures_system (14 samples, 0.09%)</title><rect x="13.9056%" y="917" width="0.0868%" height="15" fill="rgb(231,55,21)" fg:x="2242" fg:w="14"/><text x="14.1556%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (14 samples, 0.09%)</title><rect x="13.9056%" y="901" width="0.0868%" height="15" fill="rgb(225,184,43)" fg:x="2242" fg:w="14"/><text x="14.1556%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`madvise (14 samples, 0.09%)</title><rect x="13.9056%" y="885" width="0.0868%" height="15" fill="rgb(251,158,41)" fg:x="2242" fg:w="14"/><text x="14.1556%" y="895.50"></text></g><g><title>bevy_example`DYLD-STUB$$powf (8 samples, 0.05%)</title><rect x="14.3708%" y="869" width="0.0496%" height="15" fill="rgb(234,159,37)" fg:x="2317" fg:w="8"/><text x="14.6208%" y="879.50"></text></g><g><title>bevy_example`ecolor::_&lt;impl core::convert::From&lt;ecolor::color32::Color32&gt; for ecolor::rgba::Rgba&gt;::from (145 samples, 0.90%)</title><rect x="14.4204%" y="869" width="0.8993%" height="15" fill="rgb(216,204,22)" fg:x="2325" fg:w="145"/><text x="14.6704%" y="879.50"></text></g><g><title>libsystem_m.dylib`powf (53 samples, 0.33%)</title><rect x="14.9910%" y="853" width="0.3287%" height="15" fill="rgb(214,17,3)" fg:x="2417" fg:w="53"/><text x="15.2410%" y="863.50"></text></g><g><title>bevy_example`ecolor::gamma_u8_from_linear_f32 (109 samples, 0.68%)</title><rect x="15.3197%" y="869" width="0.6761%" height="15" fill="rgb(212,111,17)" fg:x="2470" fg:w="109"/><text x="15.5697%" y="879.50"></text></g><g><title>libsystem_m.dylib`powf (70 samples, 0.43%)</title><rect x="15.5616%" y="853" width="0.4342%" height="15" fill="rgb(221,157,24)" fg:x="2509" fg:w="70"/><text x="15.8116%" y="863.50"></text></g><g><title>bevy_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (327 samples, 2.03%)</title><rect x="13.9924%" y="885" width="2.0282%" height="15" fill="rgb(252,16,13)" fg:x="2256" fg:w="327"/><text x="14.2424%" y="895.50">b..</text></g><g><title>libsystem_m.dylib`powf (4 samples, 0.02%)</title><rect x="15.9958%" y="869" width="0.0248%" height="15" fill="rgb(221,62,2)" fg:x="2579" fg:w="4"/><text x="16.2458%" y="879.50"></text></g><g><title>bevy_example`ecolor::_&lt;impl core::convert::From&lt;ecolor::color32::Color32&gt; for ecolor::rgba::Rgba&gt;::from (20 samples, 0.12%)</title><rect x="16.0206%" y="885" width="0.1240%" height="15" fill="rgb(247,87,22)" fg:x="2583" fg:w="20"/><text x="16.2706%" y="895.50"></text></g><g><title>bevy_example`bevy_egui::egui_node::color_image_as_bevy_image (404 samples, 2.51%)</title><rect x="13.9924%" y="901" width="2.5057%" height="15" fill="rgb(215,73,9)" fg:x="2256" fg:w="404"/><text x="14.2424%" y="911.50">be..</text></g><g><title>bevy_example`ecolor::gamma_u8_from_linear_f32 (57 samples, 0.35%)</title><rect x="16.1446%" y="885" width="0.3535%" height="15" fill="rgb(207,175,33)" fg:x="2603" fg:w="57"/><text x="16.3946%" y="895.50"></text></g><g><title>bevy_example`bevy_egui::update_egui_textures_system (408 samples, 2.53%)</title><rect x="13.9924%" y="917" width="2.5305%" height="15" fill="rgb(243,129,54)" fg:x="2256" fg:w="408"/><text x="14.2424%" y="927.50">be..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="16.4982%" y="901" width="0.0248%" height="15" fill="rgb(227,119,45)" fg:x="2660" fg:w="4"/><text x="16.7482%" y="911.50"></text></g><g><title>bevy_example`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="16.5292%" y="917" width="0.0186%" height="15" fill="rgb(205,109,36)" fg:x="2665" fg:w="3"/><text x="16.7792%" y="927.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (466 samples, 2.89%)</title><rect x="13.7629%" y="981" width="2.8903%" height="15" fill="rgb(205,6,39)" fg:x="2219" fg:w="466"/><text x="14.0129%" y="991.50">be..</text></g><g><title>bevy_example`std::panic::catch_unwind (452 samples, 2.80%)</title><rect x="13.8498%" y="965" width="2.8034%" height="15" fill="rgb(221,32,16)" fg:x="2233" fg:w="452"/><text x="14.0998%" y="975.50">be..</text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (448 samples, 2.78%)</title><rect x="13.8746%" y="949" width="2.7786%" height="15" fill="rgb(228,144,50)" fg:x="2237" fg:w="448"/><text x="14.1246%" y="959.50">be..</text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (446 samples, 2.77%)</title><rect x="13.8870%" y="933" width="2.7662%" height="15" fill="rgb(229,201,53)" fg:x="2239" fg:w="446"/><text x="14.1370%" y="943.50">be..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.10%)</title><rect x="16.5540%" y="917" width="0.0992%" height="15" fill="rgb(249,153,27)" fg:x="2669" fg:w="16"/><text x="16.8040%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.02%)</title><rect x="16.6594%" y="949" width="0.0186%" height="15" fill="rgb(227,106,25)" fg:x="2686" fg:w="3"/><text x="16.9094%" y="959.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (4 samples, 0.02%)</title><rect x="16.6594%" y="981" width="0.0248%" height="15" fill="rgb(230,65,29)" fg:x="2686" fg:w="4"/><text x="16.9094%" y="991.50"></text></g><g><title>bevy_example`parking::Inner::unpark (4 samples, 0.02%)</title><rect x="16.6594%" y="965" width="0.0248%" height="15" fill="rgb(221,57,46)" fg:x="2686" fg:w="4"/><text x="16.9094%" y="975.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn_inner::_{{closure}} (2 samples, 0.01%)</title><rect x="16.6842%" y="981" width="0.0124%" height="15" fill="rgb(229,161,17)" fg:x="2690" fg:w="2"/><text x="16.9342%" y="991.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="16.6842%" y="965" width="0.0124%" height="15" fill="rgb(222,213,11)" fg:x="2690" fg:w="2"/><text x="16.9342%" y="975.50"></text></g><g><title>bevy_example`&lt;async_channel::RecvInner&lt;T&gt; as event_listener_strategy::EventListenerFuture&gt;::poll_with_strategy (2 samples, 0.01%)</title><rect x="16.6842%" y="949" width="0.0124%" height="15" fill="rgb(235,35,13)" fg:x="2690" fg:w="2"/><text x="16.9342%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (36 samples, 0.22%)</title><rect x="16.6966%" y="949" width="0.2233%" height="15" fill="rgb(233,158,34)" fg:x="2692" fg:w="36"/><text x="16.9466%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (36 samples, 0.22%)</title><rect x="16.6966%" y="933" width="0.2233%" height="15" fill="rgb(215,151,48)" fg:x="2692" fg:w="36"/><text x="16.9466%" y="943.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (38 samples, 0.24%)</title><rect x="16.6966%" y="965" width="0.2357%" height="15" fill="rgb(229,84,14)" fg:x="2692" fg:w="38"/><text x="16.9466%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="16.9199%" y="949" width="0.0124%" height="15" fill="rgb(229,68,14)" fg:x="2728" fg:w="2"/><text x="17.1699%" y="959.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (527 samples, 3.27%)</title><rect x="13.7319%" y="997" width="3.2686%" height="15" fill="rgb(243,106,26)" fg:x="2214" fg:w="527"/><text x="13.9819%" y="1007.50">bev..</text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (49 samples, 0.30%)</title><rect x="16.6966%" y="981" width="0.3039%" height="15" fill="rgb(206,45,38)" fg:x="2692" fg:w="49"/><text x="16.9466%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (11 samples, 0.07%)</title><rect x="16.9323%" y="965" width="0.0682%" height="15" fill="rgb(226,6,15)" fg:x="2730" fg:w="11"/><text x="17.1823%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (11 samples, 0.07%)</title><rect x="16.9323%" y="949" width="0.0682%" height="15" fill="rgb(232,22,54)" fg:x="2730" fg:w="11"/><text x="17.1823%" y="959.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (568 samples, 3.52%)</title><rect x="13.4900%" y="1013" width="3.5229%" height="15" fill="rgb(229,222,32)" fg:x="2175" fg:w="568"/><text x="13.7400%" y="1023.50">bev..</text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (2 samples, 0.01%)</title><rect x="17.0006%" y="997" width="0.0124%" height="15" fill="rgb(228,62,29)" fg:x="2741" fg:w="2"/><text x="17.2506%" y="1007.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place$LT$bevy_tasks..task_pool..TaskPool..execute_global_scope$LT$$LP$$RP$$C$bevy_tasks..task_pool..TaskPool..scope_with_executor_inner$LT$bevy_ecs..query..state..QueryState$LT$$LP$bevy_ecs..entity..Entity$C$$RF$bevy_transform..components..global_transform..GlobalTransform$C$core..option..Option$LT$$RF$bevy_render..primitives..Aabb$GT$$C$$RF$bevy_render..view..visibility..range..VisibilityRange$RP$$GT$..par_fold_init_unchecked_manual$LT$$LP$$RP$$C$bevy_ecs..query..par_iter..QueryParIter$LT$$LP$bevy_ecs..entity..Entity$C$$RF$bevy_transform..components..global_transform..GlobalTransform$C$core..option..Option$LT$$RF$bevy_render..primitives..Aabb$GT$$C$$RF$bevy_render..view..visibility..range..VisibilityRange$RP$$C$$LP$$RP$$GT$..for_each_init$LT$bevy_ecs..query..par_iter..QueryParIter$LT$$LP$bevy_ecs..entity..Entity$C$$RF$bevy_transform..components..global_transform..GlobalTransform$C$core..option..Option$LT$$RF$bevy_render..primitives..Aabb$GT$$C$$RF$bevy_render..view..visibility..range..Visi� (2 samples, 0.01%)</title><rect x="17.0130%" y="1013" width="0.0124%" height="15" fill="rgb(251,103,34)" fg:x="2743" fg:w="2"/><text x="17.2630%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (33 samples, 0.20%)</title><rect x="17.0316%" y="997" width="0.2047%" height="15" fill="rgb(233,12,30)" fg:x="2746" fg:w="33"/><text x="17.2816%" y="1007.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (607 samples, 3.76%)</title><rect x="13.4776%" y="1045" width="3.7648%" height="15" fill="rgb(238,52,0)" fg:x="2173" fg:w="607"/><text x="13.7276%" y="1055.50">bevy..</text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (606 samples, 3.76%)</title><rect x="13.4838%" y="1029" width="3.7586%" height="15" fill="rgb(223,98,5)" fg:x="2174" fg:w="606"/><text x="13.7338%" y="1039.50">bevy..</text></g><g><title>bevy_example`parking::Inner::park (35 samples, 0.22%)</title><rect x="17.0254%" y="1013" width="0.2171%" height="15" fill="rgb(228,75,37)" fg:x="2745" fg:w="35"/><text x="17.2754%" y="1023.50"></text></g><g><title>libsystem_c.dylib`nanosleep (3 samples, 0.02%)</title><rect x="17.2487%" y="1013" width="0.0186%" height="15" fill="rgb(205,115,49)" fg:x="2781" fg:w="3"/><text x="17.4987%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (3 samples, 0.02%)</title><rect x="17.2487%" y="997" width="0.0186%" height="15" fill="rgb(250,154,43)" fg:x="2781" fg:w="3"/><text x="17.4987%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.02%)</title><rect x="17.2487%" y="981" width="0.0186%" height="15" fill="rgb(226,43,29)" fg:x="2781" fg:w="3"/><text x="17.4987%" y="991.50"></text></g><g><title>bevy_example`gilrs::ff::server::run (18 samples, 0.11%)</title><rect x="17.2424%" y="1045" width="0.1116%" height="15" fill="rgb(249,228,39)" fg:x="2780" fg:w="18"/><text x="17.4924%" y="1055.50"></text></g><g><title>bevy_example`std::thread::sleep (17 samples, 0.11%)</title><rect x="17.2487%" y="1029" width="0.1054%" height="15" fill="rgb(216,79,43)" fg:x="2781" fg:w="17"/><text x="17.4987%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (14 samples, 0.09%)</title><rect x="17.2673%" y="1013" width="0.0868%" height="15" fill="rgb(228,95,12)" fg:x="2784" fg:w="14"/><text x="17.5173%" y="1023.50"></text></g><g><title>bevy_example`DYLD-STUB$$pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="17.5898%" y="981" width="0.0124%" height="15" fill="rgb(249,221,15)" fg:x="2836" fg:w="2"/><text x="17.8398%" y="991.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (6 samples, 0.04%)</title><rect x="17.7076%" y="965" width="0.0372%" height="15" fill="rgb(233,34,13)" fg:x="2855" fg:w="6"/><text x="17.9576%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="17.7324%" y="949" width="0.0124%" height="15" fill="rgb(214,103,39)" fg:x="2859" fg:w="2"/><text x="17.9824%" y="959.50"></text></g><g><title>bevy_example`&lt;async_channel::RecvInner&lt;T&gt; as event_listener_strategy::EventListenerFuture&gt;::poll_with_strategy (26 samples, 0.16%)</title><rect x="17.5898%" y="997" width="0.1613%" height="15" fill="rgb(251,126,39)" fg:x="2836" fg:w="26"/><text x="17.8398%" y="1007.50"></text></g><g><title>bevy_example`event_listener::InnerListener&lt;T,B&gt;::poll_internal (24 samples, 0.15%)</title><rect x="17.6022%" y="981" width="0.1489%" height="15" fill="rgb(214,216,36)" fg:x="2838" fg:w="24"/><text x="17.8522%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (202 samples, 1.25%)</title><rect x="17.7696%" y="965" width="1.2529%" height="15" fill="rgb(220,221,8)" fg:x="2865" fg:w="202"/><text x="18.0196%" y="975.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (208 samples, 1.29%)</title><rect x="17.7572%" y="997" width="1.2901%" height="15" fill="rgb(240,216,3)" fg:x="2863" fg:w="208"/><text x="18.0072%" y="1007.50"></text></g><g><title>bevy_example`parking::Inner::unpark (208 samples, 1.29%)</title><rect x="17.7572%" y="981" width="1.2901%" height="15" fill="rgb(232,218,17)" fg:x="2863" fg:w="208"/><text x="18.0072%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (3 samples, 0.02%)</title><rect x="19.0287%" y="965" width="0.0186%" height="15" fill="rgb(229,163,45)" fg:x="3068" fg:w="3"/><text x="19.2787%" y="975.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (2 samples, 0.01%)</title><rect x="19.1280%" y="981" width="0.0124%" height="15" fill="rgb(231,110,42)" fg:x="3084" fg:w="2"/><text x="19.3780%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.01%)</title><rect x="19.1280%" y="965" width="0.0124%" height="15" fill="rgb(208,170,48)" fg:x="3084" fg:w="2"/><text x="19.3780%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.01%)</title><rect x="19.1280%" y="949" width="0.0124%" height="15" fill="rgb(239,116,25)" fg:x="3084" fg:w="2"/><text x="19.3780%" y="959.50"></text></g><g><title>bevy_example`async_executor::State::notify (17 samples, 0.11%)</title><rect x="19.0473%" y="997" width="0.1054%" height="15" fill="rgb(219,200,50)" fg:x="3071" fg:w="17"/><text x="19.2973%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="19.1404%" y="981" width="0.0124%" height="15" fill="rgb(245,200,0)" fg:x="3086" fg:w="2"/><text x="19.3904%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (60 samples, 0.37%)</title><rect x="19.2148%" y="965" width="0.3721%" height="15" fill="rgb(245,119,33)" fg:x="3098" fg:w="60"/><text x="19.4648%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (60 samples, 0.37%)</title><rect x="19.2148%" y="949" width="0.3721%" height="15" fill="rgb(231,125,12)" fg:x="3098" fg:w="60"/><text x="19.4648%" y="959.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (63 samples, 0.39%)</title><rect x="19.2148%" y="981" width="0.3907%" height="15" fill="rgb(216,96,41)" fg:x="3098" fg:w="63"/><text x="19.4648%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.02%)</title><rect x="19.5869%" y="965" width="0.0186%" height="15" fill="rgb(248,43,45)" fg:x="3158" fg:w="3"/><text x="19.8369%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (35 samples, 0.22%)</title><rect x="19.6055%" y="981" width="0.2171%" height="15" fill="rgb(217,222,7)" fg:x="3161" fg:w="35"/><text x="19.8555%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (35 samples, 0.22%)</title><rect x="19.6055%" y="965" width="0.2171%" height="15" fill="rgb(233,28,6)" fg:x="3161" fg:w="35"/><text x="19.8555%" y="975.50"></text></g><g><title>bevy_example`async_executor::Ticker::sleep (115 samples, 0.71%)</title><rect x="19.1528%" y="997" width="0.7133%" height="15" fill="rgb(231,218,15)" fg:x="3088" fg:w="115"/><text x="19.4028%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (7 samples, 0.04%)</title><rect x="19.8226%" y="981" width="0.0434%" height="15" fill="rgb(226,171,48)" fg:x="3196" fg:w="7"/><text x="20.0726%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (5 samples, 0.03%)</title><rect x="19.8908%" y="965" width="0.0310%" height="15" fill="rgb(235,201,9)" fg:x="3207" fg:w="5"/><text x="20.1408%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (5 samples, 0.03%)</title><rect x="19.8908%" y="949" width="0.0310%" height="15" fill="rgb(217,80,15)" fg:x="3207" fg:w="5"/><text x="20.1408%" y="959.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (8 samples, 0.05%)</title><rect x="19.8908%" y="981" width="0.0496%" height="15" fill="rgb(219,152,8)" fg:x="3207" fg:w="8"/><text x="20.1408%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.02%)</title><rect x="19.9219%" y="965" width="0.0186%" height="15" fill="rgb(243,107,38)" fg:x="3212" fg:w="3"/><text x="20.1719%" y="975.50"></text></g><g><title>bevy_example`async_executor::Ticker::wake (21 samples, 0.13%)</title><rect x="19.8660%" y="997" width="0.1302%" height="15" fill="rgb(231,17,5)" fg:x="3203" fg:w="21"/><text x="20.1160%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (9 samples, 0.06%)</title><rect x="19.9405%" y="981" width="0.0558%" height="15" fill="rgb(209,25,54)" fg:x="3215" fg:w="9"/><text x="20.1905%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (9 samples, 0.06%)</title><rect x="19.9405%" y="965" width="0.0558%" height="15" fill="rgb(219,0,2)" fg:x="3215" fg:w="9"/><text x="20.1905%" y="975.50"></text></g><g><title>bevy_example`async_executor::steal (29 samples, 0.18%)</title><rect x="19.9963%" y="997" width="0.1799%" height="15" fill="rgb(246,9,5)" fg:x="3224" fg:w="29"/><text x="20.2463%" y="1007.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (5 samples, 0.03%)</title><rect x="20.1451%" y="981" width="0.0310%" height="15" fill="rgb(226,159,4)" fg:x="3248" fg:w="5"/><text x="20.3951%" y="991.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (3 samples, 0.02%)</title><rect x="20.7530%" y="949" width="0.0186%" height="15" fill="rgb(219,175,34)" fg:x="3346" fg:w="3"/><text x="21.0030%" y="959.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (3 samples, 0.02%)</title><rect x="20.7716%" y="949" width="0.0186%" height="15" fill="rgb(236,10,46)" fg:x="3349" fg:w="3"/><text x="21.0216%" y="959.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (9 samples, 0.06%)</title><rect x="20.7902%" y="949" width="0.0558%" height="15" fill="rgb(240,211,16)" fg:x="3352" fg:w="9"/><text x="21.0402%" y="959.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::validate_param_unsafe (10 samples, 0.06%)</title><rect x="20.8460%" y="949" width="0.0620%" height="15" fill="rgb(205,3,43)" fg:x="3361" fg:w="10"/><text x="21.0960%" y="959.50"></text></g><g><title>bevy_example`&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone_from (3 samples, 0.02%)</title><rect x="20.9080%" y="949" width="0.0186%" height="15" fill="rgb(245,7,22)" fg:x="3371" fg:w="3"/><text x="21.1580%" y="959.50"></text></g><g><title>bevy_example`&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone_from (3 samples, 0.02%)</title><rect x="21.3298%" y="933" width="0.0186%" height="15" fill="rgb(239,132,32)" fg:x="3439" fg:w="3"/><text x="21.5798%" y="943.50"></text></g><g><title>bevy_example`bevy_ecs::query::access::Access&lt;T&gt;::extend (27 samples, 0.17%)</title><rect x="21.3546%" y="933" width="0.1675%" height="15" fill="rgb(228,202,34)" fg:x="3443" fg:w="27"/><text x="21.6046%" y="943.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::union_with (24 samples, 0.15%)</title><rect x="21.3732%" y="917" width="0.1489%" height="15" fill="rgb(254,200,22)" fg:x="3446" fg:w="24"/><text x="21.6232%" y="927.50"></text></g><g><title>bevy_example`bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (3 samples, 0.02%)</title><rect x="21.5220%" y="933" width="0.0186%" height="15" fill="rgb(219,10,39)" fg:x="3470" fg:w="3"/><text x="21.7720%" y="943.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (37 samples, 0.23%)</title><rect x="21.6027%" y="901" width="0.2295%" height="15" fill="rgb(226,210,39)" fg:x="3483" fg:w="37"/><text x="21.8527%" y="911.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (7 samples, 0.04%)</title><rect x="21.8632%" y="869" width="0.0434%" height="15" fill="rgb(208,219,16)" fg:x="3525" fg:w="7"/><text x="22.1132%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.02%)</title><rect x="21.9066%" y="853" width="0.0186%" height="15" fill="rgb(216,158,51)" fg:x="3532" fg:w="3"/><text x="22.1566%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.02%)</title><rect x="21.9066%" y="837" width="0.0186%" height="15" fill="rgb(233,14,44)" fg:x="3532" fg:w="3"/><text x="22.1566%" y="847.50"></text></g><g><title>bevy_example`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (16 samples, 0.10%)</title><rect x="21.8322%" y="885" width="0.0992%" height="15" fill="rgb(237,97,39)" fg:x="3520" fg:w="16"/><text x="22.0822%" y="895.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (4 samples, 0.02%)</title><rect x="21.9066%" y="869" width="0.0248%" height="15" fill="rgb(218,198,43)" fg:x="3532" fg:w="4"/><text x="22.1566%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.01%)</title><rect x="21.9376%" y="837" width="0.0124%" height="15" fill="rgb(231,104,20)" fg:x="3537" fg:w="2"/><text x="22.1876%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.01%)</title><rect x="21.9376%" y="821" width="0.0124%" height="15" fill="rgb(254,36,13)" fg:x="3537" fg:w="2"/><text x="22.1876%" y="831.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (3 samples, 0.02%)</title><rect x="21.9376%" y="853" width="0.0186%" height="15" fill="rgb(248,14,50)" fg:x="3537" fg:w="3"/><text x="22.1876%" y="863.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (56 samples, 0.35%)</title><rect x="21.8322%" y="901" width="0.3473%" height="15" fill="rgb(217,107,29)" fg:x="3520" fg:w="56"/><text x="22.0822%" y="911.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (40 samples, 0.25%)</title><rect x="21.9314%" y="885" width="0.2481%" height="15" fill="rgb(251,169,33)" fg:x="3536" fg:w="40"/><text x="22.1814%" y="895.50"></text></g><g><title>bevy_example`parking::Inner::unpark (40 samples, 0.25%)</title><rect x="21.9314%" y="869" width="0.2481%" height="15" fill="rgb(217,108,32)" fg:x="3536" fg:w="40"/><text x="22.1814%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (36 samples, 0.22%)</title><rect x="21.9562%" y="853" width="0.2233%" height="15" fill="rgb(219,66,42)" fg:x="3540" fg:w="36"/><text x="22.2062%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (36 samples, 0.22%)</title><rect x="22.1795%" y="885" width="0.2233%" height="15" fill="rgb(206,180,7)" fg:x="3576" fg:w="36"/><text x="22.4295%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (35 samples, 0.22%)</title><rect x="22.1857%" y="869" width="0.2171%" height="15" fill="rgb(208,226,31)" fg:x="3577" fg:w="35"/><text x="22.4357%" y="879.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (39 samples, 0.24%)</title><rect x="22.1795%" y="901" width="0.2419%" height="15" fill="rgb(218,26,49)" fg:x="3576" fg:w="39"/><text x="22.4295%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.02%)</title><rect x="22.4028%" y="885" width="0.0186%" height="15" fill="rgb(233,197,48)" fg:x="3612" fg:w="3"/><text x="22.6528%" y="895.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (218 samples, 1.35%)</title><rect x="21.5407%" y="917" width="1.3521%" height="15" fill="rgb(252,181,51)" fg:x="3473" fg:w="218"/><text x="21.7907%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (76 samples, 0.47%)</title><rect x="22.4214%" y="901" width="0.4714%" height="15" fill="rgb(253,90,19)" fg:x="3615" fg:w="76"/><text x="22.6714%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (75 samples, 0.47%)</title><rect x="22.4276%" y="885" width="0.4652%" height="15" fill="rgb(215,171,30)" fg:x="3616" fg:w="75"/><text x="22.6776%" y="895.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (219 samples, 1.36%)</title><rect x="21.5407%" y="933" width="1.3583%" height="15" fill="rgb(214,222,9)" fg:x="3473" fg:w="219"/><text x="21.7907%" y="943.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_external (3 samples, 0.02%)</title><rect x="22.8990%" y="933" width="0.0186%" height="15" fill="rgb(223,3,22)" fg:x="3692" fg:w="3"/><text x="23.1490%" y="943.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (3 samples, 0.02%)</title><rect x="22.8990%" y="917" width="0.0186%" height="15" fill="rgb(225,196,46)" fg:x="3692" fg:w="3"/><text x="23.1490%" y="927.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (3 samples, 0.02%)</title><rect x="22.8990%" y="901" width="0.0186%" height="15" fill="rgb(209,110,37)" fg:x="3692" fg:w="3"/><text x="23.1490%" y="911.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (3 samples, 0.02%)</title><rect x="22.8990%" y="885" width="0.0186%" height="15" fill="rgb(249,89,12)" fg:x="3692" fg:w="3"/><text x="23.1490%" y="895.50"></text></g><g><title>bevy_example`parking::Inner::unpark (3 samples, 0.02%)</title><rect x="22.8990%" y="869" width="0.0186%" height="15" fill="rgb(226,27,33)" fg:x="3692" fg:w="3"/><text x="23.1490%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.02%)</title><rect x="22.8990%" y="853" width="0.0186%" height="15" fill="rgb(213,82,22)" fg:x="3692" fg:w="3"/><text x="23.1490%" y="863.50"></text></g><g><title>bevy_example`&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (3 samples, 0.02%)</title><rect x="22.9300%" y="885" width="0.0186%" height="15" fill="rgb(248,140,0)" fg:x="3697" fg:w="3"/><text x="23.1800%" y="895.50"></text></g><g><title>bevy_example`alloc::task::raw_waker::wake (14 samples, 0.09%)</title><rect x="22.9486%" y="885" width="0.0868%" height="15" fill="rgb(228,106,3)" fg:x="3700" fg:w="14"/><text x="23.1986%" y="895.50"></text></g><g><title>bevy_example`parking::Inner::unpark (14 samples, 0.09%)</title><rect x="22.9486%" y="869" width="0.0868%" height="15" fill="rgb(209,23,37)" fg:x="3700" fg:w="14"/><text x="23.1986%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (13 samples, 0.08%)</title><rect x="22.9548%" y="853" width="0.0806%" height="15" fill="rgb(241,93,50)" fg:x="3701" fg:w="13"/><text x="23.2048%" y="863.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (18 samples, 0.11%)</title><rect x="22.9300%" y="901" width="0.1116%" height="15" fill="rgb(253,46,43)" fg:x="3697" fg:w="18"/><text x="23.1800%" y="911.50"></text></g><g><title>bevy_example`bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_scope (22 samples, 0.14%)</title><rect x="22.9176%" y="933" width="0.1365%" height="15" fill="rgb(226,206,43)" fg:x="3695" fg:w="22"/><text x="23.1676%" y="943.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn (22 samples, 0.14%)</title><rect x="22.9176%" y="917" width="0.1365%" height="15" fill="rgb(217,54,7)" fg:x="3695" fg:w="22"/><text x="23.1676%" y="927.50"></text></g><g><title>bevy_example`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (4 samples, 0.02%)</title><rect x="23.0540%" y="933" width="0.0248%" height="15" fill="rgb(223,5,52)" fg:x="3717" fg:w="4"/><text x="23.3040%" y="943.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::is_disjoint (12 samples, 0.07%)</title><rect x="23.0850%" y="933" width="0.0744%" height="15" fill="rgb(206,52,46)" fg:x="3722" fg:w="12"/><text x="23.3350%" y="943.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::union_with (4 samples, 0.02%)</title><rect x="23.1595%" y="933" width="0.0248%" height="15" fill="rgb(253,136,11)" fg:x="3734" fg:w="4"/><text x="23.4095%" y="943.50"></text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::try_lock (2 samples, 0.01%)</title><rect x="23.1843%" y="933" width="0.0124%" height="15" fill="rgb(208,106,33)" fg:x="3738" fg:w="2"/><text x="23.4343%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.02%)</title><rect x="23.1967%" y="933" width="0.0186%" height="15" fill="rgb(206,54,4)" fg:x="3740" fg:w="3"/><text x="23.4467%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_trylock (10 samples, 0.06%)</title><rect x="23.2153%" y="933" width="0.0620%" height="15" fill="rgb(213,3,15)" fg:x="3743" fg:w="10"/><text x="23.4653%" y="943.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (377 samples, 2.34%)</title><rect x="20.9452%" y="949" width="2.3383%" height="15" fill="rgb(252,211,39)" fg:x="3377" fg:w="377"/><text x="21.1952%" y="959.50">b..</text></g><g><title>bevy_example`concurrent_queue::bounded::Bounded&lt;T&gt;::push_or_else (6 samples, 0.04%)</title><rect x="23.2835%" y="949" width="0.0372%" height="15" fill="rgb(223,6,36)" fg:x="3754" fg:w="6"/><text x="23.5335%" y="959.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::difference (3 samples, 0.02%)</title><rect x="23.3207%" y="949" width="0.0186%" height="15" fill="rgb(252,169,45)" fg:x="3760" fg:w="3"/><text x="23.5707%" y="959.50"></text></g><g><title>bevy_example`fixedbitset::FixedBitSet::is_disjoint (3 samples, 0.02%)</title><rect x="23.3393%" y="949" width="0.0186%" height="15" fill="rgb(212,48,26)" fg:x="3763" fg:w="3"/><text x="23.5893%" y="959.50"></text></g><g><title>bevy_example`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (431 samples, 2.67%)</title><rect x="20.7157%" y="965" width="2.6732%" height="15" fill="rgb(251,102,48)" fg:x="3340" fg:w="431"/><text x="20.9657%" y="975.50">be..</text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.02%)</title><rect x="23.3703%" y="949" width="0.0186%" height="15" fill="rgb(243,208,16)" fg:x="3768" fg:w="3"/><text x="23.6203%" y="959.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (25 samples, 0.16%)</title><rect x="23.4138%" y="949" width="0.1551%" height="15" fill="rgb(219,96,24)" fg:x="3775" fg:w="25"/><text x="23.6638%" y="959.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_texture (18 samples, 0.11%)</title><rect x="23.7363%" y="837" width="0.1116%" height="15" fill="rgb(219,33,29)" fg:x="3827" fg:w="18"/><text x="23.9863%" y="847.50"></text></g><g><title>bevy_example`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_texture (18 samples, 0.11%)</title><rect x="23.7363%" y="821" width="0.1116%" height="15" fill="rgb(223,176,5)" fg:x="3827" fg:w="18"/><text x="23.9863%" y="831.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (17 samples, 0.11%)</title><rect x="23.7425%" y="805" width="0.1054%" height="15" fill="rgb(228,140,14)" fg:x="3828" fg:w="17"/><text x="23.9925%" y="815.50"></text></g><g><title>AGXMetalG14X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (16 samples, 0.10%)</title><rect x="23.7487%" y="789" width="0.0992%" height="15" fill="rgb(217,179,31)" fg:x="3829" fg:w="16"/><text x="23.9987%" y="799.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (15 samples, 0.09%)</title><rect x="23.7549%" y="773" width="0.0930%" height="15" fill="rgb(230,9,30)" fg:x="3830" fg:w="15"/><text x="24.0049%" y="783.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (14 samples, 0.09%)</title><rect x="23.7611%" y="757" width="0.0868%" height="15" fill="rgb(230,136,20)" fg:x="3831" fg:w="14"/><text x="24.0111%" y="767.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (13 samples, 0.08%)</title><rect x="23.7673%" y="741" width="0.0806%" height="15" fill="rgb(215,210,22)" fg:x="3832" fg:w="13"/><text x="24.0173%" y="751.50"></text></g><g><title>IOKit`IOConnectCallMethod (13 samples, 0.08%)</title><rect x="23.7673%" y="725" width="0.0806%" height="15" fill="rgb(218,43,5)" fg:x="3832" fg:w="13"/><text x="24.0173%" y="735.50"></text></g><g><title>IOKit`io_connect_method (13 samples, 0.08%)</title><rect x="23.7673%" y="709" width="0.0806%" height="15" fill="rgb(216,11,5)" fg:x="3832" fg:w="13"/><text x="24.0173%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (12 samples, 0.07%)</title><rect x="23.7735%" y="693" width="0.0744%" height="15" fill="rgb(209,82,29)" fg:x="3833" fg:w="12"/><text x="24.0235%" y="703.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_texture (20 samples, 0.12%)</title><rect x="23.7301%" y="885" width="0.1240%" height="15" fill="rgb(244,115,12)" fg:x="3826" fg:w="20"/><text x="23.9801%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::device_create_texture (20 samples, 0.12%)</title><rect x="23.7301%" y="869" width="0.1240%" height="15" fill="rgb(222,82,18)" fg:x="3826" fg:w="20"/><text x="23.9801%" y="879.50"></text></g><g><title>bevy_example`wgpu_core::device::resource::Device::create_texture (20 samples, 0.12%)</title><rect x="23.7301%" y="853" width="0.1240%" height="15" fill="rgb(249,227,8)" fg:x="3826" fg:w="20"/><text x="23.9801%" y="863.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::blitCDM(IOGPUMetalResource const* const*, AGX::G14X::Texture*, unsigned long long, IOGPUMetalResource const* const*, AGX::G14X::Texture*, unsigned long long, AGX::FlagsConfiguration&lt;eAGXBlitFlags&gt; const&amp;, unsigned int, AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::BlitRegion const*, _AGCBlitTextureFormat, unsigned long, unsigned long, void const*, AGX::BlitDispatchContext (3 samples, 0.02%)</title><rect x="23.8603%" y="789" width="0.0186%" height="15" fill="rgb(253,141,45)" fg:x="3847" fg:w="3"/><text x="24.1103%" y="799.50"></text></g><g><title>bevy_example`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::copy_buffer_to_texture (5 samples, 0.03%)</title><rect x="23.8541%" y="853" width="0.0310%" height="15" fill="rgb(234,184,4)" fg:x="3846" fg:w="5"/><text x="24.1041%" y="863.50"></text></g><g><title>bevy_example`metal::encoder::BlitCommandEncoderRef::copy_from_buffer_to_texture (4 samples, 0.02%)</title><rect x="23.8603%" y="837" width="0.0248%" height="15" fill="rgb(218,194,23)" fg:x="3847" fg:w="4"/><text x="24.1103%" y="847.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:] (4 samples, 0.02%)</title><rect x="23.8603%" y="821" width="0.0248%" height="15" fill="rgb(235,66,41)" fg:x="3847" fg:w="4"/><text x="24.1103%" y="831.50"></text></g><g><title>AGXMetalG14X`AGX::BlitContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::copyBufferToTexture (4 samples, 0.02%)</title><rect x="23.8603%" y="805" width="0.0248%" height="15" fill="rgb(245,217,1)" fg:x="3847" fg:w="4"/><text x="24.1103%" y="815.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.01%)</title><rect x="23.8913%" y="757" width="0.0124%" height="15" fill="rgb(229,91,1)" fg:x="3852" fg:w="2"/><text x="24.1413%" y="767.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.03%)</title><rect x="23.8851%" y="805" width="0.0310%" height="15" fill="rgb(207,101,30)" fg:x="3851" fg:w="5"/><text x="24.1351%" y="815.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (5 samples, 0.03%)</title><rect x="23.8851%" y="789" width="0.0310%" height="15" fill="rgb(223,82,49)" fg:x="3851" fg:w="5"/><text x="24.1351%" y="799.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (5 samples, 0.03%)</title><rect x="23.8851%" y="773" width="0.0310%" height="15" fill="rgb(218,167,17)" fg:x="3851" fg:w="5"/><text x="24.1351%" y="783.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::PendingWrites::activate (6 samples, 0.04%)</title><rect x="23.8851%" y="853" width="0.0372%" height="15" fill="rgb(208,103,14)" fg:x="3851" fg:w="6"/><text x="24.1351%" y="863.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (6 samples, 0.04%)</title><rect x="23.8851%" y="837" width="0.0372%" height="15" fill="rgb(238,20,8)" fg:x="3851" fg:w="6"/><text x="24.1351%" y="847.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (6 samples, 0.04%)</title><rect x="23.8851%" y="821" width="0.0372%" height="15" fill="rgb(218,80,54)" fg:x="3851" fg:w="6"/><text x="24.1351%" y="831.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (10 samples, 0.06%)</title><rect x="23.9223%" y="789" width="0.0620%" height="15" fill="rgb(240,144,17)" fg:x="3857" fg:w="10"/><text x="24.1723%" y="799.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (10 samples, 0.06%)</title><rect x="23.9223%" y="773" width="0.0620%" height="15" fill="rgb(245,27,50)" fg:x="3857" fg:w="10"/><text x="24.1723%" y="783.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (10 samples, 0.06%)</title><rect x="23.9223%" y="757" width="0.0620%" height="15" fill="rgb(251,51,7)" fg:x="3857" fg:w="10"/><text x="24.1723%" y="767.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:gpuTag:args:argsSize:deallocator:] (10 samples, 0.06%)</title><rect x="23.9223%" y="741" width="0.0620%" height="15" fill="rgb(245,217,29)" fg:x="3857" fg:w="10"/><text x="24.1723%" y="751.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (10 samples, 0.06%)</title><rect x="23.9223%" y="725" width="0.0620%" height="15" fill="rgb(221,176,29)" fg:x="3857" fg:w="10"/><text x="24.1723%" y="735.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (10 samples, 0.06%)</title><rect x="23.9223%" y="709" width="0.0620%" height="15" fill="rgb(212,180,24)" fg:x="3857" fg:w="10"/><text x="24.1723%" y="719.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.06%)</title><rect x="23.9285%" y="693" width="0.0558%" height="15" fill="rgb(254,24,2)" fg:x="3858" fg:w="9"/><text x="24.1785%" y="703.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.06%)</title><rect x="23.9285%" y="677" width="0.0558%" height="15" fill="rgb(230,100,2)" fg:x="3858" fg:w="9"/><text x="24.1785%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.06%)</title><rect x="23.9285%" y="661" width="0.0558%" height="15" fill="rgb(219,142,25)" fg:x="3858" fg:w="9"/><text x="24.1785%" y="671.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (11 samples, 0.07%)</title><rect x="23.9223%" y="837" width="0.0682%" height="15" fill="rgb(240,73,43)" fg:x="3857" fg:w="11"/><text x="24.1723%" y="847.50"></text></g><g><title>bevy_example`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (11 samples, 0.07%)</title><rect x="23.9223%" y="821" width="0.0682%" height="15" fill="rgb(214,114,15)" fg:x="3857" fg:w="11"/><text x="24.1723%" y="831.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (11 samples, 0.07%)</title><rect x="23.9223%" y="805" width="0.0682%" height="15" fill="rgb(207,130,4)" fg:x="3857" fg:w="11"/><text x="24.1723%" y="815.50"></text></g><g><title>bevy_example`wgpu_core::resource::StagingBuffer::new (12 samples, 0.07%)</title><rect x="23.9223%" y="853" width="0.0744%" height="15" fill="rgb(221,25,40)" fg:x="3857" fg:w="12"/><text x="24.1723%" y="863.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::write_texture (24 samples, 0.15%)</title><rect x="23.8541%" y="869" width="0.1489%" height="15" fill="rgb(241,184,7)" fg:x="3846" fg:w="24"/><text x="24.1041%" y="879.50"></text></g><g><title>bevy_example`&lt;wgpu::api::device::Device as wgpu::util::device::DeviceExt&gt;::create_texture_with_data (285 samples, 1.77%)</title><rect x="23.7301%" y="901" width="1.7677%" height="15" fill="rgb(235,159,4)" fg:x="3826" fg:w="285"/><text x="23.9801%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_texture (265 samples, 1.64%)</title><rect x="23.8541%" y="885" width="1.6436%" height="15" fill="rgb(214,87,48)" fg:x="3846" fg:w="265"/><text x="24.1041%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (240 samples, 1.49%)</title><rect x="24.0092%" y="869" width="1.4886%" height="15" fill="rgb(246,198,24)" fg:x="3871" fg:w="240"/><text x="24.2592%" y="879.50"></text></g><g><title>bevy_example`&lt;bevy_render::texture::gpu_image::GpuImage as bevy_render::render_asset::RenderAsset&gt;::prepare_asset (308 samples, 1.91%)</title><rect x="23.7301%" y="917" width="1.9103%" height="15" fill="rgb(209,66,40)" fg:x="3826" fg:w="308"/><text x="23.9801%" y="927.50">b..</text></g><g><title>libsystem_malloc.dylib`free_medium (21 samples, 0.13%)</title><rect x="25.5101%" y="901" width="0.1302%" height="15" fill="rgb(233,147,39)" fg:x="4113" fg:w="21"/><text x="25.7601%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`madvise (20 samples, 0.12%)</title><rect x="25.5163%" y="885" width="0.1240%" height="15" fill="rgb(231,145,52)" fg:x="4114" fg:w="20"/><text x="25.7663%" y="895.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.04%)</title><rect x="25.6528%" y="709" width="0.0372%" height="15" fill="rgb(206,20,26)" fg:x="4136" fg:w="6"/><text x="25.9028%" y="719.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.04%)</title><rect x="25.6528%" y="693" width="0.0372%" height="15" fill="rgb(238,220,4)" fg:x="4136" fg:w="6"/><text x="25.9028%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.04%)</title><rect x="25.6528%" y="677" width="0.0372%" height="15" fill="rgb(252,195,42)" fg:x="4136" fg:w="6"/><text x="25.9028%" y="687.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (9 samples, 0.06%)</title><rect x="25.6404%" y="805" width="0.0558%" height="15" fill="rgb(209,10,6)" fg:x="4134" fg:w="9"/><text x="25.8904%" y="815.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (9 samples, 0.06%)</title><rect x="25.6404%" y="789" width="0.0558%" height="15" fill="rgb(229,3,52)" fg:x="4134" fg:w="9"/><text x="25.8904%" y="799.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (9 samples, 0.06%)</title><rect x="25.6404%" y="773" width="0.0558%" height="15" fill="rgb(253,49,37)" fg:x="4134" fg:w="9"/><text x="25.8904%" y="783.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (8 samples, 0.05%)</title><rect x="25.6466%" y="757" width="0.0496%" height="15" fill="rgb(240,103,49)" fg:x="4135" fg:w="8"/><text x="25.8966%" y="767.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (8 samples, 0.05%)</title><rect x="25.6466%" y="741" width="0.0496%" height="15" fill="rgb(250,182,30)" fg:x="4135" fg:w="8"/><text x="25.8966%" y="751.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (8 samples, 0.05%)</title><rect x="25.6466%" y="725" width="0.0496%" height="15" fill="rgb(248,8,30)" fg:x="4135" fg:w="8"/><text x="25.8966%" y="735.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_buffer (12 samples, 0.07%)</title><rect x="25.6404%" y="917" width="0.0744%" height="15" fill="rgb(237,120,30)" fg:x="4134" fg:w="12"/><text x="25.8904%" y="927.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (12 samples, 0.07%)</title><rect x="25.6404%" y="901" width="0.0744%" height="15" fill="rgb(221,146,34)" fg:x="4134" fg:w="12"/><text x="25.8904%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::write_buffer (12 samples, 0.07%)</title><rect x="25.6404%" y="885" width="0.0744%" height="15" fill="rgb(242,55,13)" fg:x="4134" fg:w="12"/><text x="25.8904%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::resource::StagingBuffer::new (12 samples, 0.07%)</title><rect x="25.6404%" y="869" width="0.0744%" height="15" fill="rgb(242,112,31)" fg:x="4134" fg:w="12"/><text x="25.8904%" y="879.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (12 samples, 0.07%)</title><rect x="25.6404%" y="853" width="0.0744%" height="15" fill="rgb(249,192,27)" fg:x="4134" fg:w="12"/><text x="25.8904%" y="863.50"></text></g><g><title>bevy_example`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (12 samples, 0.07%)</title><rect x="25.6404%" y="837" width="0.0744%" height="15" fill="rgb(208,204,44)" fg:x="4134" fg:w="12"/><text x="25.8904%" y="847.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (12 samples, 0.07%)</title><rect x="25.6404%" y="821" width="0.0744%" height="15" fill="rgb(208,93,54)" fg:x="4134" fg:w="12"/><text x="25.8904%" y="831.50"></text></g><g><title>bevy_example`parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.01%)</title><rect x="25.7024%" y="805" width="0.0124%" height="15" fill="rgb(242,1,31)" fg:x="4144" fg:w="2"/><text x="25.9524%" y="815.50"></text></g><g><title>bevy_example`bevy_ecs::system::commands::Commands::queue_internal (3 samples, 0.02%)</title><rect x="25.7396%" y="917" width="0.0186%" height="15" fill="rgb(241,83,25)" fg:x="4150" fg:w="3"/><text x="25.9896%" y="927.50"></text></g><g><title>bevy_example`bevy_egui::free_egui_textures_system (48 samples, 0.30%)</title><rect x="25.7582%" y="917" width="0.2977%" height="15" fill="rgb(205,169,50)" fg:x="4153" fg:w="48"/><text x="26.0082%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (48 samples, 0.30%)</title><rect x="25.7582%" y="901" width="0.2977%" height="15" fill="rgb(239,186,37)" fg:x="4153" fg:w="48"/><text x="26.0082%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`madvise (48 samples, 0.30%)</title><rect x="25.7582%" y="885" width="0.2977%" height="15" fill="rgb(205,221,10)" fg:x="4153" fg:w="48"/><text x="26.0082%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::write_staging_buffer_impl (2 samples, 0.01%)</title><rect x="26.0559%" y="853" width="0.0124%" height="15" fill="rgb(218,196,15)" fg:x="4201" fg:w="2"/><text x="26.3059%" y="863.50"></text></g><g><title>bevy_example`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::copy_buffer_to_buffer (2 samples, 0.01%)</title><rect x="26.0559%" y="837" width="0.0124%" height="15" fill="rgb(218,196,35)" fg:x="4201" fg:w="2"/><text x="26.3059%" y="847.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (2 samples, 0.01%)</title><rect x="26.0559%" y="821" width="0.0124%" height="15" fill="rgb(233,63,24)" fg:x="4201" fg:w="2"/><text x="26.3059%" y="831.50"></text></g><g><title>AGXMetalG14X`AGX::BlitDispatchContext&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::blitCDMBuffer (2 samples, 0.01%)</title><rect x="26.0559%" y="805" width="0.0124%" height="15" fill="rgb(225,8,4)" fg:x="4201" fg:w="2"/><text x="26.3059%" y="815.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (12 samples, 0.07%)</title><rect x="26.0683%" y="709" width="0.0744%" height="15" fill="rgb(234,105,35)" fg:x="4203" fg:w="12"/><text x="26.3183%" y="719.50"></text></g><g><title>IOKit`IOConnectCallMethod (12 samples, 0.07%)</title><rect x="26.0683%" y="693" width="0.0744%" height="15" fill="rgb(236,21,32)" fg:x="4203" fg:w="12"/><text x="26.3183%" y="703.50"></text></g><g><title>IOKit`io_connect_method (12 samples, 0.07%)</title><rect x="26.0683%" y="677" width="0.0744%" height="15" fill="rgb(228,109,6)" fg:x="4203" fg:w="12"/><text x="26.3183%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.07%)</title><rect x="26.0746%" y="661" width="0.0682%" height="15" fill="rgb(229,215,31)" fg:x="4204" fg:w="11"/><text x="26.3246%" y="671.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (14 samples, 0.09%)</title><rect x="26.0683%" y="789" width="0.0868%" height="15" fill="rgb(221,52,54)" fg:x="4203" fg:w="14"/><text x="26.3183%" y="799.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (14 samples, 0.09%)</title><rect x="26.0683%" y="773" width="0.0868%" height="15" fill="rgb(252,129,43)" fg:x="4203" fg:w="14"/><text x="26.3183%" y="783.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (14 samples, 0.09%)</title><rect x="26.0683%" y="757" width="0.0868%" height="15" fill="rgb(248,183,27)" fg:x="4203" fg:w="14"/><text x="26.3183%" y="767.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (14 samples, 0.09%)</title><rect x="26.0683%" y="741" width="0.0868%" height="15" fill="rgb(250,0,22)" fg:x="4203" fg:w="14"/><text x="26.3183%" y="751.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (14 samples, 0.09%)</title><rect x="26.0683%" y="725" width="0.0868%" height="15" fill="rgb(213,166,10)" fg:x="4203" fg:w="14"/><text x="26.3183%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (2 samples, 0.01%)</title><rect x="26.1428%" y="709" width="0.0124%" height="15" fill="rgb(207,163,36)" fg:x="4215" fg:w="2"/><text x="26.3928%" y="719.50"></text></g><g><title>bevy_example`metal::resource::ResourceRef::set_label (2 samples, 0.01%)</title><rect x="26.1614%" y="789" width="0.0124%" height="15" fill="rgb(208,122,22)" fg:x="4218" fg:w="2"/><text x="26.4114%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.01%)</title><rect x="26.1738%" y="773" width="0.0124%" height="15" fill="rgb(207,104,49)" fg:x="4220" fg:w="2"/><text x="26.4238%" y="783.50"></text></g><g><title>bevy_example`parking_lot::raw_mutex::RawMutex::lock_slow (3 samples, 0.02%)</title><rect x="26.1738%" y="789" width="0.0186%" height="15" fill="rgb(248,211,50)" fg:x="4220" fg:w="3"/><text x="26.4238%" y="799.50"></text></g><g><title>bevy_example`bevy_egui::render_systems::prepare_egui_render_target_data (23 samples, 0.14%)</title><rect x="26.0559%" y="917" width="0.1427%" height="15" fill="rgb(217,13,45)" fg:x="4201" fg:w="23"/><text x="26.3059%" y="927.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_buffer (23 samples, 0.14%)</title><rect x="26.0559%" y="901" width="0.1427%" height="15" fill="rgb(211,216,49)" fg:x="4201" fg:w="23"/><text x="26.3059%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (23 samples, 0.14%)</title><rect x="26.0559%" y="885" width="0.1427%" height="15" fill="rgb(221,58,53)" fg:x="4201" fg:w="23"/><text x="26.3059%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::write_buffer (23 samples, 0.14%)</title><rect x="26.0559%" y="869" width="0.1427%" height="15" fill="rgb(220,112,41)" fg:x="4201" fg:w="23"/><text x="26.3059%" y="879.50"></text></g><g><title>bevy_example`wgpu_core::resource::StagingBuffer::new (21 samples, 0.13%)</title><rect x="26.0683%" y="853" width="0.1302%" height="15" fill="rgb(236,38,28)" fg:x="4203" fg:w="21"/><text x="26.3183%" y="863.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (21 samples, 0.13%)</title><rect x="26.0683%" y="837" width="0.1302%" height="15" fill="rgb(227,195,22)" fg:x="4203" fg:w="21"/><text x="26.3183%" y="847.50"></text></g><g><title>bevy_example`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (21 samples, 0.13%)</title><rect x="26.0683%" y="821" width="0.1302%" height="15" fill="rgb(214,55,33)" fg:x="4203" fg:w="21"/><text x="26.3183%" y="831.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (21 samples, 0.13%)</title><rect x="26.0683%" y="805" width="0.1302%" height="15" fill="rgb(248,80,13)" fg:x="4203" fg:w="21"/><text x="26.3183%" y="815.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::write_staging_buffer_impl (2 samples, 0.01%)</title><rect x="26.1986%" y="853" width="0.0124%" height="15" fill="rgb(238,52,6)" fg:x="4224" fg:w="2"/><text x="26.4486%" y="863.50"></text></g><g><title>bevy_example`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::copy_buffer_to_buffer (2 samples, 0.01%)</title><rect x="26.1986%" y="837" width="0.0124%" height="15" fill="rgb(224,198,47)" fg:x="4224" fg:w="2"/><text x="26.4486%" y="847.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (2 samples, 0.01%)</title><rect x="26.1986%" y="821" width="0.0124%" height="15" fill="rgb(233,171,20)" fg:x="4224" fg:w="2"/><text x="26.4486%" y="831.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (6 samples, 0.04%)</title><rect x="26.2172%" y="741" width="0.0372%" height="15" fill="rgb(241,30,25)" fg:x="4227" fg:w="6"/><text x="26.4672%" y="751.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (6 samples, 0.04%)</title><rect x="26.2172%" y="725" width="0.0372%" height="15" fill="rgb(207,171,38)" fg:x="4227" fg:w="6"/><text x="26.4672%" y="735.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (6 samples, 0.04%)</title><rect x="26.2172%" y="709" width="0.0372%" height="15" fill="rgb(234,70,1)" fg:x="4227" fg:w="6"/><text x="26.4672%" y="719.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.04%)</title><rect x="26.2172%" y="693" width="0.0372%" height="15" fill="rgb(232,178,18)" fg:x="4227" fg:w="6"/><text x="26.4672%" y="703.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.04%)</title><rect x="26.2172%" y="677" width="0.0372%" height="15" fill="rgb(241,78,40)" fg:x="4227" fg:w="6"/><text x="26.4672%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.04%)</title><rect x="26.2172%" y="661" width="0.0372%" height="15" fill="rgb(222,35,25)" fg:x="4227" fg:w="6"/><text x="26.4672%" y="671.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (8 samples, 0.05%)</title><rect x="26.2110%" y="789" width="0.0496%" height="15" fill="rgb(207,92,16)" fg:x="4226" fg:w="8"/><text x="26.4610%" y="799.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (8 samples, 0.05%)</title><rect x="26.2110%" y="773" width="0.0496%" height="15" fill="rgb(216,59,51)" fg:x="4226" fg:w="8"/><text x="26.4610%" y="783.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (8 samples, 0.05%)</title><rect x="26.2110%" y="757" width="0.0496%" height="15" fill="rgb(213,80,28)" fg:x="4226" fg:w="8"/><text x="26.4610%" y="767.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::write_buffer (12 samples, 0.07%)</title><rect x="26.1986%" y="869" width="0.0744%" height="15" fill="rgb(220,93,7)" fg:x="4224" fg:w="12"/><text x="26.4486%" y="879.50"></text></g><g><title>bevy_example`wgpu_core::resource::StagingBuffer::new (10 samples, 0.06%)</title><rect x="26.2110%" y="853" width="0.0620%" height="15" fill="rgb(225,24,44)" fg:x="4226" fg:w="10"/><text x="26.4610%" y="863.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (10 samples, 0.06%)</title><rect x="26.2110%" y="837" width="0.0620%" height="15" fill="rgb(243,74,40)" fg:x="4226" fg:w="10"/><text x="26.4610%" y="847.50"></text></g><g><title>bevy_example`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (10 samples, 0.06%)</title><rect x="26.2110%" y="821" width="0.0620%" height="15" fill="rgb(228,39,7)" fg:x="4226" fg:w="10"/><text x="26.4610%" y="831.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (10 samples, 0.06%)</title><rect x="26.2110%" y="805" width="0.0620%" height="15" fill="rgb(227,79,8)" fg:x="4226" fg:w="10"/><text x="26.4610%" y="815.50"></text></g><g><title>bevy_example`bevy_egui::render_systems::prepare_egui_transforms_system (13 samples, 0.08%)</title><rect x="26.1986%" y="917" width="0.0806%" height="15" fill="rgb(236,58,11)" fg:x="4224" fg:w="13"/><text x="26.4486%" y="927.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_buffer (13 samples, 0.08%)</title><rect x="26.1986%" y="901" width="0.0806%" height="15" fill="rgb(249,63,35)" fg:x="4224" fg:w="13"/><text x="26.4486%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (13 samples, 0.08%)</title><rect x="26.1986%" y="885" width="0.0806%" height="15" fill="rgb(252,114,16)" fg:x="4224" fg:w="13"/><text x="26.4486%" y="895.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_bind_group (3 samples, 0.02%)</title><rect x="26.2792%" y="869" width="0.0186%" height="15" fill="rgb(254,151,24)" fg:x="4237" fg:w="3"/><text x="26.5292%" y="879.50"></text></g><g><title>bevy_example`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::device_create_bind_group (3 samples, 0.02%)</title><rect x="26.2792%" y="853" width="0.0186%" height="15" fill="rgb(253,54,39)" fg:x="4237" fg:w="3"/><text x="26.5292%" y="863.50"></text></g><g><title>bevy_example`wgpu_core::device::resource::Device::create_bind_group (2 samples, 0.01%)</title><rect x="26.2854%" y="837" width="0.0124%" height="15" fill="rgb(243,25,45)" fg:x="4238" fg:w="2"/><text x="26.5354%" y="847.50"></text></g><g><title>bevy_example`bevy_egui::render_systems::queue_bind_groups_system (4 samples, 0.02%)</title><rect x="26.2792%" y="917" width="0.0248%" height="15" fill="rgb(234,134,9)" fg:x="4237" fg:w="4"/><text x="26.5292%" y="927.50"></text></g><g><title>bevy_example`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="26.2792%" y="901" width="0.0248%" height="15" fill="rgb(227,166,31)" fg:x="4237" fg:w="4"/><text x="26.5292%" y="911.50"></text></g><g><title>bevy_example`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (4 samples, 0.02%)</title><rect x="26.2792%" y="885" width="0.0248%" height="15" fill="rgb(245,143,41)" fg:x="4237" fg:w="4"/><text x="26.5292%" y="895.50"></text></g><g><title>bevy_example`bevy_egui::egui_node::as_color_image (2 samples, 0.01%)</title><rect x="26.3040%" y="901" width="0.0124%" height="15" fill="rgb(238,181,32)" fg:x="4241" fg:w="2"/><text x="26.5540%" y="911.50"></text></g><g><title>bevy_example`DYLD-STUB$$powf (327 samples, 2.03%)</title><rect x="36.5069%" y="869" width="2.0282%" height="15" fill="rgb(224,113,18)" fg:x="5886" fg:w="327"/><text x="36.7569%" y="879.50">b..</text></g><g><title>bevy_example`ecolor::_&lt;impl core::convert::From&lt;ecolor::color32::Color32&gt; for ecolor::rgba::Rgba&gt;::from (3,311 samples, 20.54%)</title><rect x="38.5350%" y="869" width="20.5359%" height="15" fill="rgb(240,229,28)" fg:x="6213" fg:w="3311"/><text x="38.7850%" y="879.50">bevy_example`ecolor::_&lt;impl core..</text></g><g><title>libsystem_m.dylib`powf (1,063 samples, 6.59%)</title><rect x="52.4778%" y="853" width="6.5931%" height="15" fill="rgb(250,185,3)" fg:x="8461" fg:w="1063"/><text x="52.7278%" y="863.50">libsystem..</text></g><g><title>bevy_example`ecolor::gamma_u8_from_linear_f32 (2,383 samples, 14.78%)</title><rect x="59.0709%" y="869" width="14.7801%" height="15" fill="rgb(212,59,25)" fg:x="9524" fg:w="2383"/><text x="59.3209%" y="879.50">bevy_example`ecolor::ga..</text></g><g><title>libsystem_m.dylib`powf (1,609 samples, 9.98%)</title><rect x="63.8715%" y="853" width="9.9795%" height="15" fill="rgb(221,87,20)" fg:x="10298" fg:w="1609"/><text x="64.1215%" y="863.50">libsystem_m.dy..</text></g><g><title>bevy_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,865 samples, 48.78%)</title><rect x="26.3164%" y="885" width="48.7812%" height="15" fill="rgb(213,74,28)" fg:x="4243" fg:w="7865"/><text x="26.5664%" y="895.50">bevy_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I..</text></g><g><title>libsystem_m.dylib`powf (201 samples, 1.25%)</title><rect x="73.8510%" y="869" width="1.2467%" height="15" fill="rgb(224,132,34)" fg:x="11907" fg:w="201"/><text x="74.1010%" y="879.50"></text></g><g><title>bevy_example`ecolor::_&lt;impl core::convert::From&lt;ecolor::color32::Color32&gt; for ecolor::rgba::Rgba&gt;::from (417 samples, 2.59%)</title><rect x="75.0977%" y="885" width="2.5864%" height="15" fill="rgb(222,101,24)" fg:x="12108" fg:w="417"/><text x="75.3477%" y="895.50">be..</text></g><g><title>bevy_example`bevy_egui::egui_node::color_image_as_bevy_image (9,659 samples, 59.91%)</title><rect x="26.3164%" y="901" width="59.9082%" height="15" fill="rgb(254,142,4)" fg:x="4243" fg:w="9659"/><text x="26.5664%" y="911.50">bevy_example`bevy_egui::egui_node::color_image_as_bevy_image</text></g><g><title>bevy_example`ecolor::gamma_u8_from_linear_f32 (1,377 samples, 8.54%)</title><rect x="77.6841%" y="885" width="8.5406%" height="15" fill="rgb(230,229,49)" fg:x="12525" fg:w="1377"/><text x="77.9341%" y="895.50">bevy_example..</text></g><g><title>bevy_example`bevy_egui::update_egui_textures_system (9,767 samples, 60.58%)</title><rect x="26.3040%" y="917" width="60.5781%" height="15" fill="rgb(238,70,47)" fg:x="4241" fg:w="9767"/><text x="26.5540%" y="927.50">bevy_example`bevy_egui::update_egui_textures_system</text></g><g><title>libsystem_platform.dylib`_platform_memmove (106 samples, 0.66%)</title><rect x="86.2246%" y="901" width="0.6574%" height="15" fill="rgb(231,160,17)" fg:x="13902" fg:w="106"/><text x="86.4746%" y="911.50"></text></g><g><title>bevy_example`bevy_render::camera::camera::sort_cameras (2 samples, 0.01%)</title><rect x="86.8883%" y="917" width="0.0124%" height="15" fill="rgb(218,68,53)" fg:x="14009" fg:w="2"/><text x="87.1383%" y="927.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (2 samples, 0.01%)</title><rect x="86.9131%" y="709" width="0.0124%" height="15" fill="rgb(236,111,10)" fg:x="14013" fg:w="2"/><text x="87.1631%" y="719.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.01%)</title><rect x="86.9131%" y="693" width="0.0124%" height="15" fill="rgb(224,34,41)" fg:x="14013" fg:w="2"/><text x="87.1631%" y="703.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.01%)</title><rect x="86.9131%" y="677" width="0.0124%" height="15" fill="rgb(241,118,19)" fg:x="14013" fg:w="2"/><text x="87.1631%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.01%)</title><rect x="86.9131%" y="661" width="0.0124%" height="15" fill="rgb(238,129,25)" fg:x="14013" fg:w="2"/><text x="87.1631%" y="671.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (3 samples, 0.02%)</title><rect x="86.9131%" y="789" width="0.0186%" height="15" fill="rgb(238,22,31)" fg:x="14013" fg:w="3"/><text x="87.1631%" y="799.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (3 samples, 0.02%)</title><rect x="86.9131%" y="773" width="0.0186%" height="15" fill="rgb(222,174,48)" fg:x="14013" fg:w="3"/><text x="87.1631%" y="783.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (3 samples, 0.02%)</title><rect x="86.9131%" y="757" width="0.0186%" height="15" fill="rgb(206,152,40)" fg:x="14013" fg:w="3"/><text x="87.1631%" y="767.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (3 samples, 0.02%)</title><rect x="86.9131%" y="741" width="0.0186%" height="15" fill="rgb(218,99,54)" fg:x="14013" fg:w="3"/><text x="87.1631%" y="751.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (3 samples, 0.02%)</title><rect x="86.9131%" y="725" width="0.0186%" height="15" fill="rgb(220,174,26)" fg:x="14013" fg:w="3"/><text x="87.1631%" y="735.50"></text></g><g><title>bevy_example`bevy_render::render_resource::buffer_vec::RawBufferVec&lt;T&gt;::write_buffer (5 samples, 0.03%)</title><rect x="86.9131%" y="917" width="0.0310%" height="15" fill="rgb(245,116,9)" fg:x="14013" fg:w="5"/><text x="87.1631%" y="927.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_buffer (5 samples, 0.03%)</title><rect x="86.9131%" y="901" width="0.0310%" height="15" fill="rgb(209,72,35)" fg:x="14013" fg:w="5"/><text x="87.1631%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (5 samples, 0.03%)</title><rect x="86.9131%" y="885" width="0.0310%" height="15" fill="rgb(226,126,21)" fg:x="14013" fg:w="5"/><text x="87.1631%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::write_buffer (5 samples, 0.03%)</title><rect x="86.9131%" y="869" width="0.0310%" height="15" fill="rgb(227,192,1)" fg:x="14013" fg:w="5"/><text x="87.1631%" y="879.50"></text></g><g><title>bevy_example`wgpu_core::resource::StagingBuffer::new (5 samples, 0.03%)</title><rect x="86.9131%" y="853" width="0.0310%" height="15" fill="rgb(237,180,29)" fg:x="14013" fg:w="5"/><text x="87.1631%" y="863.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (5 samples, 0.03%)</title><rect x="86.9131%" y="837" width="0.0310%" height="15" fill="rgb(230,197,35)" fg:x="14013" fg:w="5"/><text x="87.1631%" y="847.50"></text></g><g><title>bevy_example`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (5 samples, 0.03%)</title><rect x="86.9131%" y="821" width="0.0310%" height="15" fill="rgb(246,193,31)" fg:x="14013" fg:w="5"/><text x="87.1631%" y="831.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="86.9131%" y="805" width="0.0310%" height="15" fill="rgb(241,36,4)" fg:x="14013" fg:w="5"/><text x="87.1631%" y="815.50"></text></g><g><title>AGXMetalG14X`invocation function for block in void AGX::Compiler::compileProgram&lt;AGX::ComputeProgramKey, AGCDeserializedReply&gt;(AGX::ComputeProgramKey const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject (2 samples, 0.01%)</title><rect x="86.9441%" y="581" width="0.0124%" height="15" fill="rgb(241,130,17)" fg:x="14018" fg:w="2"/><text x="87.1941%" y="591.50"></text></g><g><title>AGXMetalG14X`invocation function for block in void AGX::Compiler::compileProgram&lt;AGX::ComputeProgramKey, AGCDeserializedReply&gt;(AGX::ComputeProgramKey const&amp;, MTLCompileFunctionRequestData*, void (AGCDeserializedReply const&amp;, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject&lt;OS_dispatch_data&gt;*, NSObject (2 samples, 0.01%)</title><rect x="86.9441%" y="565" width="0.0124%" height="15" fill="rgb(206,137,32)" fg:x="14018" fg:w="2"/><text x="87.1941%" y="575.50"></text></g><g><title>Metal`invocation function for block in XPCCompilerConnection::BuildRequestInternal(MTLCompilerRequest*, char const*, NSObject&lt;OS_dispatch_data&gt;*, int, bool, void  (4 samples, 0.02%)</title><rect x="86.9441%" y="629" width="0.0248%" height="15" fill="rgb(237,228,51)" fg:x="14018" fg:w="4"/><text x="87.1941%" y="639.50"></text></g><g><title>Metal`invocation function for block in MTLCompilerConnectionManagerPrivate::buildRequest(unsigned int, MTLCompilerRequest*, bool, void (MTLCompilerError, NSObject (4 samples, 0.02%)</title><rect x="86.9441%" y="613" width="0.0248%" height="15" fill="rgb(243,6,42)" fg:x="14018" fg:w="4"/><text x="87.1941%" y="623.50"></text></g><g><title>Metal`__109-[MTLCompiler compileFunctionRequestInternal:frameworkLinking:linkDataSize:reflectionOnly:completionHandler:]_block_invoke (4 samples, 0.02%)</title><rect x="86.9441%" y="597" width="0.0248%" height="15" fill="rgb(251,74,28)" fg:x="14018" fg:w="4"/><text x="87.1941%" y="607.50"></text></g><g><title>Metal`-[MTLCompiler cacheLegacyCompilerData:cachedData:hashMap:libraryData:functionCache:] (2 samples, 0.01%)</title><rect x="86.9565%" y="581" width="0.0124%" height="15" fill="rgb(218,20,49)" fg:x="14020" fg:w="2"/><text x="87.2065%" y="591.50"></text></g><g><title>Metal`-[MTLCompiler addLegacyCompiledOutput:cachedCompiledOutput:importedSymbols:importedLibraries:hashKey:type:functionCache:] (2 samples, 0.01%)</title><rect x="86.9565%" y="565" width="0.0124%" height="15" fill="rgb(238,28,14)" fg:x="14020" fg:w="2"/><text x="87.2065%" y="575.50"></text></g><g><title>Metal`MultiLevelBinaryFSCache::addElement (2 samples, 0.01%)</title><rect x="86.9565%" y="549" width="0.0124%" height="15" fill="rgb(229,40,46)" fg:x="14020" fg:w="2"/><text x="87.2065%" y="559.50"></text></g><g><title>Metal`MTLCompilerFSCache::addElement (2 samples, 0.01%)</title><rect x="86.9565%" y="533" width="0.0124%" height="15" fill="rgb(244,195,20)" fg:x="14020" fg:w="2"/><text x="87.2065%" y="543.50"></text></g><g><title>libCoreFSCache.dylib`fscache_insert_and_retain (2 samples, 0.01%)</title><rect x="86.9565%" y="517" width="0.0124%" height="15" fill="rgb(253,56,35)" fg:x="14020" fg:w="2"/><text x="87.2065%" y="527.50"></text></g><g><title>bevy_example`metal::device::DeviceRef::new_compute_pipeline_state (6 samples, 0.04%)</title><rect x="86.9441%" y="805" width="0.0372%" height="15" fill="rgb(210,149,44)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="815.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyDevice newComputePipelineStateWithDescriptor:error:] (6 samples, 0.04%)</title><rect x="86.9441%" y="789" width="0.0372%" height="15" fill="rgb(240,135,12)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="799.50"></text></g><g><title>AGXMetalG14X`AGX::UserCommonShaderFactory&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::createComputePipeline(MTLComputePipelineDescriptor*, AGXG14XFamilyDevice*, unsigned long, MTLComputePipelineReflection**, NSError**, void (id (6 samples, 0.04%)</title><rect x="86.9441%" y="773" width="0.0372%" height="15" fill="rgb(251,24,50)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="783.50"></text></g><g><title>AGXMetalG14X`AGX::UserCommonShaderFactory&lt;AGX::G14X::Encoders, AGX::G14X::Classes, AGX::G14X::ObjClasses&gt;::createComputeProgramVariant(MTLComputePipelineDescriptor*, AGXG14XFamilyDevice*, unsigned long, AGXG14XFamilyBinaryArchive*, NSArray*, AGX::G14X::ComputeProgram*, NSObject&lt;OS_dispatch_data&gt;*, bool, void  (6 samples, 0.04%)</title><rect x="86.9441%" y="757" width="0.0372%" height="15" fill="rgb(243,200,47)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="767.50"></text></g><g><title>Metal`-[MTLCompiler compileFunctionRequestInternal:frameworkLinking:linkDataSize:reflectionOnly:completionHandler:] (6 samples, 0.04%)</title><rect x="86.9441%" y="741" width="0.0372%" height="15" fill="rgb(224,166,26)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="751.50"></text></g><g><title>Metal`MTLCompilerConnectionManagerPrivate::buildRequest(unsigned int, MTLCompilerRequest*, bool, void (MTLCompilerError, NSObject (6 samples, 0.04%)</title><rect x="86.9441%" y="725" width="0.0372%" height="15" fill="rgb(233,0,47)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="735.50"></text></g><g><title>Metal`XPCCompilerConnection::BuildRequest(MTLCompilerRequest*, char const*, NSObject&lt;OS_dispatch_data&gt;*, int, bool, void  (6 samples, 0.04%)</title><rect x="86.9441%" y="709" width="0.0372%" height="15" fill="rgb(253,80,5)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (6 samples, 0.04%)</title><rect x="86.9441%" y="693" width="0.0372%" height="15" fill="rgb(214,133,25)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (6 samples, 0.04%)</title><rect x="86.9441%" y="677" width="0.0372%" height="15" fill="rgb(209,27,14)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="687.50"></text></g><g><title>Metal`invocation function for block in XPCCompilerConnection::BuildRequest(MTLCompilerRequest*, char const*, NSObject&lt;OS_dispatch_data&gt;*, int, bool, void  (6 samples, 0.04%)</title><rect x="86.9441%" y="661" width="0.0372%" height="15" fill="rgb(219,102,51)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="671.50"></text></g><g><title>Metal`XPCCompilerConnection::BuildRequestInternal(MTLCompilerRequest*, char const*, NSObject&lt;OS_dispatch_data&gt;*, int, bool, void  (6 samples, 0.04%)</title><rect x="86.9441%" y="645" width="0.0372%" height="15" fill="rgb(237,18,16)" fg:x="14018" fg:w="6"/><text x="87.1941%" y="655.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_compute_pipeline (8 samples, 0.05%)</title><rect x="86.9441%" y="885" width="0.0496%" height="15" fill="rgb(241,85,17)" fg:x="14018" fg:w="8"/><text x="87.1941%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::device_create_compute_pipeline (8 samples, 0.05%)</title><rect x="86.9441%" y="869" width="0.0496%" height="15" fill="rgb(236,90,42)" fg:x="14018" fg:w="8"/><text x="87.1941%" y="879.50"></text></g><g><title>bevy_example`wgpu_core::device::resource::Device::create_compute_pipeline (8 samples, 0.05%)</title><rect x="86.9441%" y="853" width="0.0496%" height="15" fill="rgb(249,57,21)" fg:x="14018" fg:w="8"/><text x="87.1941%" y="863.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_compute_pipeline (8 samples, 0.05%)</title><rect x="86.9441%" y="837" width="0.0496%" height="15" fill="rgb(243,12,36)" fg:x="14018" fg:w="8"/><text x="87.1941%" y="847.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (8 samples, 0.05%)</title><rect x="86.9441%" y="821" width="0.0496%" height="15" fill="rgb(253,128,47)" fg:x="14018" fg:w="8"/><text x="87.1941%" y="831.50"></text></g><g><title>bevy_example`wgpu_hal::metal::device::_&lt;impl wgpu_hal::metal::Device&gt;::load_shader (2 samples, 0.01%)</title><rect x="86.9813%" y="805" width="0.0124%" height="15" fill="rgb(207,33,20)" fg:x="14024" fg:w="2"/><text x="87.2313%" y="815.50"></text></g><g><title>bevy_example`naga_oil::compose::Composer::add_import (2 samples, 0.01%)</title><rect x="87.0185%" y="853" width="0.0124%" height="15" fill="rgb(233,215,35)" fg:x="14030" fg:w="2"/><text x="87.2685%" y="863.50"></text></g><g><title>bevy_example`naga_oil::compose::Composer::create_composable_module (6 samples, 0.04%)</title><rect x="87.0309%" y="853" width="0.0372%" height="15" fill="rgb(249,188,52)" fg:x="14032" fg:w="6"/><text x="87.2809%" y="863.50"></text></g><g><title>bevy_example`naga::front::wgsl::parse_str (4 samples, 0.02%)</title><rect x="87.0434%" y="837" width="0.0248%" height="15" fill="rgb(225,12,32)" fg:x="14034" fg:w="4"/><text x="87.2934%" y="847.50"></text></g><g><title>bevy_example`naga::front::wgsl::Frontend::inner (4 samples, 0.02%)</title><rect x="87.0434%" y="821" width="0.0248%" height="15" fill="rgb(247,98,14)" fg:x="14034" fg:w="4"/><text x="87.2934%" y="831.50"></text></g><g><title>bevy_example`naga_oil::compose::Composer::create_composable_module (2 samples, 0.01%)</title><rect x="87.0682%" y="837" width="0.0124%" height="15" fill="rgb(247,219,48)" fg:x="14038" fg:w="2"/><text x="87.3182%" y="847.50"></text></g><g><title>bevy_example`naga_oil::compose::Composer::ensure_import (6 samples, 0.04%)</title><rect x="87.0682%" y="853" width="0.0372%" height="15" fill="rgb(253,60,48)" fg:x="14038" fg:w="6"/><text x="87.3182%" y="863.50"></text></g><g><title>bevy_example`naga_oil::compose::preprocess::Preprocessor::preprocess (3 samples, 0.02%)</title><rect x="87.0868%" y="837" width="0.0186%" height="15" fill="rgb(245,15,52)" fg:x="14041" fg:w="3"/><text x="87.3368%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.01%)</title><rect x="87.0930%" y="821" width="0.0124%" height="15" fill="rgb(220,133,28)" fg:x="14042" fg:w="2"/><text x="87.3430%" y="831.50"></text></g><g><title>bevy_example`naga_oil::compose::preprocess::Preprocessor::get_preprocessor_metadata (5 samples, 0.03%)</title><rect x="87.1054%" y="853" width="0.0310%" height="15" fill="rgb(217,180,4)" fg:x="14044" fg:w="5"/><text x="87.3554%" y="863.50"></text></g><g><title>bevy_example`naga_oil::compose::parse_imports::substitute_identifiers (3 samples, 0.02%)</title><rect x="87.1488%" y="837" width="0.0186%" height="15" fill="rgb(251,24,1)" fg:x="14051" fg:w="3"/><text x="87.3988%" y="847.50"></text></g><g><title>bevy_example`naga_oil::compose::preprocess::Preprocessor::check_scope (3 samples, 0.02%)</title><rect x="87.1674%" y="837" width="0.0186%" height="15" fill="rgb(212,185,49)" fg:x="14054" fg:w="3"/><text x="87.4174%" y="847.50"></text></g><g><title>bevy_example`regex::regex::string::Regex::captures_at (2 samples, 0.01%)</title><rect x="87.1860%" y="837" width="0.0124%" height="15" fill="rgb(215,175,22)" fg:x="14057" fg:w="2"/><text x="87.4360%" y="847.50"></text></g><g><title>bevy_example`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (2 samples, 0.01%)</title><rect x="87.1860%" y="821" width="0.0124%" height="15" fill="rgb(250,205,14)" fg:x="14057" fg:w="2"/><text x="87.4360%" y="831.50"></text></g><g><title>bevy_example`regex_automata::hybrid::regex::Regex::try_search (2 samples, 0.01%)</title><rect x="87.1860%" y="805" width="0.0124%" height="15" fill="rgb(225,211,22)" fg:x="14057" fg:w="2"/><text x="87.4360%" y="815.50"></text></g><g><title>bevy_example`regex_automata::hybrid::search::find_fwd (2 samples, 0.01%)</title><rect x="87.1860%" y="789" width="0.0124%" height="15" fill="rgb(251,179,42)" fg:x="14057" fg:w="2"/><text x="87.4360%" y="799.50"></text></g><g><title>bevy_example`naga_oil::compose::preprocess::Preprocessor::preprocess (12 samples, 0.07%)</title><rect x="87.1364%" y="853" width="0.0744%" height="15" fill="rgb(208,216,51)" fg:x="14049" fg:w="12"/><text x="87.3864%" y="863.50"></text></g><g><title>bevy_example`naga_oil::derive::DerivedModule::localize_function (2 samples, 0.01%)</title><rect x="87.2108%" y="853" width="0.0124%" height="15" fill="rgb(235,36,11)" fg:x="14061" fg:w="2"/><text x="87.4608%" y="863.50"></text></g><g><title>bevy_example`bevy_render::render_resource::pipeline_cache::PipelineCache::process_queue (46 samples, 0.29%)</title><rect x="86.9441%" y="917" width="0.2853%" height="15" fill="rgb(213,189,28)" fg:x="14018" fg:w="46"/><text x="87.1941%" y="927.50"></text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (46 samples, 0.29%)</title><rect x="86.9441%" y="901" width="0.2853%" height="15" fill="rgb(227,203,42)" fg:x="14018" fg:w="46"/><text x="87.1941%" y="911.50"></text></g><g><title>bevy_example`bevy_render::render_resource::pipeline_cache::ShaderCache::get (37 samples, 0.23%)</title><rect x="86.9999%" y="885" width="0.2295%" height="15" fill="rgb(244,72,36)" fg:x="14027" fg:w="37"/><text x="87.2499%" y="895.50"></text></g><g><title>bevy_example`naga_oil::compose::Composer::make_naga_module (35 samples, 0.22%)</title><rect x="87.0123%" y="869" width="0.2171%" height="15" fill="rgb(213,53,17)" fg:x="14029" fg:w="35"/><text x="87.2623%" y="879.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreTexture as wgpu::dispatch::TextureInterface&gt;::create_view (2 samples, 0.01%)</title><rect x="87.2356%" y="901" width="0.0124%" height="15" fill="rgb(207,167,3)" fg:x="14065" fg:w="2"/><text x="87.4856%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::texture_create_view (2 samples, 0.01%)</title><rect x="87.2356%" y="885" width="0.0124%" height="15" fill="rgb(216,98,30)" fg:x="14065" fg:w="2"/><text x="87.4856%" y="895.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeStart:drawableID:surfaceID:acquisitionWaitStart:acquiredTime:] (3 samples, 0.02%)</title><rect x="87.2542%" y="741" width="0.0186%" height="15" fill="rgb(236,123,15)" fg:x="14068" fg:w="3"/><text x="87.5042%" y="751.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (3 samples, 0.02%)</title><rect x="87.2542%" y="725" width="0.0186%" height="15" fill="rgb(248,81,50)" fg:x="14068" fg:w="3"/><text x="87.5042%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.02%)</title><rect x="87.2542%" y="709" width="0.0186%" height="15" fill="rgb(214,120,4)" fg:x="14068" fg:w="3"/><text x="87.5042%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (3 samples, 0.02%)</title><rect x="87.2542%" y="693" width="0.0186%" height="15" fill="rgb(208,179,34)" fg:x="14068" fg:w="3"/><text x="87.5042%" y="703.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent initWithOptions:] (9 samples, 0.06%)</title><rect x="87.2728%" y="741" width="0.0558%" height="15" fill="rgb(227,140,7)" fg:x="14071" fg:w="9"/><text x="87.5228%" y="751.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.06%)</title><rect x="87.2728%" y="725" width="0.0558%" height="15" fill="rgb(214,22,6)" fg:x="14071" fg:w="9"/><text x="87.5228%" y="735.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.06%)</title><rect x="87.2728%" y="709" width="0.0558%" height="15" fill="rgb(207,137,27)" fg:x="14071" fg:w="9"/><text x="87.5228%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.06%)</title><rect x="87.2728%" y="693" width="0.0558%" height="15" fill="rgb(210,8,46)" fg:x="14071" fg:w="9"/><text x="87.5228%" y="703.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:waitStart:] (13 samples, 0.08%)</title><rect x="87.2542%" y="757" width="0.0806%" height="15" fill="rgb(240,16,54)" fg:x="14068" fg:w="13"/><text x="87.5042%" y="767.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (2 samples, 0.01%)</title><rect x="87.3349%" y="757" width="0.0124%" height="15" fill="rgb(211,209,29)" fg:x="14081" fg:w="2"/><text x="87.5849%" y="767.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (2 samples, 0.01%)</title><rect x="87.3349%" y="741" width="0.0124%" height="15" fill="rgb(226,228,24)" fg:x="14081" fg:w="2"/><text x="87.5849%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="87.3349%" y="725" width="0.0124%" height="15" fill="rgb(222,84,9)" fg:x="14081" fg:w="2"/><text x="87.5849%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="87.3349%" y="709" width="0.0124%" height="15" fill="rgb(234,203,30)" fg:x="14081" fg:w="2"/><text x="87.5849%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="87.3349%" y="693" width="0.0124%" height="15" fill="rgb(238,109,14)" fg:x="14081" fg:w="2"/><text x="87.5849%" y="703.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (2 samples, 0.01%)</title><rect x="87.3473%" y="757" width="0.0124%" height="15" fill="rgb(233,206,34)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="767.50"></text></g><g><title>QuartzCore`CA::Render::create_iosurface_with_pixel_format (2 samples, 0.01%)</title><rect x="87.3473%" y="741" width="0.0124%" height="15" fill="rgb(220,167,47)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="751.50"></text></g><g><title>QuartzCore`CA::SurfaceUtil::CAIOSurfaceCreate (2 samples, 0.01%)</title><rect x="87.3473%" y="725" width="0.0124%" height="15" fill="rgb(238,105,10)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="735.50"></text></g><g><title>IOSurface`IOSurfaceCreate (2 samples, 0.01%)</title><rect x="87.3473%" y="709" width="0.0124%" height="15" fill="rgb(213,227,17)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="719.50"></text></g><g><title>IOSurface`-[IOSurface initWithProperties:] (2 samples, 0.01%)</title><rect x="87.3473%" y="693" width="0.0124%" height="15" fill="rgb(217,132,38)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="703.50"></text></g><g><title>IOSurface`IOSurfaceClientCreateChild (2 samples, 0.01%)</title><rect x="87.3473%" y="677" width="0.0124%" height="15" fill="rgb(242,146,4)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="687.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.01%)</title><rect x="87.3473%" y="661" width="0.0124%" height="15" fill="rgb(212,61,9)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="671.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.01%)</title><rect x="87.3473%" y="645" width="0.0124%" height="15" fill="rgb(247,126,22)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.01%)</title><rect x="87.3473%" y="629" width="0.0124%" height="15" fill="rgb(220,196,2)" fg:x="14083" fg:w="2"/><text x="87.5973%" y="639.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (18 samples, 0.11%)</title><rect x="87.2542%" y="773" width="0.1116%" height="15" fill="rgb(208,46,4)" fg:x="14068" fg:w="18"/><text x="87.5042%" y="783.50"></text></g><g><title>bevy_example`&lt;S as wgpu_hal::dynamic::surface::DynSurface&gt;::acquire_texture (20 samples, 0.12%)</title><rect x="87.2480%" y="837" width="0.1240%" height="15" fill="rgb(252,104,46)" fg:x="14067" fg:w="20"/><text x="87.4980%" y="847.50"></text></g><g><title>bevy_example`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface for wgpu_hal::metal::Surface&gt;::acquire_texture (20 samples, 0.12%)</title><rect x="87.2480%" y="821" width="0.1240%" height="15" fill="rgb(237,152,48)" fg:x="14067" fg:w="20"/><text x="87.4980%" y="831.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (20 samples, 0.12%)</title><rect x="87.2480%" y="805" width="0.1240%" height="15" fill="rgb(221,59,37)" fg:x="14067" fg:w="20"/><text x="87.4980%" y="815.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (20 samples, 0.12%)</title><rect x="87.2480%" y="789" width="0.1240%" height="15" fill="rgb(209,202,51)" fg:x="14067" fg:w="20"/><text x="87.4980%" y="799.50"></text></g><g><title>bevy_example`bevy_render::view::window::prepare_windows (23 samples, 0.14%)</title><rect x="87.2356%" y="917" width="0.1427%" height="15" fill="rgb(228,81,30)" fg:x="14065" fg:w="23"/><text x="87.4856%" y="927.50"></text></g><g><title>bevy_example`wgpu::api::surface::Surface::get_current_texture (21 samples, 0.13%)</title><rect x="87.2480%" y="901" width="0.1302%" height="15" fill="rgb(227,42,39)" fg:x="14067" fg:w="21"/><text x="87.4980%" y="911.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreSurface as wgpu::dispatch::SurfaceInterface&gt;::get_current_texture (21 samples, 0.13%)</title><rect x="87.2480%" y="885" width="0.1302%" height="15" fill="rgb(221,26,2)" fg:x="14067" fg:w="21"/><text x="87.4980%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::present::_&lt;impl wgpu_core::global::Global&gt;::surface_get_current_texture (21 samples, 0.13%)</title><rect x="87.2480%" y="869" width="0.1302%" height="15" fill="rgb(254,61,31)" fg:x="14067" fg:w="21"/><text x="87.4980%" y="879.50"></text></g><g><title>bevy_example`wgpu_core::present::_&lt;impl wgpu_core::instance::Surface&gt;::get_current_texture (21 samples, 0.13%)</title><rect x="87.2480%" y="853" width="0.1302%" height="15" fill="rgb(222,173,38)" fg:x="14067" fg:w="21"/><text x="87.4980%" y="863.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (7 samples, 0.04%)</title><rect x="87.4403%" y="709" width="0.0434%" height="15" fill="rgb(218,50,12)" fg:x="14098" fg:w="7"/><text x="87.6903%" y="719.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (6 samples, 0.04%)</title><rect x="87.4465%" y="693" width="0.0372%" height="15" fill="rgb(223,88,40)" fg:x="14099" fg:w="6"/><text x="87.6965%" y="703.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.04%)</title><rect x="87.4465%" y="677" width="0.0372%" height="15" fill="rgb(237,54,19)" fg:x="14099" fg:w="6"/><text x="87.6965%" y="687.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.04%)</title><rect x="87.4465%" y="661" width="0.0372%" height="15" fill="rgb(251,129,25)" fg:x="14099" fg:w="6"/><text x="87.6965%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.04%)</title><rect x="87.4465%" y="645" width="0.0372%" height="15" fill="rgb(238,97,19)" fg:x="14099" fg:w="6"/><text x="87.6965%" y="655.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (10 samples, 0.06%)</title><rect x="87.4341%" y="725" width="0.0620%" height="15" fill="rgb(240,169,18)" fg:x="14097" fg:w="10"/><text x="87.6841%" y="735.50"></text></g><g><title>bevy_example`bevy_render::render_resource::buffer_vec::RawBufferVec&lt;T&gt;::write_buffer (12 samples, 0.07%)</title><rect x="87.4279%" y="901" width="0.0744%" height="15" fill="rgb(230,187,49)" fg:x="14096" fg:w="12"/><text x="87.6779%" y="911.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_buffer (12 samples, 0.07%)</title><rect x="87.4279%" y="885" width="0.0744%" height="15" fill="rgb(209,44,26)" fg:x="14096" fg:w="12"/><text x="87.6779%" y="895.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (12 samples, 0.07%)</title><rect x="87.4279%" y="869" width="0.0744%" height="15" fill="rgb(244,0,6)" fg:x="14096" fg:w="12"/><text x="87.6779%" y="879.50"></text></g><g><title>bevy_example`wgpu_core::device::queue::Queue::write_buffer (12 samples, 0.07%)</title><rect x="87.4279%" y="853" width="0.0744%" height="15" fill="rgb(248,18,21)" fg:x="14096" fg:w="12"/><text x="87.6779%" y="863.50"></text></g><g><title>bevy_example`wgpu_core::resource::StagingBuffer::new (11 samples, 0.07%)</title><rect x="87.4341%" y="837" width="0.0682%" height="15" fill="rgb(245,180,19)" fg:x="14097" fg:w="11"/><text x="87.6841%" y="847.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (11 samples, 0.07%)</title><rect x="87.4341%" y="821" width="0.0682%" height="15" fill="rgb(252,118,36)" fg:x="14097" fg:w="11"/><text x="87.6841%" y="831.50"></text></g><g><title>bevy_example`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (11 samples, 0.07%)</title><rect x="87.4341%" y="805" width="0.0682%" height="15" fill="rgb(210,224,19)" fg:x="14097" fg:w="11"/><text x="87.6841%" y="815.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (11 samples, 0.07%)</title><rect x="87.4341%" y="789" width="0.0682%" height="15" fill="rgb(218,30,24)" fg:x="14097" fg:w="11"/><text x="87.6841%" y="799.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (11 samples, 0.07%)</title><rect x="87.4341%" y="773" width="0.0682%" height="15" fill="rgb(219,75,50)" fg:x="14097" fg:w="11"/><text x="87.6841%" y="783.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (11 samples, 0.07%)</title><rect x="87.4341%" y="757" width="0.0682%" height="15" fill="rgb(234,72,50)" fg:x="14097" fg:w="11"/><text x="87.6841%" y="767.50"></text></g><g><title>AGXMetalG14X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (11 samples, 0.07%)</title><rect x="87.4341%" y="741" width="0.0682%" height="15" fill="rgb(219,100,48)" fg:x="14097" fg:w="11"/><text x="87.6841%" y="751.50"></text></g><g><title>bevy_example`egui::containers::area::Area::begin (2 samples, 0.01%)</title><rect x="87.5085%" y="885" width="0.0124%" height="15" fill="rgb(253,5,41)" fg:x="14109" fg:w="2"/><text x="87.7585%" y="895.50"></text></g><g><title>bevy_example`epaint::image::ColorImage::from_rgb (343 samples, 2.13%)</title><rect x="87.5209%" y="773" width="2.1274%" height="15" fill="rgb(247,181,11)" fg:x="14111" fg:w="343"/><text x="87.7709%" y="783.50">b..</text></g><g><title>bevy_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (343 samples, 2.13%)</title><rect x="87.5209%" y="757" width="2.1274%" height="15" fill="rgb(222,223,25)" fg:x="14111" fg:w="343"/><text x="87.7709%" y="767.50">b..</text></g><g><title>bevy_example`&lt;cosmic_text::buffer::LayoutRunIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="89.6483%" y="757" width="0.0124%" height="15" fill="rgb(214,198,28)" fg:x="14454" fg:w="2"/><text x="89.8983%" y="767.50"></text></g><g><title>bevy_example`__rdl_alloc (2 samples, 0.01%)</title><rect x="90.2810%" y="693" width="0.0124%" height="15" fill="rgb(230,46,43)" fg:x="14556" fg:w="2"/><text x="90.5310%" y="703.50"></text></g><g><title>bevy_example`cosmic_text::attrs::AttrsOwned::new (2 samples, 0.01%)</title><rect x="90.3182%" y="645" width="0.0124%" height="15" fill="rgb(233,65,53)" fg:x="14562" fg:w="2"/><text x="90.5682%" y="655.50"></text></g><g><title>bevy_example`cosmic_text::shape_run_cache::ShapeRunCache::get (3 samples, 0.02%)</title><rect x="90.3306%" y="645" width="0.0186%" height="15" fill="rgb(221,121,27)" fg:x="14564" fg:w="3"/><text x="90.5806%" y="655.50"></text></g><g><title>bevy_example`core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="90.3368%" y="629" width="0.0124%" height="15" fill="rgb(247,70,47)" fg:x="14565" fg:w="2"/><text x="90.5868%" y="639.50"></text></g><g><title>bevy_example`cosmic_text::shape::Shaping::run (8 samples, 0.05%)</title><rect x="90.3058%" y="661" width="0.0496%" height="15" fill="rgb(228,85,35)" fg:x="14560" fg:w="8"/><text x="90.5558%" y="671.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeWord::build (11 samples, 0.07%)</title><rect x="90.2934%" y="677" width="0.0682%" height="15" fill="rgb(209,50,18)" fg:x="14558" fg:w="11"/><text x="90.5434%" y="687.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeSpan::build (12 samples, 0.07%)</title><rect x="90.2934%" y="693" width="0.0744%" height="15" fill="rgb(250,19,35)" fg:x="14558" fg:w="12"/><text x="90.5434%" y="703.50"></text></g><g><title>bevy_example`cosmic_text::buffer_line::BufferLine::shape (21 samples, 0.13%)</title><rect x="90.2748%" y="725" width="0.1302%" height="15" fill="rgb(253,107,29)" fg:x="14555" fg:w="21"/><text x="90.5248%" y="735.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeLine::build (21 samples, 0.13%)</title><rect x="90.2748%" y="709" width="0.1302%" height="15" fill="rgb(252,179,29)" fg:x="14555" fg:w="21"/><text x="90.5248%" y="719.50"></text></g><g><title>bevy_example`unicode_bidi::BidiInfo::new_with_data_source (6 samples, 0.04%)</title><rect x="90.3678%" y="693" width="0.0372%" height="15" fill="rgb(238,194,6)" fg:x="14570" fg:w="6"/><text x="90.6178%" y="703.50"></text></g><g><title>bevy_example`cosmic_text::buffer_line::BufferLine::layout (24 samples, 0.15%)</title><rect x="90.2748%" y="741" width="0.1489%" height="15" fill="rgb(238,164,29)" fg:x="14555" fg:w="24"/><text x="90.5248%" y="751.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeLine::layout_to_buffer (3 samples, 0.02%)</title><rect x="90.4050%" y="725" width="0.0186%" height="15" fill="rgb(224,25,9)" fg:x="14576" fg:w="3"/><text x="90.6550%" y="735.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeLine::layout_to_buffer::_{{closure}} (2 samples, 0.01%)</title><rect x="90.4112%" y="709" width="0.0124%" height="15" fill="rgb(244,153,23)" fg:x="14577" fg:w="2"/><text x="90.6612%" y="719.50"></text></g><g><title>bevy_example`cosmic_text::buffer_line::BufferLine::set_text (3 samples, 0.02%)</title><rect x="90.4236%" y="741" width="0.0186%" height="15" fill="rgb(212,203,14)" fg:x="14579" fg:w="3"/><text x="90.6736%" y="751.50"></text></g><g><title>bevy_example`cosmic_text::swash::SwashCache::get_image (3 samples, 0.02%)</title><rect x="90.4422%" y="741" width="0.0186%" height="15" fill="rgb(220,164,20)" fg:x="14582" fg:w="3"/><text x="90.6922%" y="751.50"></text></g><g><title>bevy_example`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.02%)</title><rect x="90.4422%" y="725" width="0.0186%" height="15" fill="rgb(222,203,48)" fg:x="14582" fg:w="3"/><text x="90.6922%" y="735.50"></text></g><g><title>bevy_example`soft_ratatui::soft_backend::SoftBackend::draw_cell (125 samples, 0.78%)</title><rect x="89.6917%" y="757" width="0.7753%" height="15" fill="rgb(215,159,22)" fg:x="14461" fg:w="125"/><text x="89.9417%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.02%)</title><rect x="90.4794%" y="757" width="0.0186%" height="15" fill="rgb(216,183,47)" fg:x="14588" fg:w="3"/><text x="90.7294%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.02%)</title><rect x="90.4794%" y="741" width="0.0186%" height="15" fill="rgb(229,195,25)" fg:x="14588" fg:w="3"/><text x="90.7294%" y="751.50"></text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once{{vtable.shim}} (491 samples, 3.05%)</title><rect x="87.5209%" y="805" width="3.0453%" height="15" fill="rgb(224,132,51)" fg:x="14111" fg:w="491"/><text x="87.7709%" y="815.50">bev..</text></g><g><title>bevy_example`&lt;&amp;mut egui_ratatui::ratagui_backend::RataguiBackend as egui::widgets::Widget&gt;::ui (491 samples, 3.05%)</title><rect x="87.5209%" y="789" width="3.0453%" height="15" fill="rgb(240,63,7)" fg:x="14111" fg:w="491"/><text x="87.7709%" y="799.50">bev..</text></g><g><title>bevy_example`soft_ratatui::soft_backend::SoftBackend::resize (148 samples, 0.92%)</title><rect x="89.6483%" y="773" width="0.9179%" height="15" fill="rgb(249,182,41)" fg:x="14454" fg:w="148"/><text x="89.8983%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.07%)</title><rect x="90.4980%" y="757" width="0.0682%" height="15" fill="rgb(243,47,26)" fg:x="14591" fg:w="11"/><text x="90.7480%" y="767.50"></text></g><g><title>bevy_example`egui::containers::collapsing_header::CollapsingState::show_body_unindented (493 samples, 3.06%)</title><rect x="87.5209%" y="885" width="3.0577%" height="15" fill="rgb(233,48,2)" fg:x="14111" fg:w="493"/><text x="87.7709%" y="895.50">bev..</text></g><g><title>bevy_example`egui::ui::Ui::scope (493 samples, 3.06%)</title><rect x="87.5209%" y="869" width="3.0577%" height="15" fill="rgb(244,165,34)" fg:x="14111" fg:w="493"/><text x="87.7709%" y="879.50">bev..</text></g><g><title>bevy_example`egui::ui::Ui::scope_dyn (493 samples, 3.06%)</title><rect x="87.5209%" y="853" width="3.0577%" height="15" fill="rgb(207,89,7)" fg:x="14111" fg:w="493"/><text x="87.7709%" y="863.50">bev..</text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once{{vtable.shim}} (493 samples, 3.06%)</title><rect x="87.5209%" y="837" width="3.0577%" height="15" fill="rgb(244,117,36)" fg:x="14111" fg:w="493"/><text x="87.7709%" y="847.50">bev..</text></g><g><title>bevy_example`egui::containers::resize::Resize::show (493 samples, 3.06%)</title><rect x="87.5209%" y="821" width="3.0577%" height="15" fill="rgb(226,144,34)" fg:x="14111" fg:w="493"/><text x="87.7709%" y="831.50">bev..</text></g><g><title>bevy_example`egui::containers::resize::Resize::end (2 samples, 0.01%)</title><rect x="90.5663%" y="805" width="0.0124%" height="15" fill="rgb(213,23,19)" fg:x="14602" fg:w="2"/><text x="90.8163%" y="815.50"></text></g><g><title>bevy_example`egui::containers::frame::Prepared::end (2 samples, 0.01%)</title><rect x="90.5787%" y="885" width="0.0124%" height="15" fill="rgb(217,75,12)" fg:x="14604" fg:w="2"/><text x="90.8287%" y="895.50"></text></g><g><title>bevy_example`egui::containers::window::paint_frame_interaction (2 samples, 0.01%)</title><rect x="90.5911%" y="885" width="0.0124%" height="15" fill="rgb(224,159,17)" fg:x="14606" fg:w="2"/><text x="90.8411%" y="895.50"></text></g><g><title>bevy_example`egui::containers::window::Window::show_dyn (500 samples, 3.10%)</title><rect x="87.5085%" y="901" width="3.1012%" height="15" fill="rgb(217,118,1)" fg:x="14109" fg:w="500"/><text x="87.7585%" y="911.50">bev..</text></g><g><title>bevy_example`&lt;ratatui::widgets::block::Block as ratatui::widgets::WidgetRef&gt;::render_ref (4 samples, 0.02%)</title><rect x="90.6283%" y="853" width="0.0248%" height="15" fill="rgb(232,180,48)" fg:x="14612" fg:w="4"/><text x="90.8783%" y="863.50"></text></g><g><title>bevy_example`&lt;ratatui::widgets::reflow::WordWrapper&lt;O,I&gt; as ratatui::widgets::reflow::LineComposer&gt;::next_line (3 samples, 0.02%)</title><rect x="90.6531%" y="853" width="0.0186%" height="15" fill="rgb(230,27,33)" fg:x="14616" fg:w="3"/><text x="90.9031%" y="863.50"></text></g><g><title>bevy_example`core::iter::traits::double_ended::DoubleEndedIterator::rfold (2 samples, 0.01%)</title><rect x="90.6717%" y="853" width="0.0124%" height="15" fill="rgb(205,31,21)" fg:x="14619" fg:w="2"/><text x="90.9217%" y="863.50"></text></g><g><title>bevy_example`ratatui::buffer::buffer::Buffer::set_style (4 samples, 0.02%)</title><rect x="90.6903%" y="853" width="0.0248%" height="15" fill="rgb(253,59,4)" fg:x="14622" fg:w="4"/><text x="90.9403%" y="863.50"></text></g><g><title>bevy_example`ratatui::text::grapheme::StyledGrapheme::is_whitespace (2 samples, 0.01%)</title><rect x="90.7213%" y="853" width="0.0124%" height="15" fill="rgb(224,201,9)" fg:x="14627" fg:w="2"/><text x="90.9713%" y="863.50"></text></g><g><title>bevy_example`&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::Widget&gt;::render (18 samples, 0.11%)</title><rect x="90.6283%" y="885" width="0.1116%" height="15" fill="rgb(229,206,30)" fg:x="14612" fg:w="18"/><text x="90.8783%" y="895.50"></text></g><g><title>bevy_example`&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::WidgetRef&gt;::render_ref (18 samples, 0.11%)</title><rect x="90.6283%" y="869" width="0.1116%" height="15" fill="rgb(212,67,47)" fg:x="14612" fg:w="18"/><text x="90.8783%" y="879.50"></text></g><g><title>bevy_example`&lt;soft_ratatui::soft_backend::SoftBackend as ratatui::backend::Backend&gt;::clear (60 samples, 0.37%)</title><rect x="90.7399%" y="885" width="0.3721%" height="15" fill="rgb(211,96,50)" fg:x="14630" fg:w="60"/><text x="90.9899%" y="895.50"></text></g><g><title>bevy_example`ratatui::buffer::buffer::Buffer::reset (3 samples, 0.02%)</title><rect x="91.0935%" y="869" width="0.0186%" height="15" fill="rgb(252,114,18)" fg:x="14687" fg:w="3"/><text x="91.3435%" y="879.50"></text></g><g><title>bevy_example`ratatui::buffer::buffer::Buffer::index_of_opt (2 samples, 0.01%)</title><rect x="91.1245%" y="869" width="0.0124%" height="15" fill="rgb(223,58,37)" fg:x="14692" fg:w="2"/><text x="91.3745%" y="879.50"></text></g><g><title>bevy_example`cosmic_text::attrs::AttrsOwned::new (3 samples, 0.02%)</title><rect x="91.6951%" y="853" width="0.0186%" height="15" fill="rgb(237,70,4)" fg:x="14784" fg:w="3"/><text x="91.9451%" y="863.50"></text></g><g><title>bevy_example`cosmic_text::shape::Shaping::run (4 samples, 0.02%)</title><rect x="91.7199%" y="773" width="0.0248%" height="15" fill="rgb(244,85,46)" fg:x="14788" fg:w="4"/><text x="91.9699%" y="783.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeWord::build (5 samples, 0.03%)</title><rect x="91.7199%" y="789" width="0.0310%" height="15" fill="rgb(223,39,52)" fg:x="14788" fg:w="5"/><text x="91.9699%" y="799.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeSpan::build (6 samples, 0.04%)</title><rect x="91.7199%" y="805" width="0.0372%" height="15" fill="rgb(218,200,14)" fg:x="14788" fg:w="6"/><text x="91.9699%" y="815.50"></text></g><g><title>bevy_example`cosmic_text::buffer_line::BufferLine::shape (12 samples, 0.07%)</title><rect x="91.7137%" y="837" width="0.0744%" height="15" fill="rgb(208,171,16)" fg:x="14787" fg:w="12"/><text x="91.9637%" y="847.50"></text></g><g><title>bevy_example`cosmic_text::shape::ShapeLine::build (12 samples, 0.07%)</title><rect x="91.7137%" y="821" width="0.0744%" height="15" fill="rgb(234,200,18)" fg:x="14787" fg:w="12"/><text x="91.9637%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.01%)</title><rect x="91.7757%" y="805" width="0.0124%" height="15" fill="rgb(228,45,11)" fg:x="14797" fg:w="2"/><text x="92.0257%" y="815.50"></text></g><g><title>bevy_example`cosmic_text::buffer_line::BufferLine::layout (14 samples, 0.09%)</title><rect x="91.7137%" y="853" width="0.0868%" height="15" fill="rgb(237,182,11)" fg:x="14787" fg:w="14"/><text x="91.9637%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.02%)</title><rect x="91.8067%" y="853" width="0.0186%" height="15" fill="rgb(241,175,49)" fg:x="14802" fg:w="3"/><text x="92.0567%" y="863.50"></text></g><g><title>bevy_example`soft_ratatui::soft_backend::SoftBackend::draw_cell (112 samples, 0.69%)</title><rect x="91.1369%" y="869" width="0.6947%" height="15" fill="rgb(247,38,35)" fg:x="14694" fg:w="112"/><text x="91.3869%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="91.8315%" y="869" width="0.0124%" height="15" fill="rgb(228,39,49)" fg:x="14806" fg:w="2"/><text x="92.0815%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (5 samples, 0.03%)</title><rect x="91.8439%" y="869" width="0.0310%" height="15" fill="rgb(226,101,26)" fg:x="14808" fg:w="5"/><text x="92.0939%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.03%)</title><rect x="91.8439%" y="853" width="0.0310%" height="15" fill="rgb(206,141,19)" fg:x="14808" fg:w="5"/><text x="92.0939%" y="863.50"></text></g><g><title>bevy_example`&lt;soft_ratatui::soft_backend::SoftBackend as ratatui::backend::Backend&gt;::draw (124 samples, 0.77%)</title><rect x="91.1121%" y="885" width="0.7691%" height="15" fill="rgb(211,200,13)" fg:x="14690" fg:w="124"/><text x="91.3621%" y="895.50"></text></g><g><title>bevy_example`core::iter::traits::double_ended::DoubleEndedIterator::rfold (5 samples, 0.03%)</title><rect x="91.8874%" y="885" width="0.0310%" height="15" fill="rgb(241,121,6)" fg:x="14815" fg:w="5"/><text x="92.1374%" y="895.50"></text></g><g><title>bevy_example`ratatui::buffer::buffer::Buffer::diff (25 samples, 0.16%)</title><rect x="91.9184%" y="885" width="0.1551%" height="15" fill="rgb(234,221,29)" fg:x="14820" fg:w="25"/><text x="92.1684%" y="895.50"></text></g><g><title>bevy_example`core::iter::traits::double_ended::DoubleEndedIterator::rfold (15 samples, 0.09%)</title><rect x="91.9804%" y="869" width="0.0930%" height="15" fill="rgb(229,136,5)" fg:x="14830" fg:w="15"/><text x="92.2304%" y="879.50"></text></g><g><title>bevy_example`ratatui::buffer::buffer::Buffer::reset (10 samples, 0.06%)</title><rect x="92.0734%" y="885" width="0.0620%" height="15" fill="rgb(238,36,11)" fg:x="14845" fg:w="10"/><text x="92.3234%" y="895.50"></text></g><g><title>bevy_example`ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw (245 samples, 1.52%)</title><rect x="90.6221%" y="901" width="1.5196%" height="15" fill="rgb(251,55,41)" fg:x="14611" fg:w="245"/><text x="90.8721%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::device_limits (2 samples, 0.01%)</title><rect x="92.1417%" y="901" width="0.0124%" height="15" fill="rgb(242,34,40)" fg:x="14856" fg:w="2"/><text x="92.3917%" y="911.50"></text></g><g><title>bevy_example`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (770 samples, 4.78%)</title><rect x="87.3845%" y="917" width="4.7758%" height="15" fill="rgb(215,42,17)" fg:x="14089" fg:w="770"/><text x="87.6345%" y="927.50">bevy_e..</text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (6 samples, 0.04%)</title><rect x="92.1603%" y="757" width="0.0372%" height="15" fill="rgb(207,44,46)" fg:x="14859" fg:w="6"/><text x="92.4103%" y="767.50"></text></g><g><title>CoreFoundation`_CFRelease (6 samples, 0.04%)</title><rect x="92.1603%" y="741" width="0.0372%" height="15" fill="rgb(211,206,28)" fg:x="14859" fg:w="6"/><text x="92.4103%" y="751.50"></text></g><g><title>IOKit`iokit_user_client_trap (6 samples, 0.04%)</title><rect x="92.1603%" y="725" width="0.0372%" height="15" fill="rgb(237,167,16)" fg:x="14859" fg:w="6"/><text x="92.4103%" y="735.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (7 samples, 0.04%)</title><rect x="92.1603%" y="773" width="0.0434%" height="15" fill="rgb(233,66,6)" fg:x="14859" fg:w="7"/><text x="92.4103%" y="783.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (8 samples, 0.05%)</title><rect x="92.1603%" y="853" width="0.0496%" height="15" fill="rgb(246,123,29)" fg:x="14859" fg:w="8"/><text x="92.4103%" y="863.50"></text></g><g><title>bevy_example`&lt;wgpu_core::resource::Texture as core::ops::drop::Drop&gt;::drop (8 samples, 0.05%)</title><rect x="92.1603%" y="837" width="0.0496%" height="15" fill="rgb(209,62,40)" fg:x="14859" fg:w="8"/><text x="92.4103%" y="847.50"></text></g><g><title>bevy_example`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::destroy_texture (8 samples, 0.05%)</title><rect x="92.1603%" y="821" width="0.0496%" height="15" fill="rgb(218,4,25)" fg:x="14859" fg:w="8"/><text x="92.4103%" y="831.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyTexture dealloc] (8 samples, 0.05%)</title><rect x="92.1603%" y="805" width="0.0496%" height="15" fill="rgb(253,91,49)" fg:x="14859" fg:w="8"/><text x="92.4103%" y="815.50"></text></g><g><title>AGXMetalG14X`-[AGXTexture dealloc] (8 samples, 0.05%)</title><rect x="92.1603%" y="789" width="0.0496%" height="15" fill="rgb(228,155,29)" fg:x="14859" fg:w="8"/><text x="92.4103%" y="799.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_render::texture::gpu_image::GpuImage&gt; (9 samples, 0.06%)</title><rect x="92.1603%" y="917" width="0.0558%" height="15" fill="rgb(243,57,37)" fg:x="14859" fg:w="9"/><text x="92.4103%" y="927.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.06%)</title><rect x="92.1603%" y="901" width="0.0558%" height="15" fill="rgb(244,167,17)" fg:x="14859" fg:w="9"/><text x="92.4103%" y="911.50"></text></g><g><title>bevy_example`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::texture_view_drop (9 samples, 0.06%)</title><rect x="92.1603%" y="885" width="0.0558%" height="15" fill="rgb(207,181,38)" fg:x="14859" fg:w="9"/><text x="92.4103%" y="895.50"></text></g><g><title>bevy_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.06%)</title><rect x="92.1603%" y="869" width="0.0558%" height="15" fill="rgb(211,8,23)" fg:x="14859" fg:w="9"/><text x="92.4103%" y="879.50"></text></g><g><title>bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (11,148 samples, 69.14%)</title><rect x="23.5750%" y="933" width="69.1435%" height="15" fill="rgb(235,11,44)" fg:x="3801" fg:w="11148"/><text x="23.8250%" y="943.50">bevy_example`&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::r..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (77 samples, 0.48%)</title><rect x="92.2409%" y="917" width="0.4776%" height="15" fill="rgb(248,18,52)" fg:x="14872" fg:w="77"/><text x="92.4909%" y="927.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (11,615 samples, 72.04%)</title><rect x="20.7095%" y="981" width="72.0399%" height="15" fill="rgb(208,4,7)" fg:x="3339" fg:w="11615"/><text x="20.9595%" y="991.50">bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>bevy_example`std::panic::catch_unwind (11,182 samples, 69.35%)</title><rect x="23.3951%" y="965" width="69.3543%" height="15" fill="rgb(240,17,39)" fg:x="3772" fg:w="11182"/><text x="23.6451%" y="975.50">bevy_example`std::panic::catch_unwind</text></g><g><title>bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (11,154 samples, 69.18%)</title><rect x="23.5688%" y="949" width="69.1807%" height="15" fill="rgb(207,170,3)" fg:x="3800" fg:w="11154"/><text x="23.8188%" y="959.50">bevy_example`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe</text></g><g><title>bevy_example`alloc::task::raw_waker::wake (112 samples, 0.69%)</title><rect x="92.7557%" y="981" width="0.6947%" height="15" fill="rgb(236,100,52)" fg:x="14955" fg:w="112"/><text x="93.0057%" y="991.50"></text></g><g><title>bevy_example`parking::Inner::unpark (112 samples, 0.69%)</title><rect x="92.7557%" y="965" width="0.6947%" height="15" fill="rgb(246,78,51)" fg:x="14955" fg:w="112"/><text x="93.0057%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (111 samples, 0.69%)</title><rect x="92.7619%" y="949" width="0.6885%" height="15" fill="rgb(211,17,15)" fg:x="14956" fg:w="111"/><text x="93.0119%" y="959.50"></text></g><g><title>bevy_example`wgpu_core::command::CommandEncoder::open_pass (2 samples, 0.01%)</title><rect x="93.4504%" y="885" width="0.0124%" height="15" fill="rgb(209,59,46)" fg:x="15067" fg:w="2"/><text x="93.7004%" y="895.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (2 samples, 0.01%)</title><rect x="93.4504%" y="869" width="0.0124%" height="15" fill="rgb(210,92,25)" fg:x="15067" fg:w="2"/><text x="93.7004%" y="879.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (2 samples, 0.01%)</title><rect x="93.4504%" y="853" width="0.0124%" height="15" fill="rgb(238,174,52)" fg:x="15067" fg:w="2"/><text x="93.7004%" y="863.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandQueue commandBufferWithUnretainedReferences] (2 samples, 0.01%)</title><rect x="93.4504%" y="837" width="0.0124%" height="15" fill="rgb(230,73,7)" fg:x="15067" fg:w="2"/><text x="93.7004%" y="847.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer initWithQueue:retainedReferences:] (2 samples, 0.01%)</title><rect x="93.4504%" y="821" width="0.0124%" height="15" fill="rgb(243,124,40)" fg:x="15067" fg:w="2"/><text x="93.7004%" y="831.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.01%)</title><rect x="93.4504%" y="805" width="0.0124%" height="15" fill="rgb(244,170,11)" fg:x="15067" fg:w="2"/><text x="93.7004%" y="815.50"></text></g><g><title>bevy_example`wgpu_core::command::render::RenderPassInfo::start (2 samples, 0.01%)</title><rect x="93.4628%" y="885" width="0.0124%" height="15" fill="rgb(207,114,54)" fg:x="15069" fg:w="2"/><text x="93.7128%" y="895.50"></text></g><g><title>bevy_example`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (2 samples, 0.01%)</title><rect x="93.4628%" y="869" width="0.0124%" height="15" fill="rgb(205,42,20)" fg:x="15069" fg:w="2"/><text x="93.7128%" y="879.50"></text></g><g><title>bevy_example`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (2 samples, 0.01%)</title><rect x="93.4628%" y="853" width="0.0124%" height="15" fill="rgb(230,30,28)" fg:x="15069" fg:w="2"/><text x="93.7128%" y="863.50"></text></g><g><title>bevy_example`objc::rc::autorelease::autoreleasepool (2 samples, 0.01%)</title><rect x="93.4628%" y="837" width="0.0124%" height="15" fill="rgb(205,73,54)" fg:x="15069" fg:w="2"/><text x="93.7128%" y="847.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (2 samples, 0.01%)</title><rect x="93.4628%" y="821" width="0.0124%" height="15" fill="rgb(254,227,23)" fg:x="15069" fg:w="2"/><text x="93.7128%" y="831.50"></text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.04%)</title><rect x="93.4504%" y="949" width="0.0434%" height="15" fill="rgb(228,202,34)" fg:x="15067" fg:w="7"/><text x="93.7004%" y="959.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (7 samples, 0.04%)</title><rect x="93.4504%" y="933" width="0.0434%" height="15" fill="rgb(222,225,37)" fg:x="15067" fg:w="7"/><text x="93.7004%" y="943.50"></text></g><g><title>bevy_example`&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (7 samples, 0.04%)</title><rect x="93.4504%" y="917" width="0.0434%" height="15" fill="rgb(221,14,54)" fg:x="15067" fg:w="7"/><text x="93.7004%" y="927.50"></text></g><g><title>bevy_example`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (7 samples, 0.04%)</title><rect x="93.4504%" y="901" width="0.0434%" height="15" fill="rgb(254,102,2)" fg:x="15067" fg:w="7"/><text x="93.7004%" y="911.50"></text></g><g><title>bevy_example`async_executor::Executor::spawn_inner::_{{closure}} (8 samples, 0.05%)</title><rect x="93.4504%" y="981" width="0.0496%" height="15" fill="rgb(232,104,17)" fg:x="15067" fg:w="8"/><text x="93.7004%" y="991.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.05%)</title><rect x="93.4504%" y="965" width="0.0496%" height="15" fill="rgb(250,220,14)" fg:x="15067" fg:w="8"/><text x="93.7004%" y="975.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (2 samples, 0.01%)</title><rect x="93.6178%" y="965" width="0.0124%" height="15" fill="rgb(241,158,9)" fg:x="15094" fg:w="2"/><text x="93.8678%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (299 samples, 1.85%)</title><rect x="93.6364%" y="949" width="1.8545%" height="15" fill="rgb(246,9,43)" fg:x="15097" fg:w="299"/><text x="93.8864%" y="959.50">l..</text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (293 samples, 1.82%)</title><rect x="93.6736%" y="933" width="1.8173%" height="15" fill="rgb(206,73,33)" fg:x="15103" fg:w="293"/><text x="93.9236%" y="943.50">l..</text></g><g><title>bevy_example`std::sys::pal::unix::sync::mutex::Mutex::lock (314 samples, 1.95%)</title><rect x="93.6302%" y="965" width="1.9475%" height="15" fill="rgb(222,79,8)" fg:x="15096" fg:w="314"/><text x="93.8802%" y="975.50">b..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.09%)</title><rect x="95.4909%" y="949" width="0.0868%" height="15" fill="rgb(234,8,54)" fg:x="15396" fg:w="14"/><text x="95.7409%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (148 samples, 0.92%)</title><rect x="95.5839%" y="965" width="0.9179%" height="15" fill="rgb(209,134,38)" fg:x="15411" fg:w="148"/><text x="95.8339%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (148 samples, 0.92%)</title><rect x="95.5839%" y="949" width="0.9179%" height="15" fill="rgb(230,127,29)" fg:x="15411" fg:w="148"/><text x="95.8339%" y="959.50"></text></g><g><title>bevy_example`core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (495 samples, 3.07%)</title><rect x="93.5062%" y="981" width="3.0701%" height="15" fill="rgb(242,44,41)" fg:x="15076" fg:w="495"/><text x="93.7562%" y="991.50">bev..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (12 samples, 0.07%)</title><rect x="96.5019%" y="965" width="0.0744%" height="15" fill="rgb(222,56,43)" fg:x="15559" fg:w="12"/><text x="96.7519%" y="975.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (12,319 samples, 76.41%)</title><rect x="20.1761%" y="997" width="76.4064%" height="15" fill="rgb(238,39,47)" fg:x="3253" fg:w="12319"/><text x="20.4261%" y="1007.50">bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::run</text></g><g><title>bevy_example`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (19 samples, 0.12%)</title><rect x="96.5825%" y="997" width="0.1178%" height="15" fill="rgb(226,79,43)" fg:x="15572" fg:w="19"/><text x="96.8325%" y="1007.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (18 samples, 0.11%)</title><rect x="96.7004%" y="997" width="0.1116%" height="15" fill="rgb(242,105,53)" fg:x="15591" fg:w="18"/><text x="96.9504%" y="1007.50"></text></g><g><title>bevy_example`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,812 samples, 79.46%)</title><rect x="17.3665%" y="1013" width="79.4641%" height="15" fill="rgb(251,132,46)" fg:x="2800" fg:w="12812"/><text x="17.6165%" y="1023.50">bevy_example`&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll</text></g><g><title>bevy_example`async_executor::Ticker::sleep (2 samples, 0.01%)</title><rect x="96.8306%" y="1013" width="0.0124%" height="15" fill="rgb(231,77,14)" fg:x="15612" fg:w="2"/><text x="97.0806%" y="1023.50"></text></g><g><title>bevy_example`async_task::raw::RawTask&lt;F,T,S,M&gt;::run (4 samples, 0.02%)</title><rect x="96.8554%" y="1013" width="0.0248%" height="15" fill="rgb(240,135,9)" fg:x="15616" fg:w="4"/><text x="97.1054%" y="1023.50"></text></g><g><title>bevy_example`concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.02%)</title><rect x="96.8802%" y="1013" width="0.0248%" height="15" fill="rgb(248,109,14)" fg:x="15620" fg:w="4"/><text x="97.1302%" y="1023.50"></text></g><g><title>bevy_example`concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.01%)</title><rect x="96.9050%" y="1013" width="0.0124%" height="15" fill="rgb(227,146,52)" fg:x="15624" fg:w="2"/><text x="97.1550%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (479 samples, 2.97%)</title><rect x="96.9795%" y="997" width="2.9709%" height="15" fill="rgb(232,54,3)" fg:x="15636" fg:w="479"/><text x="97.2295%" y="1007.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (3 samples, 0.02%)</title><rect x="99.9504%" y="997" width="0.0186%" height="15" fill="rgb(229,201,43)" fg:x="16115" fg:w="3"/><text x="100.2004%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (2 samples, 0.01%)</title><rect x="99.9566%" y="981" width="0.0124%" height="15" fill="rgb(252,161,33)" fg:x="16116" fg:w="2"/><text x="100.2066%" y="991.50"></text></g><g><title>bevy_example`core::ops::function::FnOnce::call_once{{vtable.shim}} (14,628 samples, 90.73%)</title><rect x="9.2539%" y="1077" width="90.7275%" height="15" fill="rgb(226,146,40)" fg:x="1492" fg:w="14628"/><text x="9.5039%" y="1087.50">bevy_example`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>bevy_example`std::sys::backtrace::__rust_begin_short_backtrace (14,628 samples, 90.73%)</title><rect x="9.2539%" y="1061" width="90.7275%" height="15" fill="rgb(219,47,25)" fg:x="1492" fg:w="14628"/><text x="9.5039%" y="1071.50">bevy_example`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (13,322 samples, 82.63%)</title><rect x="17.3541%" y="1045" width="82.6273%" height="15" fill="rgb(250,135,13)" fg:x="2798" fg:w="13322"/><text x="17.6041%" y="1055.50">bevy_example`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>bevy_example`std::thread::local::LocalKey&lt;T&gt;::with (13,321 samples, 82.62%)</title><rect x="17.3603%" y="1029" width="82.6211%" height="15" fill="rgb(219,229,18)" fg:x="2799" fg:w="13321"/><text x="17.6103%" y="1039.50">bevy_example`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>bevy_example`parking::Inner::park (494 samples, 3.06%)</title><rect x="96.9174%" y="1013" width="3.0639%" height="15" fill="rgb(217,152,27)" fg:x="15626" fg:w="494"/><text x="97.1674%" y="1023.50">bev..</text></g><g><title>bevy_example`std::sys::pal::unix::thread::Thread::new::thread_start (14,630 samples, 90.74%)</title><rect x="9.2539%" y="1093" width="90.7399%" height="15" fill="rgb(225,71,47)" fg:x="1492" fg:w="14630"/><text x="9.5039%" y="1103.50">bevy_example`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>all (16,123 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(220,139,14)" fg:x="0" fg:w="16123"/><text x="0.2500%" y="1151.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (14,711 samples, 91.24%)</title><rect x="8.7577%" y="1125" width="91.2423%" height="15" fill="rgb(247,54,32)" fg:x="1412" fg:w="14711"/><text x="9.0077%" y="1135.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (14,711 samples, 91.24%)</title><rect x="8.7577%" y="1109" width="91.2423%" height="15" fill="rgb(252,131,39)" fg:x="1412" fg:w="14711"/><text x="9.0077%" y="1119.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>